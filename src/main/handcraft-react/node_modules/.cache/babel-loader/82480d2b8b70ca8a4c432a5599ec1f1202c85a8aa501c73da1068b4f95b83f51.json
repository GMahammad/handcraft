{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nconst SearchFunction = () => {\n  _s();\n  const [searchTitle, setSearchTitle] = useState(\"\");\n  const [categoryId, setCategoryId] = useState(0);\n  const [invalidChar, setInvalidChar] = useState(false);\n  const [minPrice, setMinPrice] = useState(0);\n  const [maxPrice, setMaxPrice] = useState(10000);\n  const [priceError, setPriceError] = useState(false);\n  const [httpError, setHttpError] = useState(null);\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    const fetchProductByAllInputs = async () => {\n      let url = \"http://localhost:8080/api/products\";\n      if (minPrice == null || maxPrice == null) {\n        setMinPrice(0);\n        setMaxPrice(10000);\n      }\n      if (searchTitle !== \"\" && categoryId !== 0 && minPrice !== 0 && maxPrice !== 10000) {\n        url = `http://localhost:8080/api/products/search/findByProductNameContainingIgnoreCaseAndCategoryAndPriceBetween?productName=${searchTitle}&category=${categoryId}%20&minPrice=${minPrice}%20&maxPrice=${maxPrice}%20`;\n      } else if (searchTitle !== \"\" && categoryId !== 0 && minPrice === 0 && maxPrice === 10000) {\n        url = `http://localhost:8080/api/products/search/findByProductNameContainingIgnoreCaseAndCategory?productName=${searchTitle}&category=${categoryId}%20`;\n      } else if (searchTitle !== \"\" && categoryId === 0 && minPrice === 0 && maxPrice === 10000) {\n        url = `http://localhost:8080/api/products/search/findByProductNameContainingIgnoreCase?productName=${searchTitle}`;\n      } else if (searchTitle !== \"\" && categoryId === 0 && minPrice !== 0 && maxPrice !== 10000) {\n        url = `http://localhost:8080/api/products/search/findByProductNameContainingIgnoreCaseAndPriceBetween?productName=${searchTitle}&minPrice=${minPrice}%20&maxPrice=${maxPrice}%20`;\n      } else if (searchTitle === \"\" && categoryId !== 0 && minPrice !== 0 && maxPrice !== 10000) {\n        url = `http://localhost:8080/api/products/search/findByCategoryAndPriceBetween?category=${categoryId}%20&minPrice=${minPrice}%20&maxPrice=${maxPrice}%20`;\n      } else if (searchTitle === \"\" && categoryId !== 0 && minPrice === 0 && maxPrice === 10000) {\n        url = `http://localhost:8080/api/products/search/findByCategory?category=${categoryId}%20`;\n      } else if (searchTitle === \"\" && categoryId === 0 && minPrice !== 0 && maxPrice !== 10000) {\n        url = `http://localhost:8080/api/products/search/findByPriceBetween?minPrice=${minPrice}%20&maxPrice=${maxPrice}%20`;\n      } else {\n        url = `http://localhost:8080/api/products/`;\n      }\n      if (minPrice >= 0 && maxPrice > minPrice) {\n        setPriceError(false);\n        const responseData = await fetch(url);\n        console.log(url);\n        if (!responseData.ok) {\n          throw new Error(\"Something went wrong!\");\n        }\n        const responseJson = await responseData.json();\n        setProducts(responseJson._embedded.products);\n      } else {\n        setPriceError(true);\n      }\n    };\n    fetchProductByAllInputs().catch(err => setHttpError(err.message));\n  }, [searchTitle, minPrice, maxPrice, categoryId]);\n};\n_s(SearchFunction, \"QrHM5+p+2Xg8XFV+ILacgxQXzMQ=\");\n_c = SearchFunction;\nexport default SearchFunction;\nvar _c;\n$RefreshReg$(_c, \"SearchFunction\");","map":{"version":3,"names":["useEffect","useState","SearchFunction","_s","searchTitle","setSearchTitle","categoryId","setCategoryId","invalidChar","setInvalidChar","minPrice","setMinPrice","maxPrice","setMaxPrice","priceError","setPriceError","httpError","setHttpError","products","setProducts","fetchProductByAllInputs","url","responseData","fetch","console","log","ok","Error","responseJson","json","_embedded","catch","err","message","_c","$RefreshReg$"],"sources":["C:/Users/Mehemmed/Desktop/Code{1}/Projects/handcraft/src/main/handcraft-react/src/Utils/SearchFunction.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nconst SearchFunction = () => {\r\n  const [searchTitle, setSearchTitle] = useState(\"\");\r\n  const [categoryId, setCategoryId] = useState(0);\r\n  const [invalidChar, setInvalidChar] = useState(false);\r\n  const [minPrice, setMinPrice] = useState(0);\r\n  const [maxPrice, setMaxPrice] = useState(10000);\r\n  const [priceError, setPriceError] = useState(false);\r\n  const [httpError, setHttpError] = useState(null);\r\n  const [products, setProducts] = useState<ProductModel[]>([]);\r\n  useEffect(() => {\r\n    const fetchProductByAllInputs = async () => {\r\n      let url = \"http://localhost:8080/api/products\";\r\n      if (minPrice == null || maxPrice == null) {\r\n        setMinPrice(0);\r\n        setMaxPrice(10000);\r\n      }\r\n      if (\r\n        searchTitle !== \"\" &&\r\n        categoryId !== 0 &&\r\n        minPrice !== 0 &&\r\n        maxPrice !== 10000\r\n      ) {\r\n        url = `http://localhost:8080/api/products/search/findByProductNameContainingIgnoreCaseAndCategoryAndPriceBetween?productName=${searchTitle}&category=${categoryId}%20&minPrice=${minPrice}%20&maxPrice=${maxPrice}%20`;\r\n      } else if (\r\n        searchTitle !== \"\" &&\r\n        categoryId !== 0 &&\r\n        minPrice === 0 &&\r\n        maxPrice === 10000\r\n      ) {\r\n        url = `http://localhost:8080/api/products/search/findByProductNameContainingIgnoreCaseAndCategory?productName=${searchTitle}&category=${categoryId}%20`;\r\n      } else if (\r\n        searchTitle !== \"\" &&\r\n        categoryId === 0 &&\r\n        minPrice === 0 &&\r\n        maxPrice === 10000\r\n      ) {\r\n        url = `http://localhost:8080/api/products/search/findByProductNameContainingIgnoreCase?productName=${searchTitle}`;\r\n      } else if (\r\n        searchTitle !== \"\" &&\r\n        categoryId === 0 &&\r\n        minPrice !== 0 &&\r\n        maxPrice !== 10000\r\n      ) {\r\n        url = `http://localhost:8080/api/products/search/findByProductNameContainingIgnoreCaseAndPriceBetween?productName=${searchTitle}&minPrice=${minPrice}%20&maxPrice=${maxPrice}%20`;\r\n      } else if (\r\n        searchTitle === \"\" &&\r\n        categoryId !== 0 &&\r\n        minPrice !== 0 &&\r\n        maxPrice !== 10000\r\n      ) {\r\n        url = `http://localhost:8080/api/products/search/findByCategoryAndPriceBetween?category=${categoryId}%20&minPrice=${minPrice}%20&maxPrice=${maxPrice}%20`;\r\n      } else if (\r\n        searchTitle === \"\" &&\r\n        categoryId !== 0 &&\r\n        minPrice === 0 &&\r\n        maxPrice === 10000\r\n      ) {\r\n        url = `http://localhost:8080/api/products/search/findByCategory?category=${categoryId}%20`;\r\n      } else if (\r\n        searchTitle === \"\" &&\r\n        categoryId === 0 &&\r\n        minPrice !== 0 &&\r\n        maxPrice !== 10000\r\n      ) {\r\n        url = `http://localhost:8080/api/products/search/findByPriceBetween?minPrice=${minPrice}%20&maxPrice=${maxPrice}%20`;\r\n      } else {\r\n        url = `http://localhost:8080/api/products/`;\r\n      }\r\n      if (minPrice >= 0 && maxPrice > minPrice) {\r\n        setPriceError(false);\r\n        const responseData = await fetch(url);\r\n        console.log(url);\r\n\r\n        if (!responseData.ok) {\r\n          throw new Error(\"Something went wrong!\");\r\n        }\r\n        const responseJson = await responseData.json();\r\n        setProducts(responseJson._embedded.products);\r\n      } else {\r\n        setPriceError(true);\r\n      }\r\n    };\r\n\r\n    fetchProductByAllInputs().catch((err) => setHttpError(err.message));\r\n  }, [searchTitle, minPrice, maxPrice, categoryId]);\r\n};\r\n\r\nexport default SearchFunction;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}