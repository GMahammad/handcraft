{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nexport const getCardItems = createAsyncThunk(\"cart/getCartItems\", async () => {\n  const url = \"http://localhost:8080/api/products\";\n  return fetch(url).then(response => response.json().then(dataJson => dataJson._embedded.products)).catch(err => console.log(err));\n});\nconst initialState = {\n  cartItems: {\n    elements: [],\n    amount: 0\n  },\n  amount: 5,\n  total: 0,\n  isLoadingCart: true\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    clearCard: state => {\n      state.cartItems = {\n        elements: [],\n        amount: 0\n      };\n    },\n    removeItem: (state, action) => {\n      const itemId = action.payload;\n      state.cartItems.elements = state.cartItems.elements.filter(x => x.productId !== itemId);\n    },\n    calculateTotals: state => {\n      let amount = state.cartItems.amount;\n      let total = 0;\n      state.cartItems.forEach(item => {\n        total += item.price * item.price;\n      });\n      state.total = total;\n    }\n  },\n  extraReducers: {\n    [String(getCardItems.pending)]: state => {\n      state.isLoadingCart = true;\n    },\n    [String(getCardItems.fulfilled)]: (state, action) => {\n      state.isLoadingCart = false;\n      state.cartItems = action.payload;\n    },\n    [String(getCardItems.rejected)]: state => {\n      state.isLoadingCart = true;\n    }\n  }\n});\nexport const {\n  clearCard,\n  removeItem,\n  calculateTotals\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","getCardItems","url","fetch","then","response","json","dataJson","_embedded","products","catch","err","console","log","initialState","cartItems","elements","amount","total","isLoadingCart","cartSlice","name","reducers","clearCard","state","removeItem","action","itemId","payload","filter","x","productId","calculateTotals","forEach","item","price","extraReducers","String","pending","fulfilled","rejected","actions","reducer"],"sources":["C:/Users/Mehemmed/Desktop/Code{1}/Projects/handcraft/src/main/handcraft-react/src/Cart/cartSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport ProductModel from \"../Models/ProductModel\";\r\n\r\n\r\nexport const getCardItems = createAsyncThunk(\"cart/getCartItems\", async() => {\r\n  const url = \"http://localhost:8080/api/products\";\r\n  return fetch(url)\r\n    .then((response) =>\r\n      response.json().then((dataJson) => dataJson._embedded.products)\r\n    )\r\n    .catch((err) => console.log(err));\r\n});\r\n\r\n\r\nconst initialState = {\r\n  cartItems: {elements:[],amount:0},\r\n  amount: 5,\r\n  total: 0,\r\n  isLoadingCart: true,\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState,\r\n  reducers: {\r\n    clearCard:(state:any)=>{\r\n        state.cartItems={elements:[],amount:0}\r\n    },\r\n    removeItem:(state:any,action)=>{\r\n      const itemId = action.payload\r\n      state.cartItems.elements=state.cartItems.elements.filter((x:any)=> x.productId !== itemId)\r\n    },\r\n    calculateTotals:(state:any)=>{\r\n      let amount = state.cartItems.amount\r\n      let total = 0;\r\n      state.cartItems.forEach((item:ProductModel) => {\r\n        total += item.price * item.price;\r\n      });\r\n      state.total = total;\r\n    }\r\n  },\r\n  extraReducers:{\r\n    [String(getCardItems.pending)]:(state:any)=>{\r\n        state.isLoadingCart=true\r\n    },\r\n    [String(getCardItems.fulfilled)]:(state:any,action)=>{\r\n        state.isLoadingCart=false;\r\n        state.cartItems = action.payload\r\n    },\r\n    [String(getCardItems.rejected)]:(state:any)=>{\r\n        state.isLoadingCart=true;\r\n    }\r\n  }\r\n});\r\nexport const{clearCard,removeItem,calculateTotals}= cartSlice.actions;\r\nexport default cartSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAIhE,OAAO,MAAMC,YAAY,GAAGF,gBAAgB,CAAC,mBAAmB,EAAE,YAAW;EAC3E,MAAMG,GAAG,GAAG,oCAAoC;EAChD,OAAOC,KAAK,CAACD,GAAG,CAAC,CACdE,IAAI,CAAEC,QAAQ,IACbA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAACF,IAAI,CAAEG,QAAQ,IAAKA,QAAQ,CAACC,SAAS,CAACC,QAAQ,CAChE,CAAC,CACAC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;AACrC,CAAC,CAAC;AAGF,MAAMG,YAAY,GAAG;EACnBC,SAAS,EAAE;IAACC,QAAQ,EAAC,EAAE;IAACC,MAAM,EAAC;EAAC,CAAC;EACjCA,MAAM,EAAE,CAAC;EACTC,KAAK,EAAE,CAAC;EACRC,aAAa,EAAE;AACjB,CAAC;AAED,MAAMC,SAAS,GAAGpB,WAAW,CAAC;EAC5BqB,IAAI,EAAE,MAAM;EACZP,YAAY;EACZQ,QAAQ,EAAE;IACRC,SAAS,EAAEC,KAAS,IAAG;MACnBA,KAAK,CAACT,SAAS,GAAC;QAACC,QAAQ,EAAC,EAAE;QAACC,MAAM,EAAC;MAAC,CAAC;IAC1C,CAAC;IACDQ,UAAU,EAACA,CAACD,KAAS,EAACE,MAAM,KAAG;MAC7B,MAAMC,MAAM,GAAGD,MAAM,CAACE,OAAO;MAC7BJ,KAAK,CAACT,SAAS,CAACC,QAAQ,GAACQ,KAAK,CAACT,SAAS,CAACC,QAAQ,CAACa,MAAM,CAAEC,CAAK,IAAIA,CAAC,CAACC,SAAS,KAAKJ,MAAM,CAAC;IAC5F,CAAC;IACDK,eAAe,EAAER,KAAS,IAAG;MAC3B,IAAIP,MAAM,GAAGO,KAAK,CAACT,SAAS,CAACE,MAAM;MACnC,IAAIC,KAAK,GAAG,CAAC;MACbM,KAAK,CAACT,SAAS,CAACkB,OAAO,CAAEC,IAAiB,IAAK;QAC7ChB,KAAK,IAAIgB,IAAI,CAACC,KAAK,GAAGD,IAAI,CAACC,KAAK;MAClC,CAAC,CAAC;MACFX,KAAK,CAACN,KAAK,GAAGA,KAAK;IACrB;EACF,CAAC;EACDkB,aAAa,EAAC;IACZ,CAACC,MAAM,CAACpC,YAAY,CAACqC,OAAO,CAAC,GAAGd,KAAS,IAAG;MACxCA,KAAK,CAACL,aAAa,GAAC,IAAI;IAC5B,CAAC;IACD,CAACkB,MAAM,CAACpC,YAAY,CAACsC,SAAS,CAAC,GAAE,CAACf,KAAS,EAACE,MAAM,KAAG;MACjDF,KAAK,CAACL,aAAa,GAAC,KAAK;MACzBK,KAAK,CAACT,SAAS,GAAGW,MAAM,CAACE,OAAO;IACpC,CAAC;IACD,CAACS,MAAM,CAACpC,YAAY,CAACuC,QAAQ,CAAC,GAAGhB,KAAS,IAAG;MACzCA,KAAK,CAACL,aAAa,GAAC,IAAI;IAC5B;EACF;AACF,CAAC,CAAC;AACF,OAAO,MAAK;EAACI,SAAS;EAACE,UAAU;EAACO;AAAe,CAAC,GAAEZ,SAAS,CAACqB,OAAO;AACrE,eAAerB,SAAS,CAACsB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}