{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nlet cartItems = [];\nconst fetchProducts = async () => {\n  const url = \"http://localhost:8080/api/products\";\n  const responseData = await fetch(url);\n  if (!responseData.ok) {\n    throw new Error(\"Something went wrong!\");\n  }\n  const responseJson = await responseData.json();\n  const fetchedData = responseJson._embedded.products;\n  const newCartItems = fetchedData.map(data => ({\n    productId: data.productId,\n    productName: data.productName,\n    productDescription: data.productDescription,\n    discount: data.discount,\n    discountedPrice: data.discountedPrice,\n    price: data.price,\n    rating: data.rating\n  }));\n  cartItems.newCartItems;\n};\nfetchProducts().then(newCartItems => {\n  console.log(newCartItems);\n  // Update the state or do further processing with the new array\n}).catch(err => {\n  console.error(err);\n});\nconst initialState = {\n  cartItems: cartItems,\n  amount: 0,\n  total: 0,\n  isLoadingCart: true\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {}\n});\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","cartItems","fetchProducts","url","responseData","fetch","ok","Error","responseJson","json","fetchedData","_embedded","products","newCartItems","map","data","productId","productName","productDescription","discount","discountedPrice","price","rating","then","console","log","catch","err","error","initialState","amount","total","isLoadingCart","cartSlice","name","reducers","reducer"],"sources":["C:/Users/Mehemmed/Desktop/Code{1}/Projects/handcraft/src/main/handcraft-react/src/Cart/cartSlice.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport ProductModel from \"../Models/ProductModel\";\r\n\r\n\r\nlet cartItems:ProductModel[]=[]\r\n\r\nconst fetchProducts = async () => {\r\n    const url = \"http://localhost:8080/api/products\";\r\n    const responseData = await fetch(url);\r\n    if (!responseData.ok) {\r\n      throw new Error(\"Something went wrong!\");\r\n    }\r\n    const responseJson = await responseData.json();\r\n    const fetchedData = responseJson._embedded.products;\r\n    \r\n    const newCartItems:ProductModel[] = fetchedData.map((data: ProductModel) => ({\r\n      productId: data.productId,\r\n      productName: data.productName,\r\n      productDescription: data.productDescription,\r\n      discount: data.discount,\r\n      discountedPrice: data.discountedPrice,\r\n      price: data.price,\r\n      rating: data.rating,\r\n    }));\r\n \r\n    cartItems.newCartItems;\r\n  };\r\n  \r\n  fetchProducts()\r\n    .then((newCartItems) => {\r\n      console.log(newCartItems);\r\n      // Update the state or do further processing with the new array\r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n    });\r\n  \r\n\r\nconst initialState = {\r\n  cartItems: cartItems,\r\n  amount: 0,\r\n  total: 0,\r\n  isLoadingCart: true,\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState,\r\n  reducers: {},\r\n});\r\n\r\nexport default cartSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAI9C,IAAIC,SAAwB,GAAC,EAAE;AAE/B,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EAC9B,MAAMC,GAAG,GAAG,oCAAoC;EAChD,MAAMC,YAAY,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;EACrC,IAAI,CAACC,YAAY,CAACE,EAAE,EAAE;IACpB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAC1C;EACA,MAAMC,YAAY,GAAG,MAAMJ,YAAY,CAACK,IAAI,CAAC,CAAC;EAC9C,MAAMC,WAAW,GAAGF,YAAY,CAACG,SAAS,CAACC,QAAQ;EAEnD,MAAMC,YAA2B,GAAGH,WAAW,CAACI,GAAG,CAAEC,IAAkB,KAAM;IAC3EC,SAAS,EAAED,IAAI,CAACC,SAAS;IACzBC,WAAW,EAAEF,IAAI,CAACE,WAAW;IAC7BC,kBAAkB,EAAEH,IAAI,CAACG,kBAAkB;IAC3CC,QAAQ,EAAEJ,IAAI,CAACI,QAAQ;IACvBC,eAAe,EAAEL,IAAI,CAACK,eAAe;IACrCC,KAAK,EAAEN,IAAI,CAACM,KAAK;IACjBC,MAAM,EAAEP,IAAI,CAACO;EACf,CAAC,CAAC,CAAC;EAEHrB,SAAS,CAACY,YAAY;AACxB,CAAC;AAEDX,aAAa,CAAC,CAAC,CACZqB,IAAI,CAAEV,YAAY,IAAK;EACtBW,OAAO,CAACC,GAAG,CAACZ,YAAY,CAAC;EACzB;AACF,CAAC,CAAC,CACDa,KAAK,CAAEC,GAAG,IAAK;EACdH,OAAO,CAACI,KAAK,CAACD,GAAG,CAAC;AACpB,CAAC,CAAC;AAGN,MAAME,YAAY,GAAG;EACnB5B,SAAS,EAAEA,SAAS;EACpB6B,MAAM,EAAE,CAAC;EACTC,KAAK,EAAE,CAAC;EACRC,aAAa,EAAE;AACjB,CAAC;AAED,MAAMC,SAAS,GAAGjC,WAAW,CAAC;EAC5BkC,IAAI,EAAE,MAAM;EACZL,YAAY;EACZM,QAAQ,EAAE,CAAC;AACb,CAAC,CAAC;AAEF,eAAeF,SAAS,CAACG,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}