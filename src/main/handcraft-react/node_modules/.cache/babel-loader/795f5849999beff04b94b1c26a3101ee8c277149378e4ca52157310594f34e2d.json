{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n// export const getCardItems = createAsyncThunk(\"cart/getCartItems\", async() => {\n//   const url = \"http://localhost:8080/api/products\";\n//   return fetch(url)\n//     .then((response) =>\n//       response.json().then((dataJson) => dataJson._embedded.products)\n//     )\n//     .catch((err) => console.log(err));\n// });\nconst initialState = {\n  cartItems: [],\n  total: 0,\n  isLoadingCart: true,\n  count: 0,\n  hello: []\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    clearCart: state => {\n      state.cartItems = [];\n      state.count = 0;\n    },\n    /* state.cartItems= [\r\n      {item:{productId,productName},count,color},\r\n      {item:{productId,productName},count,color},\r\n      {item:{productId,productName},count,color},\r\n              ...\r\n    ]*/\n    addToCart: (state, action) => {\n      const {\n        product,\n        cartCount,\n        cartColor\n      } = action.payload;\n      let indexOfElem = state.cartItems.findIndex(item => item.item.productId === product.productId);\n      let indexOfElemColor = state.cartItems.findIndex(item => item.color == cartColor);\n      let indexOfProductId = state.cartItems;\n      // If there is not any elements which has found index inside of cartItems\n      if (indexOfElem === -1 || indexOfElemColor === -1) {\n        state.cartItems.push({\n          item: product,\n          count: cartCount,\n          color: cartColor\n        });\n        state.hello = [state.cartItems[0].item.productId];\n      } else if (indexOfElem === 0 || indexOfElemColor === 0) {\n        // state.cartItems\n      }\n    },\n    removeItem: (state, action) => {\n      const productId = action.payload;\n      const indexOfElem = state.cartItems.findIndex(item => item.item.productId === productId);\n      const removedCount = state.cartItems[indexOfElem].count;\n      state.count -= removedCount;\n      state.cartItems = state.cartItems.filter((item, index) => item.item.productId !== productId || index !== indexOfElem);\n    },\n    // cartItems = [{productId,n,p,...}]\n    calculateTotals: state => {\n      let totalPrice = 0;\n      state.cartItems.forEach(cartItem => {\n        totalPrice += cartItem.item.price * cartItem.count;\n      });\n      state.total = totalPrice;\n    }\n  }\n  // extraReducers:{\n  //   [String(getCardItems.pending)]:(state:any)=>{\n  //       state.isLoadingCart=true\n  //   },\n  //   [String(getCardItems.fulfilled)]:(state:any,action)=>{\n  //       state.isLoadingCart=false;\n  //       let count = 1\n  //       if(state.cartItems[0].items.filter((x:ProductModel)=> x.productId))\n  //       state.cartItems = [{\n  //         items:action.payload,\n  //         count:count\n  //       }]\n  //   },\n  //   [String(getCardItems.rejected)]:(state:any)=>{\n  //       state.isLoadingCart=true;\n  //   }\n  // }\n});\n\nexport const {\n  clearCart,\n  removeItem,\n  calculateTotals,\n  addToCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","cartItems","total","isLoadingCart","count","hello","cartSlice","name","reducers","clearCart","state","addToCart","action","product","cartCount","cartColor","payload","indexOfElem","findIndex","item","productId","indexOfElemColor","color","indexOfProductId","push","removeItem","removedCount","filter","index","calculateTotals","totalPrice","forEach","cartItem","price","actions","reducer"],"sources":["C:/Users/Mehemmed/Desktop/Code{1}/Projects/handcraft/src/main/handcraft-react/src/Cart/cartSlice.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport ProductModel from \"../Models/ProductModel\";\r\nimport { stat } from \"fs\";\r\n\r\n// export const getCardItems = createAsyncThunk(\"cart/getCartItems\", async() => {\r\n//   const url = \"http://localhost:8080/api/products\";\r\n//   return fetch(url)\r\n//     .then((response) =>\r\n//       response.json().then((dataJson) => dataJson._embedded.products)\r\n//     )\r\n//     .catch((err) => console.log(err));\r\n// });\r\n\r\nconst initialState = {\r\n  cartItems: [],\r\n  total: 0,\r\n  isLoadingCart: true,\r\n  count:0,\r\n  hello:[]\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState,\r\n  reducers: {\r\n    clearCart: (state: any) => {\r\n      state.cartItems = [];\r\n      state.count = 0\r\n    },\r\n\r\n\r\n    /* state.cartItems= [\r\n      {item:{productId,productName},count,color},\r\n      {item:{productId,productName},count,color},\r\n      {item:{productId,productName},count,color},\r\n              ...\r\n    ]*/\r\n    addToCart: (state: any, action) => {\r\n      const { product, cartCount, cartColor } = action.payload;\r\n      let indexOfElem = state.cartItems.findIndex(\r\n        (item: any) => item.item.productId === product.productId\r\n      );\r\n      let indexOfElemColor = state.cartItems.findIndex(\r\n        (item: any) => item.color == cartColor\r\n      );\r\n    \r\n\r\n      let indexOfProductId = state.cartItems\r\n      // If there is not any elements which has found index inside of cartItems\r\n      if (indexOfElem === -1 || indexOfElemColor === -1) {\r\n        state.cartItems.push({\r\n          item: product,\r\n          count: cartCount,\r\n          color: cartColor,\r\n        });\r\n      state.hello = [state.cartItems[0].item.productId]\r\n       \r\n      }else if(indexOfElem === 0 || indexOfElemColor ===0){\r\n        // state.cartItems\r\n      }\r\n    },\r\n\r\n    removeItem: (state: any, action) => {\r\n      const productId = action.payload;\r\n      const indexOfElem = state.cartItems.findIndex(\r\n        (item: any) => item.item.productId === productId\r\n      );\r\n      const removedCount = state.cartItems[indexOfElem].count\r\n      state.count -= removedCount\r\n      state.cartItems = state.cartItems.filter(\r\n        (item: any, index: number) =>\r\n          item.item.productId !== productId || index !== indexOfElem\r\n      );\r\n    },\r\n\r\n    // cartItems = [{productId,n,p,...}]\r\n    calculateTotals: (state: any) => {\r\n      let totalPrice = 0;\r\n      state.cartItems.forEach((cartItem: any) => {\r\n        totalPrice += cartItem.item.price * cartItem.count;\r\n      });\r\n\r\n      state.total = totalPrice;\r\n    },\r\n  },\r\n  // extraReducers:{\r\n  //   [String(getCardItems.pending)]:(state:any)=>{\r\n  //       state.isLoadingCart=true\r\n  //   },\r\n  //   [String(getCardItems.fulfilled)]:(state:any,action)=>{\r\n  //       state.isLoadingCart=false;\r\n  //       let count = 1\r\n  //       if(state.cartItems[0].items.filter((x:ProductModel)=> x.productId))\r\n  //       state.cartItems = [{\r\n  //         items:action.payload,\r\n  //         count:count\r\n  //       }]\r\n  //   },\r\n  //   [String(getCardItems.rejected)]:(state:any)=>{\r\n  //       state.isLoadingCart=true;\r\n  //   }\r\n  // }\r\n});\r\nexport const { clearCart, removeItem, calculateTotals, addToCart } =\r\n  cartSlice.actions;\r\nexport default cartSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}