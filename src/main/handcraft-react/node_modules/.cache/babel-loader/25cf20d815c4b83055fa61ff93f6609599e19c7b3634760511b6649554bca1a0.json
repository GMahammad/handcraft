{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";var initialAuthState={userEmail:\"\",name:\"\",accessToken:\"\",tokenType:\"\",roles:[],isAuthenticated:false,isAdmin:false,isMod:false};var authSlice=createSlice({name:\"auth\",initialState:initialAuthState,reducers:{loginSuccess:function loginSuccess(state,action){var user=action.payload.user;state.userEmail=user.email;state.name=user.firstName;state.accessToken=user.accessToken;state.tokenType=user.tokenType;state.roles=user.roles;},isAuthenticatedChecker:function isAuthenticatedChecker(state){if(state.roles.includes(\"USER\")===true){state.isAuthenticated=true;}},logout:function logout(state){state.userEmail=\"\";state.accessToken=\"\";state.tokenType=\"\";state.roles=[];state.name=\"\";state.isAuthenticated=false;},isModChecker:function isModChecker(state){if(state.roles.includes('MODERATOR')){state.isMod=true;}else{state.isMod=false;}},isAdminChecker:function isAdminChecker(state){if(state.roles.includes('ADMIN')){state.isAdmin=true;}else{state.isAdmin=false;}}}});var _authSlice$actions=authSlice.actions,loginSuccess=_authSlice$actions.loginSuccess,isAuthenticatedChecker=_authSlice$actions.isAuthenticatedChecker,logout=_authSlice$actions.logout,isAdminChecker=_authSlice$actions.isAdminChecker,isModChecker=_authSlice$actions.isModChecker;export{loginSuccess,isAuthenticatedChecker,logout,isAdminChecker,isModChecker};export default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialAuthState","userEmail","name","accessToken","tokenType","roles","isAuthenticated","isAdmin","isMod","authSlice","initialState","reducers","loginSuccess","state","action","user","payload","email","firstName","isAuthenticatedChecker","includes","logout","isModChecker","isAdminChecker","_authSlice$actions","actions","reducer"],"sources":["C:/Users/Mehemmed/Desktop/Code{1}/Projects/handcraft/src/main/handcraft-react/src/Auth/Data/authSlice.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialAuthState = {\r\n  userEmail: \"\",\r\n  name: \"\",\r\n  accessToken: \"\",\r\n  tokenType: \"\",\r\n  roles: [],\r\n  isAuthenticated: false,\r\n  isAdmin:false,\r\n  isMod:false\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState: initialAuthState,\r\n  reducers: {\r\n    loginSuccess: (state: any, action) => {\r\n      const { user } = action.payload;\r\n      state.userEmail = user.email;\r\n      state.name = user.firstName;\r\n      state.accessToken = user.accessToken;\r\n      state.tokenType = user.tokenType;\r\n      state.roles = user.roles;\r\n    },\r\n    isAuthenticatedChecker: (state: any) => {\r\n      if (state.roles.includes(\"USER\") === true) {\r\n        state.isAuthenticated = true;\r\n      }\r\n    },\r\n    logout: (state: any) => {\r\n      state.userEmail = \"\";\r\n      state.accessToken = \"\";\r\n      state.tokenType = \"\";\r\n      state.roles = [];\r\n      state.name = \"\";\r\n      state.isAuthenticated = false;\r\n    },\r\n    isModChecker:(state:any)=>{\r\n      if(state.roles.includes('MODERATOR')){\r\n        state.isMod = true\r\n      }else{\r\n        state.isMod = false\r\n      }\r\n    },\r\n    isAdminChecker:(state:any)=>{\r\n      if(state.roles.includes('ADMIN')){\r\n        state.isAdmin = true\r\n      }else{\r\n        state.isAdmin = false\r\n      }\r\n    }\r\n  },\r\n});\r\nexport const { loginSuccess, isAuthenticatedChecker, logout,isAdminChecker,isModChecker } =\r\n  authSlice.actions;\r\nexport default authSlice.reducer;\r\n"],"mappings":"AAAA,OAASA,WAAW,KAAQ,kBAAkB,CAE9C,GAAM,CAAAC,gBAAgB,CAAG,CACvBC,SAAS,CAAE,EAAE,CACbC,IAAI,CAAE,EAAE,CACRC,WAAW,CAAE,EAAE,CACfC,SAAS,CAAE,EAAE,CACbC,KAAK,CAAE,EAAE,CACTC,eAAe,CAAE,KAAK,CACtBC,OAAO,CAAC,KAAK,CACbC,KAAK,CAAC,KACR,CAAC,CAED,GAAM,CAAAC,SAAS,CAAGV,WAAW,CAAC,CAC5BG,IAAI,CAAE,MAAM,CACZQ,YAAY,CAAEV,gBAAgB,CAC9BW,QAAQ,CAAE,CACRC,YAAY,CAAE,SAAAA,aAACC,KAAU,CAAEC,MAAM,CAAK,CACpC,GAAQ,CAAAC,IAAI,CAAKD,MAAM,CAACE,OAAO,CAAvBD,IAAI,CACZF,KAAK,CAACZ,SAAS,CAAGc,IAAI,CAACE,KAAK,CAC5BJ,KAAK,CAACX,IAAI,CAAGa,IAAI,CAACG,SAAS,CAC3BL,KAAK,CAACV,WAAW,CAAGY,IAAI,CAACZ,WAAW,CACpCU,KAAK,CAACT,SAAS,CAAGW,IAAI,CAACX,SAAS,CAChCS,KAAK,CAACR,KAAK,CAAGU,IAAI,CAACV,KAAK,CAC1B,CAAC,CACDc,sBAAsB,CAAE,SAAAA,uBAACN,KAAU,CAAK,CACtC,GAAIA,KAAK,CAACR,KAAK,CAACe,QAAQ,CAAC,MAAM,CAAC,GAAK,IAAI,CAAE,CACzCP,KAAK,CAACP,eAAe,CAAG,IAAI,CAC9B,CACF,CAAC,CACDe,MAAM,CAAE,SAAAA,OAACR,KAAU,CAAK,CACtBA,KAAK,CAACZ,SAAS,CAAG,EAAE,CACpBY,KAAK,CAACV,WAAW,CAAG,EAAE,CACtBU,KAAK,CAACT,SAAS,CAAG,EAAE,CACpBS,KAAK,CAACR,KAAK,CAAG,EAAE,CAChBQ,KAAK,CAACX,IAAI,CAAG,EAAE,CACfW,KAAK,CAACP,eAAe,CAAG,KAAK,CAC/B,CAAC,CACDgB,YAAY,CAAC,SAAAA,aAACT,KAAS,CAAG,CACxB,GAAGA,KAAK,CAACR,KAAK,CAACe,QAAQ,CAAC,WAAW,CAAC,CAAC,CACnCP,KAAK,CAACL,KAAK,CAAG,IAAI,CACpB,CAAC,IAAI,CACHK,KAAK,CAACL,KAAK,CAAG,KAAK,CACrB,CACF,CAAC,CACDe,cAAc,CAAC,SAAAA,eAACV,KAAS,CAAG,CAC1B,GAAGA,KAAK,CAACR,KAAK,CAACe,QAAQ,CAAC,OAAO,CAAC,CAAC,CAC/BP,KAAK,CAACN,OAAO,CAAG,IAAI,CACtB,CAAC,IAAI,CACHM,KAAK,CAACN,OAAO,CAAG,KAAK,CACvB,CACF,CACF,CACF,CAAC,CAAC,CACK,IAAAiB,kBAAA,CACLf,SAAS,CAACgB,OAAO,CADJb,YAAY,CAAAY,kBAAA,CAAZZ,YAAY,CAAEO,sBAAsB,CAAAK,kBAAA,CAAtBL,sBAAsB,CAAEE,MAAM,CAAAG,kBAAA,CAANH,MAAM,CAACE,cAAc,CAAAC,kBAAA,CAAdD,cAAc,CAACD,YAAY,CAAAE,kBAAA,CAAZF,YAAY,CACnE,OAAAV,YAAA,CAAAO,sBAAA,CAAAE,MAAA,CAAAE,cAAA,CAAAD,YAAA,EACpB,cAAe,CAAAb,SAAS,CAACiB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}