{"ast":null,"code":"const buildSearchUrl = (searchTitle, categoryId, minPrice, maxPrice) => {\n  const baseUrl = \"http://localhost:8080/api/products/search\";\n  let url = baseUrl;\n  const appendQueryParam = param => {\n    url += url.includes(\"?\") ? `&${param}` : `?${param}`;\n  };\n  if (searchTitle !== \"\") {\n    appendQueryParam(`productName=${searchTitle}`);\n  }\n  if (categoryId !== 0) {\n    appendQueryParam(`category=${categoryId}`);\n  }\n  if (minPrice !== null && maxPrice !== null) {\n    appendQueryParam(`minPrice=${minPrice}&maxPrice=${maxPrice}`);\n  }\n  return url;\n};\nconst fetchProductByAllInputs = async (searchTitle, categoryId, minPrice, maxPrice, setProducts, setPriceError, setMinPrice, setMaxPrice) => {\n  let url = \"http://localhost:8080/api/products\";\n  if (minPrice == null || maxPrice == null) {\n    setMinPrice(0);\n    setMaxPrice(10000);\n  }\n  if (searchTitle !== \"\" && categoryId !== 0 && minPrice !== 0 && maxPrice !== 10000) {\n    url = `http://localhost:8080/api/products/search/findByProductNameContainingIgnoreCaseAndCategoryAndPriceBetween?productName=${searchTitle}&category=${categoryId}%20&minPrice=${minPrice}%20&maxPrice=${maxPrice}%20`;\n  } else if (searchTitle !== \"\" && categoryId !== 0 && minPrice === 0 && maxPrice === 10000) {\n    url = `http://localhost:8080/api/products/search/findByProductNameContainingIgnoreCaseAndCategory?productName=${searchTitle}&category=${categoryId}%20`;\n  } else if (searchTitle !== \"\" && categoryId === 0 && minPrice === 0 && maxPrice === 10000) {\n    url = `http://localhost:8080/api/products/search/findByProductNameContainingIgnoreCase?productName=${searchTitle}`;\n  } else if (searchTitle !== \"\" && categoryId === 0 && minPrice !== 0 && maxPrice !== 10000) {\n    url = `http://localhost:8080/api/products/search/findByProductNameContainingIgnoreCaseAndPriceBetween?productName=${searchTitle}&minPrice=${minPrice}%20&maxPrice=${maxPrice}%20`;\n  } else if (searchTitle === \"\" && categoryId !== 0 && minPrice !== 0 && maxPrice !== 10000) {\n    url = `http://localhost:8080/api/products/search/findByCategoryAndPriceBetween?category=${categoryId}%20&minPrice=${minPrice}%20&maxPrice=${maxPrice}%20`;\n  } else if (searchTitle === \"\" && categoryId !== 0 && minPrice === 0 && maxPrice === 10000) {\n    url = `http://localhost:8080/api/products/search/findByCategory?category=${categoryId}%20`;\n  } else if (searchTitle === \"\" && categoryId === 0 && minPrice !== 0 && maxPrice !== 10000) {\n    url = `http://localhost:8080/api/products/search/findByPriceBetween?minPrice=${minPrice}%20&maxPrice=${maxPrice}%20`;\n  } else {\n    url = `http://localhost:8080/api/products/`;\n  }\n  if (minPrice >= 0 && maxPrice > minPrice) {\n    setPriceError(false);\n    const responseData = await fetch(url);\n    if (!responseData.ok) {\n      throw new Error(\"Something went wrong!\");\n    }\n    const responseJson = await responseData.json();\n    setProducts(responseJson._embedded.products);\n  } else {\n    setPriceError(true);\n  }\n};\nexport { fetchProductByAllInputs };\nif (minPrice >= 0 && maxPrice > minPrice) {\n  setPriceError(false);\n  const responseData = await fetch(url);\n  if (!responseData.ok) {\n    throw new Error(\"Something went wrong!\");\n  }\n  const responseJson = await responseData.json();\n  setProducts(responseJson._embedded.products);\n} else {\n  setPriceError(true);\n}","map":{"version":3,"names":["buildSearchUrl","searchTitle","categoryId","minPrice","maxPrice","baseUrl","url","appendQueryParam","param","includes","fetchProductByAllInputs","setProducts","setPriceError","setMinPrice","setMaxPrice","responseData","fetch","ok","Error","responseJson","json","_embedded","products"],"sources":["C:/Users/Mehemmed/Desktop/Code{1}/Projects/handcraft/src/main/handcraft-react/src/Utils/SearchFunction.tsx"],"sourcesContent":["import { Dispatch, SetStateAction } from \"react\";\r\nconst buildSearchUrl = (\r\n  searchTitle: string,\r\n  categoryId: number,\r\n  minPrice: number | null,\r\n  maxPrice: number | null\r\n): string => {\r\n  const baseUrl = \"http://localhost:8080/api/products/search\";\r\n  let url = baseUrl;\r\n\r\n  const appendQueryParam = (param: string): void => {\r\n    url += url.includes(\"?\") ? `&${param}` : `?${param}`;\r\n  };\r\n\r\n  if (searchTitle !== \"\") {\r\n    appendQueryParam(`productName=${searchTitle}`);\r\n  }\r\n\r\n  if (categoryId !== 0) {\r\n    appendQueryParam(`category=${categoryId}`);\r\n  }\r\n\r\n  if (minPrice !== null && maxPrice !== null) {\r\n    appendQueryParam(`minPrice=${minPrice}&maxPrice=${maxPrice}`);\r\n  }\r\n\r\n  return url;\r\n};\r\n\r\nconst fetchProductByAllInputs = async (\r\n  searchTitle: string,\r\n  categoryId: number,\r\n  minPrice: number,\r\n  maxPrice: number,\r\n  setProducts: Dispatch<SetStateAction<any[]>>,\r\n  setPriceError: Dispatch<SetStateAction<boolean>>,\r\n  setMinPrice: Dispatch<SetStateAction<number>>,\r\n  setMaxPrice: Dispatch<SetStateAction<number>>\r\n) => {\r\n  let url = \"http://localhost:8080/api/products\";\r\n  if (minPrice == null || maxPrice == null) {\r\n    setMinPrice(0);\r\n    setMaxPrice(10000);\r\n  }\r\n  if (\r\n    searchTitle !== \"\" &&\r\n    categoryId !== 0 &&\r\n    minPrice !== 0 &&\r\n    maxPrice !== 10000\r\n  ) {\r\n    url = `http://localhost:8080/api/products/search/findByProductNameContainingIgnoreCaseAndCategoryAndPriceBetween?productName=${searchTitle}&category=${categoryId}%20&minPrice=${minPrice}%20&maxPrice=${maxPrice}%20`;\r\n  } else if (\r\n    searchTitle !== \"\" &&\r\n    categoryId !== 0 &&\r\n    minPrice === 0 &&\r\n    maxPrice === 10000\r\n  ) {\r\n    url = `http://localhost:8080/api/products/search/findByProductNameContainingIgnoreCaseAndCategory?productName=${searchTitle}&category=${categoryId}%20`;\r\n  } else if (\r\n    searchTitle !== \"\" &&\r\n    categoryId === 0 &&\r\n    minPrice === 0 &&\r\n    maxPrice === 10000\r\n  ) {\r\n    url = `http://localhost:8080/api/products/search/findByProductNameContainingIgnoreCase?productName=${searchTitle}`;\r\n  } else if (\r\n    searchTitle !== \"\" &&\r\n    categoryId === 0 &&\r\n    minPrice !== 0 &&\r\n    maxPrice !== 10000\r\n  ) {\r\n    url = `http://localhost:8080/api/products/search/findByProductNameContainingIgnoreCaseAndPriceBetween?productName=${searchTitle}&minPrice=${minPrice}%20&maxPrice=${maxPrice}%20`;\r\n  } else if (\r\n    searchTitle === \"\" &&\r\n    categoryId !== 0 &&\r\n    minPrice !== 0 &&\r\n    maxPrice !== 10000\r\n  ) {\r\n    url = `http://localhost:8080/api/products/search/findByCategoryAndPriceBetween?category=${categoryId}%20&minPrice=${minPrice}%20&maxPrice=${maxPrice}%20`;\r\n  } else if (\r\n    searchTitle === \"\" &&\r\n    categoryId !== 0 &&\r\n    minPrice === 0 &&\r\n    maxPrice === 10000\r\n  ) {\r\n    url = `http://localhost:8080/api/products/search/findByCategory?category=${categoryId}%20`;\r\n  } else if (\r\n    searchTitle === \"\" &&\r\n    categoryId === 0 &&\r\n    minPrice !== 0 &&\r\n    maxPrice !== 10000\r\n  ) {\r\n    url = `http://localhost:8080/api/products/search/findByPriceBetween?minPrice=${minPrice}%20&maxPrice=${maxPrice}%20`;\r\n  } else {\r\n    url = `http://localhost:8080/api/products/`;\r\n  }\r\n  if (minPrice >= 0 && maxPrice > minPrice) {\r\n    setPriceError(false);\r\n    const responseData = await fetch(url);\r\n    if (!responseData.ok) {\r\n      throw new Error(\"Something went wrong!\");\r\n    }\r\n    const responseJson = await responseData.json();\r\n    setProducts(responseJson._embedded.products);\r\n  } else {\r\n    setPriceError(true);\r\n  }\r\n};\r\n\r\nexport { fetchProductByAllInputs };\r\nif (minPrice >= 0 && maxPrice > minPrice) {\r\n  setPriceError(false);\r\n  const responseData = await fetch(url);\r\n  if (!responseData.ok) {\r\n    throw new Error(\"Something went wrong!\");\r\n  }\r\n  const responseJson = await responseData.json();\r\n  setProducts(responseJson._embedded.products);\r\n} else {\r\n  setPriceError(true);\r\n}"],"mappings":"AACA,MAAMA,cAAc,GAAGA,CACrBC,WAAmB,EACnBC,UAAkB,EAClBC,QAAuB,EACvBC,QAAuB,KACZ;EACX,MAAMC,OAAO,GAAG,2CAA2C;EAC3D,IAAIC,GAAG,GAAGD,OAAO;EAEjB,MAAME,gBAAgB,GAAIC,KAAa,IAAW;IAChDF,GAAG,IAAIA,GAAG,CAACG,QAAQ,CAAC,GAAG,CAAC,GAAI,IAAGD,KAAM,EAAC,GAAI,IAAGA,KAAM,EAAC;EACtD,CAAC;EAED,IAAIP,WAAW,KAAK,EAAE,EAAE;IACtBM,gBAAgB,CAAE,eAAcN,WAAY,EAAC,CAAC;EAChD;EAEA,IAAIC,UAAU,KAAK,CAAC,EAAE;IACpBK,gBAAgB,CAAE,YAAWL,UAAW,EAAC,CAAC;EAC5C;EAEA,IAAIC,QAAQ,KAAK,IAAI,IAAIC,QAAQ,KAAK,IAAI,EAAE;IAC1CG,gBAAgB,CAAE,YAAWJ,QAAS,aAAYC,QAAS,EAAC,CAAC;EAC/D;EAEA,OAAOE,GAAG;AACZ,CAAC;AAED,MAAMI,uBAAuB,GAAG,MAAAA,CAC9BT,WAAmB,EACnBC,UAAkB,EAClBC,QAAgB,EAChBC,QAAgB,EAChBO,WAA4C,EAC5CC,aAAgD,EAChDC,WAA6C,EAC7CC,WAA6C,KAC1C;EACH,IAAIR,GAAG,GAAG,oCAAoC;EAC9C,IAAIH,QAAQ,IAAI,IAAI,IAAIC,QAAQ,IAAI,IAAI,EAAE;IACxCS,WAAW,CAAC,CAAC,CAAC;IACdC,WAAW,CAAC,KAAK,CAAC;EACpB;EACA,IACEb,WAAW,KAAK,EAAE,IAClBC,UAAU,KAAK,CAAC,IAChBC,QAAQ,KAAK,CAAC,IACdC,QAAQ,KAAK,KAAK,EAClB;IACAE,GAAG,GAAI,yHAAwHL,WAAY,aAAYC,UAAW,gBAAeC,QAAS,gBAAeC,QAAS,KAAI;EACxN,CAAC,MAAM,IACLH,WAAW,KAAK,EAAE,IAClBC,UAAU,KAAK,CAAC,IAChBC,QAAQ,KAAK,CAAC,IACdC,QAAQ,KAAK,KAAK,EAClB;IACAE,GAAG,GAAI,0GAAyGL,WAAY,aAAYC,UAAW,KAAI;EACzJ,CAAC,MAAM,IACLD,WAAW,KAAK,EAAE,IAClBC,UAAU,KAAK,CAAC,IAChBC,QAAQ,KAAK,CAAC,IACdC,QAAQ,KAAK,KAAK,EAClB;IACAE,GAAG,GAAI,+FAA8FL,WAAY,EAAC;EACpH,CAAC,MAAM,IACLA,WAAW,KAAK,EAAE,IAClBC,UAAU,KAAK,CAAC,IAChBC,QAAQ,KAAK,CAAC,IACdC,QAAQ,KAAK,KAAK,EAClB;IACAE,GAAG,GAAI,8GAA6GL,WAAY,aAAYE,QAAS,gBAAeC,QAAS,KAAI;EACnL,CAAC,MAAM,IACLH,WAAW,KAAK,EAAE,IAClBC,UAAU,KAAK,CAAC,IAChBC,QAAQ,KAAK,CAAC,IACdC,QAAQ,KAAK,KAAK,EAClB;IACAE,GAAG,GAAI,oFAAmFJ,UAAW,gBAAeC,QAAS,gBAAeC,QAAS,KAAI;EAC3J,CAAC,MAAM,IACLH,WAAW,KAAK,EAAE,IAClBC,UAAU,KAAK,CAAC,IAChBC,QAAQ,KAAK,CAAC,IACdC,QAAQ,KAAK,KAAK,EAClB;IACAE,GAAG,GAAI,qEAAoEJ,UAAW,KAAI;EAC5F,CAAC,MAAM,IACLD,WAAW,KAAK,EAAE,IAClBC,UAAU,KAAK,CAAC,IAChBC,QAAQ,KAAK,CAAC,IACdC,QAAQ,KAAK,KAAK,EAClB;IACAE,GAAG,GAAI,yEAAwEH,QAAS,gBAAeC,QAAS,KAAI;EACtH,CAAC,MAAM;IACLE,GAAG,GAAI,qCAAoC;EAC7C;EACA,IAAIH,QAAQ,IAAI,CAAC,IAAIC,QAAQ,GAAGD,QAAQ,EAAE;IACxCS,aAAa,CAAC,KAAK,CAAC;IACpB,MAAMG,YAAY,GAAG,MAAMC,KAAK,CAACV,GAAG,CAAC;IACrC,IAAI,CAACS,YAAY,CAACE,EAAE,EAAE;MACpB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IAC1C;IACA,MAAMC,YAAY,GAAG,MAAMJ,YAAY,CAACK,IAAI,CAAC,CAAC;IAC9CT,WAAW,CAACQ,YAAY,CAACE,SAAS,CAACC,QAAQ,CAAC;EAC9C,CAAC,MAAM;IACLV,aAAa,CAAC,IAAI,CAAC;EACrB;AACF,CAAC;AAED,SAASF,uBAAuB;AAChC,IAAIP,QAAQ,IAAI,CAAC,IAAIC,QAAQ,GAAGD,QAAQ,EAAE;EACxCS,aAAa,CAAC,KAAK,CAAC;EACpB,MAAMG,YAAY,GAAG,MAAMC,KAAK,CAACV,GAAG,CAAC;EACrC,IAAI,CAACS,YAAY,CAACE,EAAE,EAAE;IACpB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAC1C;EACA,MAAMC,YAAY,GAAG,MAAMJ,YAAY,CAACK,IAAI,CAAC,CAAC;EAC9CT,WAAW,CAACQ,YAAY,CAACE,SAAS,CAACC,QAAQ,CAAC;AAC9C,CAAC,MAAM;EACLV,aAAa,CAAC,IAAI,CAAC;AACrB"},"metadata":{},"sourceType":"module","externalDependencies":[]}