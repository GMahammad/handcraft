{"ast":null,"code":"const fetchProductByAllInputs = async (searchTitle, categoryId, minPrice, maxPrice, setProducts, setPriceError, setMinPrice, setMaxPrice) => {\n  let url = buildSearchUrl(searchTitle, categoryId, minPrice, maxPrice);\n  try {\n    setLoading(true);\n    const responseData = await fetch(url);\n    if (minPrice >= 0 && maxPrice > minPrice) {\n      setPriceError(false);\n      const responseData = await fetch(url);\n      if (!responseData.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n      const responseJson = await responseData.json();\n      setProducts(responseJson._embedded.products);\n    } else {\n      setPriceError(true);\n    }\n    setLoading(false);\n    setPriceError(false); // Update the priceError state\n  } catch (error) {\n    setLoading(false);\n    setHttpError(error.message);\n    setPriceError(true); // Update the priceError state\n  }\n};\n\nexport { fetchProductByAllInputs };","map":{"version":3,"names":["fetchProductByAllInputs","searchTitle","categoryId","minPrice","maxPrice","setProducts","setPriceError","setMinPrice","setMaxPrice","url","buildSearchUrl","setLoading","responseData","fetch","ok","Error","responseJson","json","_embedded","products","error","setHttpError","message"],"sources":["C:/Users/Mehemmed/Desktop/Code{1}/Projects/handcraft/src/main/handcraft-react/src/Utils/SearchFunction.tsx"],"sourcesContent":["import { Dispatch, SetStateAction } from \"react\";\r\nimport ProductModel from \"../Models/ProductModel\";\r\n\r\n\r\nconst fetchProductByAllInputs = async (\r\n  searchTitle: string,\r\n  categoryId: number,\r\n  minPrice: number,\r\n  maxPrice: number | null,\r\n  setProducts:Dispatch<SetStateAction<ProductModel[]>>,\r\n  setPriceError:Dispatch<SetStateAction<boolean>>,\r\n  setMinPrice,\r\n  setMaxPrice\r\n) => {\r\n  let url = buildSearchUrl(searchTitle, categoryId, minPrice, maxPrice);\r\n\r\n  try {\r\n    setLoading(true);\r\n    const responseData = await fetch(url);\r\n    if (minPrice >= 0 && maxPrice > minPrice) {\r\n      setPriceError(false);\r\n      const responseData = await fetch(url);\r\n      if (!responseData.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n      const responseJson = await responseData.json();\r\n      setProducts(responseJson._embedded.products);\r\n    } else {\r\n      setPriceError(true);\r\n    }\r\n    setLoading(false);\r\n    setPriceError(false); // Update the priceError state\r\n  } catch (error) {\r\n    setLoading(false);\r\n    setHttpError(error.message);\r\n    setPriceError(true); // Update the priceError state\r\n  }\r\n};\r\n\r\n\r\nexport { fetchProductByAllInputs };\r\n"],"mappings":"AAIA,MAAMA,uBAAuB,GAAG,MAAAA,CAC9BC,WAAmB,EACnBC,UAAkB,EAClBC,QAAgB,EAChBC,QAAuB,EACvBC,WAAoD,EACpDC,aAA+C,EAC/CC,WAAW,EACXC,WAAW,KACR;EACH,IAAIC,GAAG,GAAGC,cAAc,CAACT,WAAW,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,QAAQ,CAAC;EAErE,IAAI;IACFO,UAAU,CAAC,IAAI,CAAC;IAChB,MAAMC,YAAY,GAAG,MAAMC,KAAK,CAACJ,GAAG,CAAC;IACrC,IAAIN,QAAQ,IAAI,CAAC,IAAIC,QAAQ,GAAGD,QAAQ,EAAE;MACxCG,aAAa,CAAC,KAAK,CAAC;MACpB,MAAMM,YAAY,GAAG,MAAMC,KAAK,CAACJ,GAAG,CAAC;MACrC,IAAI,CAACG,YAAY,CAACE,EAAE,EAAE;QACpB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC1C;MACA,MAAMC,YAAY,GAAG,MAAMJ,YAAY,CAACK,IAAI,CAAC,CAAC;MAC9CZ,WAAW,CAACW,YAAY,CAACE,SAAS,CAACC,QAAQ,CAAC;IAC9C,CAAC,MAAM;MACLb,aAAa,CAAC,IAAI,CAAC;IACrB;IACAK,UAAU,CAAC,KAAK,CAAC;IACjBL,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOc,KAAK,EAAE;IACdT,UAAU,CAAC,KAAK,CAAC;IACjBU,YAAY,CAACD,KAAK,CAACE,OAAO,CAAC;IAC3BhB,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;EACvB;AACF,CAAC;;AAGD,SAASN,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}