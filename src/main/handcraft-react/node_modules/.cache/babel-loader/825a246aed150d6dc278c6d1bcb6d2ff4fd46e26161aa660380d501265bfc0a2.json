{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mehemmed\\\\Desktop\\\\Code{1}\\\\Projects\\\\handcraft\\\\src\\\\main\\\\handcraft-react\\\\src\\\\Utils\\\\AddTodoModal.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Button, Icon, Input, Modal } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddTodoModal() {\n  _s();\n  const [open, setOpen] = React.useState(false);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    style: {\n      height: \"300px\",\n      top: \"20%\"\n    },\n    size: \"tiny\",\n    closeIcon: true,\n    open: open,\n    trigger: /*#__PURE__*/_jsxDEV(Button, {\n      children: \"Show Modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 16\n    }, this),\n    onClose: () => setOpen(false),\n    onOpen: () => setOpen(true),\n    children: [/*#__PURE__*/_jsxDEV(Modal.Content, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"If you want to add a new Todo please fill all fieds.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"If you want to add a new Todo please fill all fieds.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"red\",\n        onClick: () => setOpen(false),\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: \"remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), \" No\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"green\",\n        onClick: () => setOpen(false),\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: \"checkmark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), \" Yes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_s(AddTodoModal, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n_c = AddTodoModal;\nexport default AddTodoModal;\nvar _c;\n$RefreshReg$(_c, \"AddTodoModal\");","map":{"version":3,"names":["React","Button","Icon","Input","Modal","jsxDEV","_jsxDEV","AddTodoModal","_s","open","setOpen","useState","style","height","top","size","closeIcon","trigger","children","fileName","_jsxFileName","lineNumber","columnNumber","onClose","onOpen","Content","Actions","color","onClick","name","_c","$RefreshReg$"],"sources":["C:/Users/Mehemmed/Desktop/Code{1}/Projects/handcraft/src/main/handcraft-react/src/Utils/AddTodoModal.tsx"],"sourcesContent":["import React from 'react'\r\nimport { Button, Header, Icon, Input, Modal } from 'semantic-ui-react'\r\n\r\nfunction AddTodoModal() {\r\n  const [open, setOpen] = React.useState(false)\r\n\r\n  return (\r\n    <Modal\r\n    style={{height:\"300px\",top:\"20%\"}}\r\n    size='tiny'\r\n      closeIcon\r\n      open={open}\r\n      trigger={<Button>Show Modal</Button>}\r\n      onClose={() => setOpen(false)}\r\n      onOpen={() => setOpen(true)}\r\n    >\r\n      <Modal.Content>\r\n        <p>\r\n          If you want to add a new Todo please fill all fieds.\r\n        </p>\r\n      </Modal.Content>\r\n      <Modal.Content>\r\n        <Input/>\r\n      </Modal.Content>\r\n      <Modal.Content>\r\n        <p>\r\n          If you want to add a new Todo please fill all fieds.\r\n        </p>\r\n      </Modal.Content>\r\n\r\n\r\n      <Modal.Actions>\r\n        <Button color='red' onClick={() => setOpen(false)}>\r\n          <Icon name='remove' /> No\r\n        </Button>\r\n        <Button color='green' onClick={() => setOpen(false)}>\r\n          <Icon name='checkmark' /> Yes\r\n        </Button>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default AddTodoModal"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}