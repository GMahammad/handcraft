{"ast":null,"code":"const fetchProductByAllInputs = async (searchTitle, categoryId, minPrice, maxPrice, setProducts, setPriceError, setMinPrice, setMaxPrice) => {\n  if (minPrice > maxPrice) {\n    set;\n  }\n  let url = \"\";\n  if (searchTitle !== \"\" && categoryId !== 0 && minPrice !== 0 && maxPrice !== 10000) {\n    url = `http://localhost:8080/api/products/search/findByProductNameContainingIgnoreCaseAndCategoryAndPriceBetween?productName=${searchTitle}&category=${categoryId}%20&minPrice=${minPrice}%20&maxPrice=${maxPrice}%20`;\n  } else if (searchTitle !== \"\" && categoryId !== 0 && minPrice === 0 && maxPrice === 10000) {\n    url = `http://localhost:8080/api/products/search/findByProductNameContainingIgnoreCaseAndCategory?productName=${searchTitle}&category=${categoryId}%20`;\n  } else if (searchTitle !== \"\" && categoryId === 0 && minPrice === 0 && maxPrice === 10000) {\n    url = `http://localhost:8080/api/products/search/findByProductNameContainingIgnoreCase?productName=${searchTitle}`;\n  } else if (searchTitle !== \"\" && categoryId === 0 && minPrice !== 0 && maxPrice !== 10000) {\n    url = `http://localhost:8080/api/products/search/findByProductNameContainingIgnoreCaseAndPriceBetween?productName=${searchTitle}&minPrice=${minPrice}%20&maxPrice=${maxPrice}%20`;\n  } else if (searchTitle === \"\" && categoryId !== 0 && minPrice !== 0 && maxPrice !== 10000) {\n    url = `http://localhost:8080/api/products/search/findByCategoryAndPriceBetween?category=${categoryId}%20&minPrice=${minPrice}%20&maxPrice=${maxPrice}%20`;\n  } else if (searchTitle === \"\" && categoryId !== 0 && minPrice === 0 && maxPrice === 10000) {\n    url = `http://localhost:8080/api/products/search/findByCategory?category=${categoryId}%20`;\n  } else if (searchTitle === \"\" && categoryId === 0 && minPrice !== 0 && maxPrice !== 10000) {\n    url = `http://localhost:8080/api/products/search/findByPriceBetween?minPrice=${minPrice}%20&maxPrice=${maxPrice}%20`;\n  } else {\n    url = `http://localhost:8080/api/products/`;\n  }\n  if (minPrice < maxPrice) {\n    setPriceError(false);\n    const responseData = await fetch(url);\n    if (!responseData.ok) {\n      throw new Error(\"Something went wrong!\");\n    }\n    const responseJson = await responseData.json();\n    setProducts(responseJson._embedded.products);\n  } else {\n    setPriceError(true);\n    setMinPrice(0);\n    setMaxPrice(10000);\n  }\n};\nexport { fetchProductByAllInputs };","map":{"version":3,"names":["fetchProductByAllInputs","searchTitle","categoryId","minPrice","maxPrice","setProducts","setPriceError","setMinPrice","setMaxPrice","set","url","responseData","fetch","ok","Error","responseJson","json","_embedded","products"],"sources":["C:/Users/Mehemmed/Desktop/Code{1}/Projects/handcraft/src/main/handcraft-react/src/Utils/SearchFunction.tsx"],"sourcesContent":["import { Dispatch, SetStateAction } from \"react\";\r\nimport ProductModel from \"../Models/ProductModel\";\r\n\r\nconst fetchProductByAllInputs = async (\r\n  searchTitle: string,\r\n  categoryId: number,\r\n  minPrice: number,\r\n  maxPrice: number,\r\n  setProducts: Dispatch<SetStateAction<ProductModel[]>>,\r\n  setPriceError: Dispatch<SetStateAction<boolean>>,\r\n  setMinPrice: Dispatch<SetStateAction<number>>,\r\n  setMaxPrice: Dispatch<SetStateAction<number>>\r\n) => {\r\n\r\n  if(minPrice > maxPrice){\r\n    set\r\n  }\r\n  let url = \"\";\r\n  if (\r\n    searchTitle !== \"\" &&\r\n    categoryId !== 0 &&\r\n    minPrice !== 0 &&\r\n    maxPrice !== 10000\r\n  ) {\r\n    url = `http://localhost:8080/api/products/search/findByProductNameContainingIgnoreCaseAndCategoryAndPriceBetween?productName=${searchTitle}&category=${categoryId}%20&minPrice=${minPrice}%20&maxPrice=${maxPrice}%20`;\r\n  } else if (\r\n    searchTitle !== \"\" &&\r\n    categoryId !== 0 &&\r\n    minPrice === 0 &&\r\n    maxPrice === 10000\r\n  ) {\r\n    url = `http://localhost:8080/api/products/search/findByProductNameContainingIgnoreCaseAndCategory?productName=${searchTitle}&category=${categoryId}%20`;\r\n  } else if (\r\n    searchTitle !== \"\" &&\r\n    categoryId === 0 &&\r\n    minPrice === 0 &&\r\n    maxPrice === 10000\r\n  ) {\r\n    url = `http://localhost:8080/api/products/search/findByProductNameContainingIgnoreCase?productName=${searchTitle}`;\r\n  } else if (\r\n    searchTitle !== \"\" &&\r\n    categoryId === 0 &&\r\n    minPrice !== 0 &&\r\n    maxPrice !== 10000\r\n  ) {\r\n    url = `http://localhost:8080/api/products/search/findByProductNameContainingIgnoreCaseAndPriceBetween?productName=${searchTitle}&minPrice=${minPrice}%20&maxPrice=${maxPrice}%20`;\r\n  } else if (\r\n    searchTitle === \"\" &&\r\n    categoryId !== 0 &&\r\n    minPrice !== 0 &&\r\n    maxPrice !== 10000\r\n  ) {\r\n    url = `http://localhost:8080/api/products/search/findByCategoryAndPriceBetween?category=${categoryId}%20&minPrice=${minPrice}%20&maxPrice=${maxPrice}%20`;\r\n  } else if (\r\n    searchTitle === \"\" &&\r\n    categoryId !== 0 &&\r\n    minPrice === 0 &&\r\n    maxPrice === 10000\r\n  ) {\r\n    url = `http://localhost:8080/api/products/search/findByCategory?category=${categoryId}%20`;\r\n  } else if (\r\n    searchTitle === \"\" &&\r\n    categoryId === 0 &&\r\n    minPrice !== 0 &&\r\n    maxPrice !== 10000\r\n  ) {\r\n    url = `http://localhost:8080/api/products/search/findByPriceBetween?minPrice=${minPrice}%20&maxPrice=${maxPrice}%20`;\r\n  } else {\r\n    url = `http://localhost:8080/api/products/`;\r\n  }\r\n\r\n  if(minPrice < maxPrice){\r\n    setPriceError(false)\r\n    const responseData = await fetch(url)\r\n    if(!responseData.ok){\r\n      throw new Error(\"Something went wrong!\")\r\n    }\r\n    const responseJson = await responseData.json();\r\n    setProducts(responseJson._embedded.products)\r\n  }else{\r\n    setPriceError(true)\r\n    setMinPrice(0)\r\n    setMaxPrice(10000)\r\n  }\r\n\r\n};\r\n\r\nexport { fetchProductByAllInputs };\r\n"],"mappings":"AAGA,MAAMA,uBAAuB,GAAG,MAAAA,CAC9BC,WAAmB,EACnBC,UAAkB,EAClBC,QAAgB,EAChBC,QAAgB,EAChBC,WAAqD,EACrDC,aAAgD,EAChDC,WAA6C,EAC7CC,WAA6C,KAC1C;EAEH,IAAGL,QAAQ,GAAGC,QAAQ,EAAC;IACrBK,GAAG;EACL;EACA,IAAIC,GAAG,GAAG,EAAE;EACZ,IACET,WAAW,KAAK,EAAE,IAClBC,UAAU,KAAK,CAAC,IAChBC,QAAQ,KAAK,CAAC,IACdC,QAAQ,KAAK,KAAK,EAClB;IACAM,GAAG,GAAI,yHAAwHT,WAAY,aAAYC,UAAW,gBAAeC,QAAS,gBAAeC,QAAS,KAAI;EACxN,CAAC,MAAM,IACLH,WAAW,KAAK,EAAE,IAClBC,UAAU,KAAK,CAAC,IAChBC,QAAQ,KAAK,CAAC,IACdC,QAAQ,KAAK,KAAK,EAClB;IACAM,GAAG,GAAI,0GAAyGT,WAAY,aAAYC,UAAW,KAAI;EACzJ,CAAC,MAAM,IACLD,WAAW,KAAK,EAAE,IAClBC,UAAU,KAAK,CAAC,IAChBC,QAAQ,KAAK,CAAC,IACdC,QAAQ,KAAK,KAAK,EAClB;IACAM,GAAG,GAAI,+FAA8FT,WAAY,EAAC;EACpH,CAAC,MAAM,IACLA,WAAW,KAAK,EAAE,IAClBC,UAAU,KAAK,CAAC,IAChBC,QAAQ,KAAK,CAAC,IACdC,QAAQ,KAAK,KAAK,EAClB;IACAM,GAAG,GAAI,8GAA6GT,WAAY,aAAYE,QAAS,gBAAeC,QAAS,KAAI;EACnL,CAAC,MAAM,IACLH,WAAW,KAAK,EAAE,IAClBC,UAAU,KAAK,CAAC,IAChBC,QAAQ,KAAK,CAAC,IACdC,QAAQ,KAAK,KAAK,EAClB;IACAM,GAAG,GAAI,oFAAmFR,UAAW,gBAAeC,QAAS,gBAAeC,QAAS,KAAI;EAC3J,CAAC,MAAM,IACLH,WAAW,KAAK,EAAE,IAClBC,UAAU,KAAK,CAAC,IAChBC,QAAQ,KAAK,CAAC,IACdC,QAAQ,KAAK,KAAK,EAClB;IACAM,GAAG,GAAI,qEAAoER,UAAW,KAAI;EAC5F,CAAC,MAAM,IACLD,WAAW,KAAK,EAAE,IAClBC,UAAU,KAAK,CAAC,IAChBC,QAAQ,KAAK,CAAC,IACdC,QAAQ,KAAK,KAAK,EAClB;IACAM,GAAG,GAAI,yEAAwEP,QAAS,gBAAeC,QAAS,KAAI;EACtH,CAAC,MAAM;IACLM,GAAG,GAAI,qCAAoC;EAC7C;EAEA,IAAGP,QAAQ,GAAGC,QAAQ,EAAC;IACrBE,aAAa,CAAC,KAAK,CAAC;IACpB,MAAMK,YAAY,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;IACrC,IAAG,CAACC,YAAY,CAACE,EAAE,EAAC;MAClB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IAC1C;IACA,MAAMC,YAAY,GAAG,MAAMJ,YAAY,CAACK,IAAI,CAAC,CAAC;IAC9CX,WAAW,CAACU,YAAY,CAACE,SAAS,CAACC,QAAQ,CAAC;EAC9C,CAAC,MAAI;IACHZ,aAAa,CAAC,IAAI,CAAC;IACnBC,WAAW,CAAC,CAAC,CAAC;IACdC,WAAW,CAAC,KAAK,CAAC;EACpB;AAEF,CAAC;AAED,SAASR,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}