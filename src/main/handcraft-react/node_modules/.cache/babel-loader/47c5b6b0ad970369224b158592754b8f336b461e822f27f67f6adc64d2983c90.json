{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nlet cartItems = [];\nexport const getCardItems = createAsyncThunk(\"cart/getCartItems\", async () => {\n  const url = \"http://localhost:8080/api/products\";\n  return fetch(url).then(response => response.json().then(dataJson => dataJson._embedded.products)).catch(err => console.log(err));\n});\nconst initialState = {\n  cartItems: [],\n  amount: 5,\n  total: 0,\n  isLoadingCart: true\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    clearCard: state => {\n      state.cartItems = [];\n    }\n  },\n  extraReducers: {\n    [String(getCardItems.pending)]: state => {\n      state.isLoadingCart = true;\n    },\n    [String(getCardItems.fulfilled)]: (state, action) => {\n      state.isLoadingCart = false;\n      state.cartItems = action.payload;\n    },\n    [String(getCardItems.rejected)]: state => {\n      state.isLoadingCart = true;\n    }\n  }\n});\nexport const {\n  clearCard\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","cartItems","getCardItems","url","fetch","then","response","json","dataJson","_embedded","products","catch","err","console","log","initialState","amount","total","isLoadingCart","cartSlice","name","reducers","clearCard","state","extraReducers","String","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["C:/Users/Mehemmed/Desktop/Code{1}/Projects/handcraft/src/main/handcraft-react/src/Cart/cartSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport ProductModel from \"../Models/ProductModel\";\r\n\r\nlet cartItems: ProductModel[] = [];\r\n\r\nexport const getCardItems = createAsyncThunk(\"cart/getCartItems\", async() => {\r\n  const url = \"http://localhost:8080/api/products\";\r\n  return fetch(url)\r\n    .then((response) =>\r\n      response.json().then((dataJson) => dataJson._embedded.products)\r\n    )\r\n    .catch((err) => console.log(err));\r\n});\r\n\r\n\r\nconst initialState = {\r\n  cartItems: [],\r\n  amount: 5,\r\n  total: 0,\r\n  isLoadingCart: true,\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState,\r\n  reducers: {\r\n    clearCard:(state:any)=>{\r\n        state.cartItems=[]\r\n    }\r\n  },\r\n  extraReducers:{\r\n    [String(getCardItems.pending)]:(state:any)=>{\r\n        state.isLoadingCart=true\r\n    },\r\n    [String(getCardItems.fulfilled)]:(state:any,action)=>{\r\n        state.isLoadingCart=false;\r\n        state.cartItems = action.payload\r\n    },\r\n    [String(getCardItems.rejected)]:(state:any)=>{\r\n        state.isLoadingCart=true;\r\n    }\r\n  }\r\n});\r\nexport const{clearCard}= cartSlice.actions;\r\nexport default cartSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAGhE,IAAIC,SAAyB,GAAG,EAAE;AAElC,OAAO,MAAMC,YAAY,GAAGH,gBAAgB,CAAC,mBAAmB,EAAE,YAAW;EAC3E,MAAMI,GAAG,GAAG,oCAAoC;EAChD,OAAOC,KAAK,CAACD,GAAG,CAAC,CACdE,IAAI,CAAEC,QAAQ,IACbA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAACF,IAAI,CAAEG,QAAQ,IAAKA,QAAQ,CAACC,SAAS,CAACC,QAAQ,CAChE,CAAC,CACAC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;AACrC,CAAC,CAAC;AAGF,MAAMG,YAAY,GAAG;EACnBd,SAAS,EAAE,EAAE;EACbe,MAAM,EAAE,CAAC;EACTC,KAAK,EAAE,CAAC;EACRC,aAAa,EAAE;AACjB,CAAC;AAED,MAAMC,SAAS,GAAGnB,WAAW,CAAC;EAC5BoB,IAAI,EAAE,MAAM;EACZL,YAAY;EACZM,QAAQ,EAAE;IACRC,SAAS,EAAEC,KAAS,IAAG;MACnBA,KAAK,CAACtB,SAAS,GAAC,EAAE;IACtB;EACF,CAAC;EACDuB,aAAa,EAAC;IACZ,CAACC,MAAM,CAACvB,YAAY,CAACwB,OAAO,CAAC,GAAGH,KAAS,IAAG;MACxCA,KAAK,CAACL,aAAa,GAAC,IAAI;IAC5B,CAAC;IACD,CAACO,MAAM,CAACvB,YAAY,CAACyB,SAAS,CAAC,GAAE,CAACJ,KAAS,EAACK,MAAM,KAAG;MACjDL,KAAK,CAACL,aAAa,GAAC,KAAK;MACzBK,KAAK,CAACtB,SAAS,GAAG2B,MAAM,CAACC,OAAO;IACpC,CAAC;IACD,CAACJ,MAAM,CAACvB,YAAY,CAAC4B,QAAQ,CAAC,GAAGP,KAAS,IAAG;MACzCA,KAAK,CAACL,aAAa,GAAC,IAAI;IAC5B;EACF;AACF,CAAC,CAAC;AACF,OAAO,MAAK;EAACI;AAAS,CAAC,GAAEH,SAAS,CAACY,OAAO;AAC1C,eAAeZ,SAAS,CAACa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}