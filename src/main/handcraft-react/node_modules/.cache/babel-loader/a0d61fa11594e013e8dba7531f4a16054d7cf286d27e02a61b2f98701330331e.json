{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialAuthState = {\n  userEmail: \"\",\n  name: \"\",\n  accessToken: \"\",\n  tokenType: \"\",\n  roles: [],\n  isAuthenticated: false,\n  isAdmin: false,\n  isMod: false\n};\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: initialAuthState,\n  reducers: {\n    loginSuccess: (state, action) => {\n      const {\n        user\n      } = action.payload;\n      state.userEmail = user.email;\n      state.name = user.firstName;\n      state.accessToken = user.accessToken;\n      state.tokenType = user.tokenType;\n      state.roles = user.roles;\n    },\n    isAuthenticatedChecker: state => {\n      if (state.roles.includes(\"USER\") === true) {\n        state.isAuthenticated = true;\n      }\n    },\n    logout: state => {\n      state.userEmail = \"\";\n      state.accessToken = \"\";\n      state.tokenType = \"\";\n      state.roles = [];\n      state.name = \"\";\n      state.isAuthenticated = false;\n    },\n    isModChecker: state => {\n      if (state.roles.includes('MODERATOR')) {\n        state.isMod = true;\n      } else {\n        state.isMod = false;\n      }\n    },\n    isAdminChecker: state => {\n      if (state.roles.includes('ADMIN')) {\n        state.isAdmin = true;\n      } else {\n        state.isAdmin = false;\n      }\n    }\n  }\n});\nexport const {\n  loginSuccess,\n  isAuthenticatedChecker,\n  logout,\n  isAdminChecker,\n  isModChecker\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialAuthState","userEmail","name","accessToken","tokenType","roles","isAuthenticated","isAdmin","isMod","authSlice","initialState","reducers","loginSuccess","state","action","user","payload","email","firstName","isAuthenticatedChecker","includes","logout","isModChecker","isAdminChecker","actions","reducer"],"sources":["C:/Users/Mehemmed/Desktop/Code{1}/Projects/handcraft/src/main/handcraft-react/src/Auth/Data/authSlice.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialAuthState = {\r\n  userEmail: \"\",\r\n  name: \"\",\r\n  accessToken: \"\",\r\n  tokenType: \"\",\r\n  roles: [],\r\n  isAuthenticated: false,\r\n  isAdmin:false,\r\n  isMod:false\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState: initialAuthState,\r\n  reducers: {\r\n    loginSuccess: (state: any, action) => {\r\n      const { user } = action.payload;\r\n      state.userEmail = user.email;\r\n      state.name = user.firstName;\r\n      state.accessToken = user.accessToken;\r\n      state.tokenType = user.tokenType;\r\n      state.roles = user.roles;\r\n    },\r\n    isAuthenticatedChecker: (state: any) => {\r\n      if (state.roles.includes(\"USER\") === true) {\r\n        state.isAuthenticated = true;\r\n      }\r\n    },\r\n    logout: (state: any) => {\r\n      state.userEmail = \"\";\r\n      state.accessToken = \"\";\r\n      state.tokenType = \"\";\r\n      state.roles = [];\r\n      state.name = \"\";\r\n      state.isAuthenticated = false;\r\n    },\r\n    isModChecker:(state:any)=>{\r\n      if(state.roles.includes('MODERATOR')){\r\n        state.isMod = true\r\n      }else{\r\n        state.isMod = false\r\n      }\r\n    },\r\n    isAdminChecker:(state:any)=>{\r\n      if(state.roles.includes('ADMIN')){\r\n        state.isAdmin = true\r\n      }else{\r\n        state.isAdmin = false\r\n      }\r\n    }\r\n  },\r\n});\r\nexport const { loginSuccess, isAuthenticatedChecker, logout,isAdminChecker,isModChecker } =\r\n  authSlice.actions;\r\nexport default authSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,gBAAgB,GAAG;EACvBC,SAAS,EAAE,EAAE;EACbC,IAAI,EAAE,EAAE;EACRC,WAAW,EAAE,EAAE;EACfC,SAAS,EAAE,EAAE;EACbC,KAAK,EAAE,EAAE;EACTC,eAAe,EAAE,KAAK;EACtBC,OAAO,EAAC,KAAK;EACbC,KAAK,EAAC;AACR,CAAC;AAED,MAAMC,SAAS,GAAGV,WAAW,CAAC;EAC5BG,IAAI,EAAE,MAAM;EACZQ,YAAY,EAAEV,gBAAgB;EAC9BW,QAAQ,EAAE;IACRC,YAAY,EAAEA,CAACC,KAAU,EAAEC,MAAM,KAAK;MACpC,MAAM;QAAEC;MAAK,CAAC,GAAGD,MAAM,CAACE,OAAO;MAC/BH,KAAK,CAACZ,SAAS,GAAGc,IAAI,CAACE,KAAK;MAC5BJ,KAAK,CAACX,IAAI,GAAGa,IAAI,CAACG,SAAS;MAC3BL,KAAK,CAACV,WAAW,GAAGY,IAAI,CAACZ,WAAW;MACpCU,KAAK,CAACT,SAAS,GAAGW,IAAI,CAACX,SAAS;MAChCS,KAAK,CAACR,KAAK,GAAGU,IAAI,CAACV,KAAK;IAC1B,CAAC;IACDc,sBAAsB,EAAGN,KAAU,IAAK;MACtC,IAAIA,KAAK,CAACR,KAAK,CAACe,QAAQ,CAAC,MAAM,CAAC,KAAK,IAAI,EAAE;QACzCP,KAAK,CAACP,eAAe,GAAG,IAAI;MAC9B;IACF,CAAC;IACDe,MAAM,EAAGR,KAAU,IAAK;MACtBA,KAAK,CAACZ,SAAS,GAAG,EAAE;MACpBY,KAAK,CAACV,WAAW,GAAG,EAAE;MACtBU,KAAK,CAACT,SAAS,GAAG,EAAE;MACpBS,KAAK,CAACR,KAAK,GAAG,EAAE;MAChBQ,KAAK,CAACX,IAAI,GAAG,EAAE;MACfW,KAAK,CAACP,eAAe,GAAG,KAAK;IAC/B,CAAC;IACDgB,YAAY,EAAET,KAAS,IAAG;MACxB,IAAGA,KAAK,CAACR,KAAK,CAACe,QAAQ,CAAC,WAAW,CAAC,EAAC;QACnCP,KAAK,CAACL,KAAK,GAAG,IAAI;MACpB,CAAC,MAAI;QACHK,KAAK,CAACL,KAAK,GAAG,KAAK;MACrB;IACF,CAAC;IACDe,cAAc,EAAEV,KAAS,IAAG;MAC1B,IAAGA,KAAK,CAACR,KAAK,CAACe,QAAQ,CAAC,OAAO,CAAC,EAAC;QAC/BP,KAAK,CAACN,OAAO,GAAG,IAAI;MACtB,CAAC,MAAI;QACHM,KAAK,CAACN,OAAO,GAAG,KAAK;MACvB;IACF;EACF;AACF,CAAC,CAAC;AACF,OAAO,MAAM;EAAEK,YAAY;EAAEO,sBAAsB;EAAEE,MAAM;EAACE,cAAc;EAACD;AAAa,CAAC,GACvFb,SAAS,CAACe,OAAO;AACnB,eAAef,SAAS,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}