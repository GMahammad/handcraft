{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialTodoState = {\n  todoItems: [],\n  count: 0\n};\nconst todoSlice = createSlice({\n  name: \"todo\",\n  initialState: initialTodoState,\n  reducers: {\n    addToList: (state, action) => {\n      const {\n        todoTitle,\n        todoDesc\n      } = action.payload;\n      const currentDate = new Date();\n      const hour = currentDate.getHours();\n      const minute = currentDate.getMinutes();\n      const month = currentDate.getMonth() + 1; // Note: Months are zero-based, so January is 0, February is 1, etc.\n      const day = currentDate.getDate();\n      state.todoItems = state.todoItems.push({\n        todoTitle: todoTitle,\n        todoDesc: todoDesc,\n        todoCreatedAt: todoCreatedAt\n      });\n      state.count = state.count + 1;\n    },\n    clearList: state => {\n      state.todoItems = [];\n      state.count = 0;\n    },\n    removeFromList: (state, action) => {\n      state.todoItems = state.todoItems.filter(e => e.todoTitle !== action.payload);\n      state.count = state.count - 1;\n    }\n\n    // loginSuccess: (state: any, action) => {\n    //   const { user } = action.payload;\n    //   state.userEmail = user.email;\n    //   state.name = user.firstName;\n    //   state.accessToken = user.accessToken;\n    //   state.tokenType = user.tokenType;\n    //   state.roles = user.roles;\n    // },\n  }\n});\n\nexport const {\n  addToList,\n  clearList,\n  removeFromList\n} = todoSlice.actions;\nexport default todoSlice.reducer;","map":{"version":3,"names":["createSlice","initialTodoState","todoItems","count","todoSlice","name","initialState","reducers","addToList","state","action","todoTitle","todoDesc","payload","currentDate","Date","hour","getHours","minute","getMinutes","month","getMonth","day","getDate","push","todoCreatedAt","clearList","removeFromList","filter","e","actions","reducer"],"sources":["C:/Users/Mehemmed/Desktop/Code{1}/Projects/handcraft/src/main/handcraft-react/src/Redux/todoSlice.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialTodoState = {\r\n  todoItems: [],\r\n  count: 0,\r\n};\r\n\r\nconst todoSlice = createSlice({\r\n  name: \"todo\",\r\n  initialState: initialTodoState,\r\n  reducers: {\r\n    addToList: (state: any, action) => {\r\n      const { todoTitle, todoDesc } = action.payload;\r\n      const currentDate = new Date();\r\n      const hour = currentDate.getHours();\r\n      const minute = currentDate.getMinutes();\r\n      const month = currentDate.getMonth() + 1; // Note: Months are zero-based, so January is 0, February is 1, etc.\r\n      const day = currentDate.getDate();\r\n      state.todoItems = state.todoItems.push({\r\n        todoTitle: todoTitle,\r\n        todoDesc: todoDesc,\r\n        todoCreatedAt: todoCreatedAt,\r\n      });\r\n      state.count = state.count + 1;\r\n    },\r\n    clearList: (state: any) => {\r\n      state.todoItems = [];\r\n      state.count = 0;\r\n    },\r\n    removeFromList: (state: any, action) => {\r\n      state.todoItems = state.todoItems.filter(\r\n        (e: any) => e.todoTitle !== action.payload\r\n      );\r\n      state.count = state.count - 1;\r\n    },\r\n\r\n    // loginSuccess: (state: any, action) => {\r\n    //   const { user } = action.payload;\r\n    //   state.userEmail = user.email;\r\n    //   state.name = user.firstName;\r\n    //   state.accessToken = user.accessToken;\r\n    //   state.tokenType = user.tokenType;\r\n    //   state.roles = user.roles;\r\n    // },\r\n  },\r\n});\r\nexport const { addToList, clearList, removeFromList } = todoSlice.actions;\r\nexport default todoSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,gBAAgB,GAAG;EACvBC,SAAS,EAAE,EAAE;EACbC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EAC5BK,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEL,gBAAgB;EAC9BM,QAAQ,EAAE;IACRC,SAAS,EAAEA,CAACC,KAAU,EAAEC,MAAM,KAAK;MACjC,MAAM;QAAEC,SAAS;QAAEC;MAAS,CAAC,GAAGF,MAAM,CAACG,OAAO;MAC9C,MAAMC,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC;MAC9B,MAAMC,IAAI,GAAGF,WAAW,CAACG,QAAQ,CAAC,CAAC;MACnC,MAAMC,MAAM,GAAGJ,WAAW,CAACK,UAAU,CAAC,CAAC;MACvC,MAAMC,KAAK,GAAGN,WAAW,CAACO,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;MAC1C,MAAMC,GAAG,GAAGR,WAAW,CAACS,OAAO,CAAC,CAAC;MACjCd,KAAK,CAACP,SAAS,GAAGO,KAAK,CAACP,SAAS,CAACsB,IAAI,CAAC;QACrCb,SAAS,EAAEA,SAAS;QACpBC,QAAQ,EAAEA,QAAQ;QAClBa,aAAa,EAAEA;MACjB,CAAC,CAAC;MACFhB,KAAK,CAACN,KAAK,GAAGM,KAAK,CAACN,KAAK,GAAG,CAAC;IAC/B,CAAC;IACDuB,SAAS,EAAGjB,KAAU,IAAK;MACzBA,KAAK,CAACP,SAAS,GAAG,EAAE;MACpBO,KAAK,CAACN,KAAK,GAAG,CAAC;IACjB,CAAC;IACDwB,cAAc,EAAEA,CAAClB,KAAU,EAAEC,MAAM,KAAK;MACtCD,KAAK,CAACP,SAAS,GAAGO,KAAK,CAACP,SAAS,CAAC0B,MAAM,CACrCC,CAAM,IAAKA,CAAC,CAAClB,SAAS,KAAKD,MAAM,CAACG,OACrC,CAAC;MACDJ,KAAK,CAACN,KAAK,GAAGM,KAAK,CAACN,KAAK,GAAG,CAAC;IAC/B;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF;AACF,CAAC,CAAC;;AACF,OAAO,MAAM;EAAEK,SAAS;EAAEkB,SAAS;EAAEC;AAAe,CAAC,GAAGvB,SAAS,CAAC0B,OAAO;AACzE,eAAe1B,SAAS,CAAC2B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}