{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  cartItems: [],\n  amount: 0,\n  total: 0,\n  isLoadingCart: true\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {}\n});\nexport default cartSlice.reducer;\nexport const fetchProducts = async () => {\n  const url = \"http://localhost:8080/api/products\";\n  const responseData = await fetch(url);\n  if (!responseData.ok) {\n    throw new Error(\"Something went wrong!\");\n  }\n  const responseJson = await responseData.json();\n  const fetchedData = responseJson._embedded.products;\n  const fetchedCartItems = fetchedData.map(data => ({\n    productId: data.productId,\n    productName: data.productName,\n    productDescription: data.productDescription,\n    discount: data.discount,\n    discountedPrice: data.discountedPrice,\n    price: data.price,\n    rating: data.rating\n  }));\n  console.log(fetchedCartItems);\n  return fetchedCartItems; // Return the fetched cart items if needed\n};","map":{"version":3,"names":["createSlice","initialState","cartItems","amount","total","isLoadingCart","cartSlice","name","reducers","reducer","fetchProducts","url","responseData","fetch","ok","Error","responseJson","json","fetchedData","_embedded","products","fetchedCartItems","map","data","productId","productName","productDescription","discount","discountedPrice","price","rating","console","log"],"sources":["C:/Users/Mehemmed/Desktop/Code{1}/Projects/handcraft/src/main/handcraft-react/src/Cart/cartSlice.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport ProductModel from \"../Models/ProductModel\";\r\n\r\nconst initialState = {\r\n  cartItems: [],\r\n  amount: 0,\r\n  total: 0,\r\n  isLoadingCart: true,\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState,\r\n  reducers: {},\r\n});\r\n\r\nexport default cartSlice.reducer;\r\n\r\nexport const fetchProducts = async () => {\r\n  const url = \"http://localhost:8080/api/products\";\r\n  const responseData = await fetch(url);\r\n  if (!responseData.ok) {\r\n    throw new Error(\"Something went wrong!\");\r\n  }\r\n  const responseJson = await responseData.json();\r\n  const fetchedData = responseJson._embedded.products;\r\n  const fetchedCartItems = fetchedData.map((data: ProductModel) => ({\r\n    productId: data.productId,\r\n    productName: data.productName,\r\n    productDescription: data.productDescription,\r\n    discount: data.discount,\r\n    discountedPrice: data.discountedPrice,\r\n    price: data.price,\r\n    rating: data.rating,\r\n  }));\r\n  console.log(fetchedCartItems);\r\n  return fetchedCartItems; // Return the fetched cart items if needed\r\n};\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAG9C,MAAMC,YAAY,GAAG;EACnBC,SAAS,EAAE,EAAE;EACbC,MAAM,EAAE,CAAC;EACTC,KAAK,EAAE,CAAC;EACRC,aAAa,EAAE;AACjB,CAAC;AAED,MAAMC,SAAS,GAAGN,WAAW,CAAC;EAC5BO,IAAI,EAAE,MAAM;EACZN,YAAY;EACZO,QAAQ,EAAE,CAAC;AACb,CAAC,CAAC;AAEF,eAAeF,SAAS,CAACG,OAAO;AAEhC,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,MAAMC,GAAG,GAAG,oCAAoC;EAChD,MAAMC,YAAY,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;EACrC,IAAI,CAACC,YAAY,CAACE,EAAE,EAAE;IACpB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAC1C;EACA,MAAMC,YAAY,GAAG,MAAMJ,YAAY,CAACK,IAAI,CAAC,CAAC;EAC9C,MAAMC,WAAW,GAAGF,YAAY,CAACG,SAAS,CAACC,QAAQ;EACnD,MAAMC,gBAAgB,GAAGH,WAAW,CAACI,GAAG,CAAEC,IAAkB,KAAM;IAChEC,SAAS,EAAED,IAAI,CAACC,SAAS;IACzBC,WAAW,EAAEF,IAAI,CAACE,WAAW;IAC7BC,kBAAkB,EAAEH,IAAI,CAACG,kBAAkB;IAC3CC,QAAQ,EAAEJ,IAAI,CAACI,QAAQ;IACvBC,eAAe,EAAEL,IAAI,CAACK,eAAe;IACrCC,KAAK,EAAEN,IAAI,CAACM,KAAK;IACjBC,MAAM,EAAEP,IAAI,CAACO;EACf,CAAC,CAAC,CAAC;EACHC,OAAO,CAACC,GAAG,CAACX,gBAAgB,CAAC;EAC7B,OAAOA,gBAAgB,CAAC,CAAC;AAC3B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}