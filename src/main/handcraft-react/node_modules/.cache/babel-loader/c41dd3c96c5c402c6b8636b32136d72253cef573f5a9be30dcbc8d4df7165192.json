{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n// export const getCardItems = createAsyncThunk(\"cart/getCartItems\", async() => {\n//   const url = \"http://localhost:8080/api/products\";\n//   return fetch(url)\n//     .then((response) =>\n//       response.json().then((dataJson) => dataJson._embedded.products)\n//     )\n//     .catch((err) => console.log(err));\n// });\nconst initialState = {\n  cartItems: [{\n    item: {},\n    count: 0,\n    color: \"\"\n  }],\n  total: 0,\n  isLoadingCart: true\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addToCart: (state, action) => {\n      const {\n        product,\n        cartCount,\n        cartColor\n      } = action.payload;\n      state.cartItems.push({\n        item: product,\n        count: cartCount,\n        color: cartColor\n      });\n    }\n  }\n  // extraReducers:{\n  //   [String(getCardItems.pending)]:(state:any)=>{\n  //       state.isLoadingCart=true\n  //   },\n  //   [String(getCardItems.fulfilled)]:(state:any,action)=>{\n  //       state.isLoadingCart=false;\n  //       let count = 1\n  //       if(state.cartItems[0].items.filter((x:ProductModel)=> x.productId))\n  //       state.cartItems = [{\n  //         items:action.payload,\n  //         count:count\n  //       }]\n  //   },\n  //   [String(getCardItems.rejected)]:(state:any)=>{\n  //       state.isLoadingCart=true;\n  //   }\n  // }\n});\n\nexport const {\n  clearCard,\n  removeItem,\n  calculateTotals,\n  addToCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","cartItems","item","count","color","total","isLoadingCart","cartSlice","name","reducers","addToCart","state","action","product","cartCount","cartColor","payload","push","clearCard","removeItem","calculateTotals","actions","reducer"],"sources":["C:/Users/Mehemmed/Desktop/Code{1}/Projects/handcraft/src/main/handcraft-react/src/Cart/cartSlice.ts"],"sourcesContent":["import { PayloadAction, createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport ProductModel from \"../Models/ProductModel\";\r\nimport CartItem from \"./CartItem\";\r\n\r\n// export const getCardItems = createAsyncThunk(\"cart/getCartItems\", async() => {\r\n//   const url = \"http://localhost:8080/api/products\";\r\n//   return fetch(url)\r\n//     .then((response) =>\r\n//       response.json().then((dataJson) => dataJson._embedded.products)\r\n//     )\r\n//     .catch((err) => console.log(err));\r\n// });\r\n\r\nconst initialState = {\r\n  cartItems: [{ item: {}, count: 0, color: \"\" }],\r\n  total: 0,\r\n  isLoadingCart: true,\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState,\r\n  reducers: {\r\n    addToCart: (state: any, action) => {\r\n      const { product, cartCount, cartColor } = action.payload;\r\n      state.cartItems.push({\r\n        item: product,\r\n        count: cartCount,\r\n        color: cartColor,\r\n      });\r\n    }\r\n\r\n  },\r\n  // extraReducers:{\r\n  //   [String(getCardItems.pending)]:(state:any)=>{\r\n  //       state.isLoadingCart=true\r\n  //   },\r\n  //   [String(getCardItems.fulfilled)]:(state:any,action)=>{\r\n  //       state.isLoadingCart=false;\r\n  //       let count = 1\r\n  //       if(state.cartItems[0].items.filter((x:ProductModel)=> x.productId))\r\n  //       state.cartItems = [{\r\n  //         items:action.payload,\r\n  //         count:count\r\n  //       }]\r\n  //   },\r\n  //   [String(getCardItems.rejected)]:(state:any)=>{\r\n  //       state.isLoadingCart=true;\r\n  //   }\r\n  // }\r\n});\r\nexport const { clearCard, removeItem, calculateTotals, addToCart } =\r\n  cartSlice.actions;\r\nexport default cartSlice.reducer;\r\n"],"mappings":"AAAA,SAA0CA,WAAW,QAAQ,kBAAkB;AAI/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMC,YAAY,GAAG;EACnBC,SAAS,EAAE,CAAC;IAAEC,IAAI,EAAE,CAAC,CAAC;IAAEC,KAAK,EAAE,CAAC;IAAEC,KAAK,EAAE;EAAG,CAAC,CAAC;EAC9CC,KAAK,EAAE,CAAC;EACRC,aAAa,EAAE;AACjB,CAAC;AAED,MAAMC,SAAS,GAAGR,WAAW,CAAC;EAC5BS,IAAI,EAAE,MAAM;EACZR,YAAY;EACZS,QAAQ,EAAE;IACRC,SAAS,EAAEA,CAACC,KAAU,EAAEC,MAAM,KAAK;MACjC,MAAM;QAAEC,OAAO;QAAEC,SAAS;QAAEC;MAAU,CAAC,GAAGH,MAAM,CAACI,OAAO;MACxDL,KAAK,CAACV,SAAS,CAACgB,IAAI,CAAC;QACnBf,IAAI,EAAEW,OAAO;QACbV,KAAK,EAAEW,SAAS;QAChBV,KAAK,EAAEW;MACT,CAAC,CAAC;IACJ;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC,CAAC;;AACF,OAAO,MAAM;EAAEG,SAAS;EAAEC,UAAU;EAAEC,eAAe;EAAEV;AAAU,CAAC,GAChEH,SAAS,CAACc,OAAO;AACnB,eAAed,SAAS,CAACe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}