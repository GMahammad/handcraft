{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n\n// export const getCardItems = createAsyncThunk(\"cart/getCartItems\", async() => {\n//   const url = \"http://localhost:8080/api/products\";\n//   return fetch(url)\n//     .then((response) =>\n//       response.json().then((dataJson) => dataJson._embedded.products)\n//     )\n//     .catch((err) => console.log(err));\n// });\n\nconst initialState = {\n  cartItems: [],\n  total: 0,\n  isLoadingCart: true\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    clearCart: state => {\n      state.cartItems = [];\n    },\n    addToCart: (state, action) => {\n      const {\n        product,\n        cartCount,\n        cartColor\n      } = action.payload;\n      state.cartItems.push({\n        item: product,\n        count: cartCount,\n        color: cartColor\n      });\n    },\n    removeItem: (state, action) => {\n      const {\n        color,\n        productId\n      } = action.payload;\n      let itemId = -1;\n      let currentItems = state.cartItems.filter(item => item.productId === productId);\n      console.log(currentItems);\n      if (currentItems.length > 1) {\n        state.cartItems.forEach(cartItem => {\n          if (cartItem.item.productId !== productId && cartItem.color !== color) {\n            itemId = state.cartItems.indexOf(cartItem);\n          }\n        });\n        state.cartItems = state.cartItems.splice(itemId, 1);\n      } else {\n        state.cartItems = state.cartItem.filter(cartItem => cartItem.productId !== productId);\n      }\n    },\n    // cartItems = [{productId,n,p,...}]\n    calculateTotals: state => {\n      let totalPrice = 0;\n      state.cartItems.forEach(cartItem => {\n        totalPrice += cartItem.item.price * cartItem.count;\n      });\n      state.total = totalPrice;\n    }\n  }\n  // extraReducers:{\n  //   [String(getCardItems.pending)]:(state:any)=>{\n  //       state.isLoadingCart=true\n  //   },\n  //   [String(getCardItems.fulfilled)]:(state:any,action)=>{\n  //       state.isLoadingCart=false;\n  //       let count = 1\n  //       if(state.cartItems[0].items.filter((x:ProductModel)=> x.productId))\n  //       state.cartItems = [{\n  //         items:action.payload,\n  //         count:count\n  //       }]\n  //   },\n  //   [String(getCardItems.rejected)]:(state:any)=>{\n  //       state.isLoadingCart=true;\n  //   }\n  // }\n});\n\nexport const {\n  clearCart,\n  removeItem,\n  calculateTotals,\n  addToCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","cartItems","total","isLoadingCart","cartSlice","name","reducers","clearCart","state","addToCart","action","product","cartCount","cartColor","payload","push","item","count","color","removeItem","productId","itemId","currentItems","filter","console","log","length","forEach","cartItem","indexOf","splice","calculateTotals","totalPrice","price","actions","reducer"],"sources":["C:/Users/Mehemmed/Desktop/Code{1}/Projects/handcraft/src/main/handcraft-react/src/Cart/cartSlice.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n// export const getCardItems = createAsyncThunk(\"cart/getCartItems\", async() => {\r\n//   const url = \"http://localhost:8080/api/products\";\r\n//   return fetch(url)\r\n//     .then((response) =>\r\n//       response.json().then((dataJson) => dataJson._embedded.products)\r\n//     )\r\n//     .catch((err) => console.log(err));\r\n// });\r\n\r\nconst initialState = {\r\n  cartItems: [],\r\n  total: 0,\r\n  isLoadingCart: true,\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState,\r\n  reducers: {\r\n    clearCart: (state: any) => {\r\n      state.cartItems = [];\r\n    },\r\n\r\n    addToCart: (state: any, action) => {\r\n      const { product, cartCount, cartColor } = action.payload;\r\n      state.cartItems.push({\r\n        item: product,\r\n        count: cartCount,\r\n        color: cartColor,\r\n      });\r\n    },\r\n\r\n    removeItem: (state: any, action) => {\r\n      const { color, productId } = action.payload;\r\n      let itemId = -1;\r\n      let currentItems = state.cartItems.filter(\r\n        (item: any) => item.productId === productId\r\n      );\r\n      console.log(currentItems);\r\n      if (currentItems.length > 1) {\r\n        state.cartItems.forEach((cartItem: any) => {\r\n          if (\r\n            cartItem.item.productId !== productId &&\r\n            cartItem.color !== color\r\n          ) {\r\n            itemId = state.cartItems.indexOf(cartItem);\r\n          }\r\n        });\r\n        state.cartItems = state.cartItems.splice(itemId, 1);\r\n      } else {\r\n        state.cartItems = state.cartItem.filter(\r\n          (cartItem: any) => cartItem.productId !== productId\r\n        );\r\n      }\r\n    },\r\n\r\n    // cartItems = [{productId,n,p,...}]\r\n    calculateTotals: (state: any) => {\r\n      let totalPrice = 0;\r\n      state.cartItems.forEach((cartItem: any) => {\r\n        totalPrice += cartItem.item.price * cartItem.count;\r\n      });\r\n\r\n      state.total = totalPrice;\r\n    },\r\n  },\r\n  // extraReducers:{\r\n  //   [String(getCardItems.pending)]:(state:any)=>{\r\n  //       state.isLoadingCart=true\r\n  //   },\r\n  //   [String(getCardItems.fulfilled)]:(state:any,action)=>{\r\n  //       state.isLoadingCart=false;\r\n  //       let count = 1\r\n  //       if(state.cartItems[0].items.filter((x:ProductModel)=> x.productId))\r\n  //       state.cartItems = [{\r\n  //         items:action.payload,\r\n  //         count:count\r\n  //       }]\r\n  //   },\r\n  //   [String(getCardItems.rejected)]:(state:any)=>{\r\n  //       state.isLoadingCart=true;\r\n  //   }\r\n  // }\r\n});\r\nexport const { clearCart, removeItem, calculateTotals, addToCart } =\r\n  cartSlice.actions;\r\nexport default cartSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAG;EACnBC,SAAS,EAAE,EAAE;EACbC,KAAK,EAAE,CAAC;EACRC,aAAa,EAAE;AACjB,CAAC;AAED,MAAMC,SAAS,GAAGL,WAAW,CAAC;EAC5BM,IAAI,EAAE,MAAM;EACZL,YAAY;EACZM,QAAQ,EAAE;IACRC,SAAS,EAAGC,KAAU,IAAK;MACzBA,KAAK,CAACP,SAAS,GAAG,EAAE;IACtB,CAAC;IAEDQ,SAAS,EAAEA,CAACD,KAAU,EAAEE,MAAM,KAAK;MACjC,MAAM;QAAEC,OAAO;QAAEC,SAAS;QAAEC;MAAU,CAAC,GAAGH,MAAM,CAACI,OAAO;MACxDN,KAAK,CAACP,SAAS,CAACc,IAAI,CAAC;QACnBC,IAAI,EAAEL,OAAO;QACbM,KAAK,EAAEL,SAAS;QAChBM,KAAK,EAAEL;MACT,CAAC,CAAC;IACJ,CAAC;IAEDM,UAAU,EAAEA,CAACX,KAAU,EAAEE,MAAM,KAAK;MAClC,MAAM;QAAEQ,KAAK;QAAEE;MAAU,CAAC,GAAGV,MAAM,CAACI,OAAO;MAC3C,IAAIO,MAAM,GAAG,CAAC,CAAC;MACf,IAAIC,YAAY,GAAGd,KAAK,CAACP,SAAS,CAACsB,MAAM,CACtCP,IAAS,IAAKA,IAAI,CAACI,SAAS,KAAKA,SACpC,CAAC;MACDI,OAAO,CAACC,GAAG,CAACH,YAAY,CAAC;MACzB,IAAIA,YAAY,CAACI,MAAM,GAAG,CAAC,EAAE;QAC3BlB,KAAK,CAACP,SAAS,CAAC0B,OAAO,CAAEC,QAAa,IAAK;UACzC,IACEA,QAAQ,CAACZ,IAAI,CAACI,SAAS,KAAKA,SAAS,IACrCQ,QAAQ,CAACV,KAAK,KAAKA,KAAK,EACxB;YACAG,MAAM,GAAGb,KAAK,CAACP,SAAS,CAAC4B,OAAO,CAACD,QAAQ,CAAC;UAC5C;QACF,CAAC,CAAC;QACFpB,KAAK,CAACP,SAAS,GAAGO,KAAK,CAACP,SAAS,CAAC6B,MAAM,CAACT,MAAM,EAAE,CAAC,CAAC;MACrD,CAAC,MAAM;QACLb,KAAK,CAACP,SAAS,GAAGO,KAAK,CAACoB,QAAQ,CAACL,MAAM,CACpCK,QAAa,IAAKA,QAAQ,CAACR,SAAS,KAAKA,SAC5C,CAAC;MACH;IACF,CAAC;IAED;IACAW,eAAe,EAAGvB,KAAU,IAAK;MAC/B,IAAIwB,UAAU,GAAG,CAAC;MAClBxB,KAAK,CAACP,SAAS,CAAC0B,OAAO,CAAEC,QAAa,IAAK;QACzCI,UAAU,IAAIJ,QAAQ,CAACZ,IAAI,CAACiB,KAAK,GAAGL,QAAQ,CAACX,KAAK;MACpD,CAAC,CAAC;MAEFT,KAAK,CAACN,KAAK,GAAG8B,UAAU;IAC1B;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC,CAAC;;AACF,OAAO,MAAM;EAAEzB,SAAS;EAAEY,UAAU;EAAEY,eAAe;EAAEtB;AAAU,CAAC,GAChEL,SAAS,CAAC8B,OAAO;AACnB,eAAe9B,SAAS,CAAC+B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}