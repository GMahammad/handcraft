{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialTodoState = {\n  todoItems: []\n};\nconst todoSlice = createSlice({\n  name: \"todo\",\n  initialState: initialTodoState,\n  reducers: {\n    loginSuccess: (state, action) => {\n      const {\n        user\n      } = action.payload;\n      state.userEmail = user.email;\n      state.name = user.firstName;\n      state.accessToken = user.accessToken;\n      state.tokenType = user.tokenType;\n      state.roles = user.roles;\n    }\n  }\n});\nexport default todoSlice.reducer;","map":{"version":3,"names":["createSlice","initialTodoState","todoItems","todoSlice","name","initialState","reducers","loginSuccess","state","action","user","payload","userEmail","email","firstName","accessToken","tokenType","roles","reducer"],"sources":["C:/Users/Mehemmed/Desktop/Code{1}/Projects/handcraft/src/main/handcraft-react/src/Redux/todoSlice.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialTodoState = {\r\n   todoItems:[]\r\n};\r\n\r\nconst todoSlice = createSlice({\r\n  name: \"todo\",\r\n  initialState: initialTodoState,\r\n  reducers: {\r\n    loginSuccess: (state: any, action) => {\r\n      const { user } = action.payload;\r\n      state.userEmail = user.email;\r\n      state.name = user.firstName;\r\n      state.accessToken = user.accessToken;\r\n      state.tokenType = user.tokenType;\r\n      state.roles = user.roles;\r\n    },\r\n  \r\n  },\r\n});\r\n\r\nexport default todoSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,gBAAgB,GAAG;EACtBC,SAAS,EAAC;AACb,CAAC;AAED,MAAMC,SAAS,GAAGH,WAAW,CAAC;EAC5BI,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEJ,gBAAgB;EAC9BK,QAAQ,EAAE;IACRC,YAAY,EAAEA,CAACC,KAAU,EAAEC,MAAM,KAAK;MACpC,MAAM;QAAEC;MAAK,CAAC,GAAGD,MAAM,CAACE,OAAO;MAC/BH,KAAK,CAACI,SAAS,GAAGF,IAAI,CAACG,KAAK;MAC5BL,KAAK,CAACJ,IAAI,GAAGM,IAAI,CAACI,SAAS;MAC3BN,KAAK,CAACO,WAAW,GAAGL,IAAI,CAACK,WAAW;MACpCP,KAAK,CAACQ,SAAS,GAAGN,IAAI,CAACM,SAAS;MAChCR,KAAK,CAACS,KAAK,GAAGP,IAAI,CAACO,KAAK;IAC1B;EAEF;AACF,CAAC,CAAC;AAEF,eAAed,SAAS,CAACe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}