{"ast":null,"code":"const fetchProductByAllInputs = async (searchTitle, categoryId, minPrice, maxPrice) => {\n  let url = \"http://localhost:8080/api/products\";\n  if (minPrice == null || maxPrice == null) {\n    setMinPrice(0);\n    setMaxPrice(10000);\n  }\n  if (searchTitle !== \"\" && categoryId !== 0 && minPrice !== 0 && maxPrice !== 10000) {\n    url = `http://localhost:8080/api/products/search/findByProductNameContainingIgnoreCaseAndCategoryAndPriceBetween?productName=${searchTitle}&category=${categoryId}%20&minPrice=${minPrice}%20&maxPrice=${maxPrice}%20`;\n  } else if (searchTitle !== \"\" && categoryId !== 0 && minPrice === 0 && maxPrice === 10000) {\n    url = `http://localhost:8080/api/products/search/findByProductNameContainingIgnoreCaseAndCategory?productName=${searchTitle}&category=${categoryId}%20`;\n  } else if (searchTitle !== \"\" && categoryId === 0 && minPrice === 0 && maxPrice === 10000) {\n    url = `http://localhost:8080/api/products/search/findByProductNameContainingIgnoreCase?productName=${searchTitle}`;\n  } else if (searchTitle !== \"\" && categoryId === 0 && minPrice !== 0 && maxPrice !== 10000) {\n    url = `http://localhost:8080/api/products/search/findByProductNameContainingIgnoreCaseAndPriceBetween?productName=${searchTitle}&minPrice=${minPrice}%20&maxPrice=${maxPrice}%20`;\n  } else if (searchTitle === \"\" && categoryId !== 0 && minPrice !== 0 && maxPrice !== 10000) {\n    url = `http://localhost:8080/api/products/search/findByCategoryAndPriceBetween?category=${categoryId}%20&minPrice=${minPrice}%20&maxPrice=${maxPrice}%20`;\n  } else if (searchTitle === \"\" && categoryId !== 0 && minPrice === 0 && maxPrice === 10000) {\n    url = `http://localhost:8080/api/products/search/findByCategory?category=${categoryId}%20`;\n  } else if (searchTitle === \"\" && categoryId === 0 && minPrice !== 0 && maxPrice !== 10000) {\n    url = `http://localhost:8080/api/products/search/findByPriceBetween?minPrice=${minPrice}%20&maxPrice=${maxPrice}%20`;\n  } else {\n    url = `http://localhost:8080/api/products/`;\n  }\n  if (minPrice >= 0 && maxPrice > minPrice) {\n    setPriceError(false);\n    const responseData = await fetch(url);\n    console.log(url);\n    if (!responseData.ok) {\n      throw new Error(\"Something went wrong!\");\n    }\n    const responseJson = await responseData.json();\n    setProducts(responseJson._embedded.products);\n  } else {\n    setPriceError(true);\n  }\n};\nexport { fetchProductByAllInputs };","map":{"version":3,"names":["fetchProductByAllInputs","searchTitle","categoryId","minPrice","maxPrice","url","setMinPrice","setMaxPrice","setPriceError","responseData","fetch","console","log","ok","Error","responseJson","json","setProducts","_embedded","products"],"sources":["C:/Users/Mehemmed/Desktop/Code{1}/Projects/handcraft/src/main/handcraft-react/src/Utils/SearchFunction.tsx"],"sourcesContent":["import ProductModel from \"../Models/ProductModel\";\r\n\r\nconst fetchProductByAllInputs = async (\r\n  searchTitle:string,\r\n  categoryId:number,\r\n  minPrice:number,\r\n  maxPrice:number,\r\n) => {\r\n  let url = \"http://localhost:8080/api/products\";\r\n  if (minPrice == null || maxPrice == null) {\r\n    setMinPrice(0);\r\n    setMaxPrice(10000);\r\n  }\r\n  if (\r\n    searchTitle !== \"\" &&\r\n    categoryId !== 0 &&\r\n    minPrice !== 0 &&\r\n    maxPrice !== 10000\r\n  ) {\r\n    url = `http://localhost:8080/api/products/search/findByProductNameContainingIgnoreCaseAndCategoryAndPriceBetween?productName=${searchTitle}&category=${categoryId}%20&minPrice=${minPrice}%20&maxPrice=${maxPrice}%20`;\r\n  } else if (\r\n    searchTitle !== \"\" &&\r\n    categoryId !== 0 &&\r\n    minPrice === 0 &&\r\n    maxPrice === 10000\r\n  ) {\r\n    url = `http://localhost:8080/api/products/search/findByProductNameContainingIgnoreCaseAndCategory?productName=${searchTitle}&category=${categoryId}%20`;\r\n  } else if (\r\n    searchTitle !== \"\" &&\r\n    categoryId === 0 &&\r\n    minPrice === 0 &&\r\n    maxPrice === 10000\r\n  ) {\r\n    url = `http://localhost:8080/api/products/search/findByProductNameContainingIgnoreCase?productName=${searchTitle}`;\r\n  } else if (\r\n    searchTitle !== \"\" &&\r\n    categoryId === 0 &&\r\n    minPrice !== 0 &&\r\n    maxPrice !== 10000\r\n  ) {\r\n    url = `http://localhost:8080/api/products/search/findByProductNameContainingIgnoreCaseAndPriceBetween?productName=${searchTitle}&minPrice=${minPrice}%20&maxPrice=${maxPrice}%20`;\r\n  } else if (\r\n    searchTitle === \"\" &&\r\n    categoryId !== 0 &&\r\n    minPrice !== 0 &&\r\n    maxPrice !== 10000\r\n  ) {\r\n    url = `http://localhost:8080/api/products/search/findByCategoryAndPriceBetween?category=${categoryId}%20&minPrice=${minPrice}%20&maxPrice=${maxPrice}%20`;\r\n  } else if (\r\n    searchTitle === \"\" &&\r\n    categoryId !== 0 &&\r\n    minPrice === 0 &&\r\n    maxPrice === 10000\r\n  ) {\r\n    url = `http://localhost:8080/api/products/search/findByCategory?category=${categoryId}%20`;\r\n  } else if (\r\n    searchTitle === \"\" &&\r\n    categoryId === 0 &&\r\n    minPrice !== 0 &&\r\n    maxPrice !== 10000\r\n  ) {\r\n    url = `http://localhost:8080/api/products/search/findByPriceBetween?minPrice=${minPrice}%20&maxPrice=${maxPrice}%20`;\r\n  } else {\r\n    url = `http://localhost:8080/api/products/`;\r\n  }\r\n  if (minPrice >= 0 && maxPrice > minPrice) {\r\n    setPriceError(false);\r\n    const responseData = await fetch(url);\r\n    console.log(url);\r\n\r\n    if (!responseData.ok) {\r\n      throw new Error(\"Something went wrong!\");\r\n    }\r\n    const responseJson = await responseData.json();\r\n    setProducts(responseJson._embedded.products);\r\n  } else {\r\n    setPriceError(true);\r\n  }\r\n};\r\n\r\nexport {fetchProductByAllInputs};\r\n"],"mappings":"AAEA,MAAMA,uBAAuB,GAAG,MAAAA,CAC9BC,WAAkB,EAClBC,UAAiB,EACjBC,QAAe,EACfC,QAAe,KACZ;EACH,IAAIC,GAAG,GAAG,oCAAoC;EAC9C,IAAIF,QAAQ,IAAI,IAAI,IAAIC,QAAQ,IAAI,IAAI,EAAE;IACxCE,WAAW,CAAC,CAAC,CAAC;IACdC,WAAW,CAAC,KAAK,CAAC;EACpB;EACA,IACEN,WAAW,KAAK,EAAE,IAClBC,UAAU,KAAK,CAAC,IAChBC,QAAQ,KAAK,CAAC,IACdC,QAAQ,KAAK,KAAK,EAClB;IACAC,GAAG,GAAI,yHAAwHJ,WAAY,aAAYC,UAAW,gBAAeC,QAAS,gBAAeC,QAAS,KAAI;EACxN,CAAC,MAAM,IACLH,WAAW,KAAK,EAAE,IAClBC,UAAU,KAAK,CAAC,IAChBC,QAAQ,KAAK,CAAC,IACdC,QAAQ,KAAK,KAAK,EAClB;IACAC,GAAG,GAAI,0GAAyGJ,WAAY,aAAYC,UAAW,KAAI;EACzJ,CAAC,MAAM,IACLD,WAAW,KAAK,EAAE,IAClBC,UAAU,KAAK,CAAC,IAChBC,QAAQ,KAAK,CAAC,IACdC,QAAQ,KAAK,KAAK,EAClB;IACAC,GAAG,GAAI,+FAA8FJ,WAAY,EAAC;EACpH,CAAC,MAAM,IACLA,WAAW,KAAK,EAAE,IAClBC,UAAU,KAAK,CAAC,IAChBC,QAAQ,KAAK,CAAC,IACdC,QAAQ,KAAK,KAAK,EAClB;IACAC,GAAG,GAAI,8GAA6GJ,WAAY,aAAYE,QAAS,gBAAeC,QAAS,KAAI;EACnL,CAAC,MAAM,IACLH,WAAW,KAAK,EAAE,IAClBC,UAAU,KAAK,CAAC,IAChBC,QAAQ,KAAK,CAAC,IACdC,QAAQ,KAAK,KAAK,EAClB;IACAC,GAAG,GAAI,oFAAmFH,UAAW,gBAAeC,QAAS,gBAAeC,QAAS,KAAI;EAC3J,CAAC,MAAM,IACLH,WAAW,KAAK,EAAE,IAClBC,UAAU,KAAK,CAAC,IAChBC,QAAQ,KAAK,CAAC,IACdC,QAAQ,KAAK,KAAK,EAClB;IACAC,GAAG,GAAI,qEAAoEH,UAAW,KAAI;EAC5F,CAAC,MAAM,IACLD,WAAW,KAAK,EAAE,IAClBC,UAAU,KAAK,CAAC,IAChBC,QAAQ,KAAK,CAAC,IACdC,QAAQ,KAAK,KAAK,EAClB;IACAC,GAAG,GAAI,yEAAwEF,QAAS,gBAAeC,QAAS,KAAI;EACtH,CAAC,MAAM;IACLC,GAAG,GAAI,qCAAoC;EAC7C;EACA,IAAIF,QAAQ,IAAI,CAAC,IAAIC,QAAQ,GAAGD,QAAQ,EAAE;IACxCK,aAAa,CAAC,KAAK,CAAC;IACpB,MAAMC,YAAY,GAAG,MAAMC,KAAK,CAACL,GAAG,CAAC;IACrCM,OAAO,CAACC,GAAG,CAACP,GAAG,CAAC;IAEhB,IAAI,CAACI,YAAY,CAACI,EAAE,EAAE;MACpB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IAC1C;IACA,MAAMC,YAAY,GAAG,MAAMN,YAAY,CAACO,IAAI,CAAC,CAAC;IAC9CC,WAAW,CAACF,YAAY,CAACG,SAAS,CAACC,QAAQ,CAAC;EAC9C,CAAC,MAAM;IACLX,aAAa,CAAC,IAAI,CAAC;EACrB;AACF,CAAC;AAED,SAAQR,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}