{"ast":null,"code":"// import { useEffect, useState } from \"react\";\n// import ProductModel from \"../Models/ProductModel\";\n// import Spinner from \"../Utils/Spinner\";\n// import SearchItem from \"./Components/SearchItem\";\n// import CategoryModel from \"../Models/CategoryModel\";\n// import React from \"react\";\n// import { fetchProductByAllInputs } from \"../Utils/SearchFunction\";\n// import Pagination from \"../Utils/Pagination\";\n\n// const SearchProductPage = () => {\n//   const [isLoadingProduct, setIsLoadingProduct] = useState(true);\n//   const [httpError, setHttpError] = useState(null);\n//   const [products, setProducts] = useState<ProductModel[]>([]);\n\n//   const [totalPages, setTotalPages] = useState(0);\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const [productPerPage,setProductPerPage] = useState(9);\n\n//   const [totalElements, setTotalElements] = useState(0);\n//   const [categories, setCategories] = useState<CategoryModel[]>([]);\n//   const [searchTitle, setSearchTitle] = useState(\"\");\n//   const [categoryId, setCategoryId] = useState(0);\n//   const [invalidChar, setInvalidChar] = useState(false);\n//   const [minPrice, setMinPrice] = useState(0);\n//   const [maxPrice, setMaxPrice] = useState(10000);\n//   const [priceError, setPriceError] = useState(false);\n//   const [gridView,setGridView] = useState(true)\n//   const [sortUrl,setSortUrl] = useState(\"&sort=\")\n\n//   // Fetching Searched Products || All Products\n//   useEffect(() => {\n//     try {\n//       fetchProductByAllInputs(\n//         searchTitle,\n//         categoryId,\n//         minPrice,\n//         maxPrice,\n//         setProducts,\n//         setPriceError,\n//         currentPage,productPerPage,\n//         setTotalPages,\n//         setTotalElements,\n//         sortUrl\n//       );\n\n//     } catch (err: any) {\n//       setHttpError(err.message);\n//     }\n//   }, [searchTitle, categoryId, minPrice, maxPrice,currentPage,gridView,sortUrl]);\n\n//   // Fetching Categories\n//   useEffect(() => {\n//     const fetchCategories = async () => {\n//       const url = \"http://localhost:8080/api/categories\";\n//       const responseData = await fetch(url);\n//       if (!responseData.ok) {\n//         throw new Error(\"Something went wrong during fetching product!\");\n//       }\n//       const responseJson = await responseData.json();\n//       setCategories(responseJson._embedded.categories);\n//       setIsLoadingProduct(false);\n//     };\n//     fetchCategories().catch((err) => setHttpError(err.message));\n//   }, []);\n\n//   if (isLoadingProduct) {\n//     return <Spinner />;\n//   }\n\n//   if (httpError) {\n//     return <>{httpError}</>;\n//   }\n\n//   const handleSearchInputValidInput = (input: string) => {\n//     const modifiedInput = input.replace(/[^a-zA-Z0-9 ]/g, \"#\");\n//     if (modifiedInput.includes(\"#\")) {\n//       setInvalidChar(true);\n//     } else {\n//       setSearchTitle(input);\n//       setInvalidChar(false);\n//     }\n//   };\n\n//   const handleSortUrl= (value:string)=>{\n//     switch(value){\n//       case \"asc\": setSortUrl(\"&sort=productName,asc\"); break;\n//       case \"desc\": setSortUrl(\"&sort=productName,desc\"); break;\n//       case \"priceasc\": setSortUrl(\"&sort=price,asc\"); break;\n//       case \"pricedesc\": setSortUrl(\"&sort=price,desc\"); break;\n//       case \"default\": setSortUrl(\"&sort=\"); break;\n//     }\n//   }\n\n//   const paginate = (pageNumber: number) => {\n//     setCurrentPage(pageNumber);\n//     window.scrollTo({top:5,behavior:\"smooth\"})\n//   }\n//   return (\n//     <>\n//       <div>\n//         <div className=\"shop-page-wrapper ptb-100\">\n//           <div className=\"container\">\n//             <div className=\"row\">\n//               <div className=\"col-lg-3\">\n//                 <div className=\"shop-sidebar\">\n//                   <div className=\"sidebar-widget mb-50\">\n//                     <h3 className=\"sidebar-title mb-3 mt-2\">Search Products</h3>\n//                     {invalidChar ? (\n//                       <p className=\"error-search\">\n//                         Please enter valid product title\n//                       </p>\n//                     ) : (\n//                       <></>\n//                     )}\n//                     <div\n//                       className={\n//                         invalidChar\n//                           ? \"sidebar-search invalid-search\"\n//                           : \"sidebar-search\"\n//                       }\n//                     >\n//                       <input\n//                         className=\"search-bar\"\n//                         placeholder=\"Search Products...\"\n//                         type=\"text\"\n//                         onChange={(e) =>\n//                           handleSearchInputValidInput(e.target.value)\n//                         }\n//                       >\n//                       </input>\n//                       <span>\n//                         <svg\n//                           xmlns=\"http://www.w3.org/2000/svg\"\n//                           width=\"16\"\n//                           height=\"16\"\n//                           fill=\"currentColor\"\n//                           className=\"bi bi-search\"\n//                           viewBox=\"0 0 16 16\"\n//                         >\n//                           <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\" />\n//                         </svg>\n//                       </span>\n//                     </div>\n//                   </div>\n//                   <div className=\"sidebar-widget mt-4\">\n//                     <h3 className=\"sidebar-title mb-3 \">Filter by Price</h3>\n//                     {priceError ? (\n//                       <p className=\"error-search\">\n//                         Max and Min prices should be corresponding order!\n//                       </p>\n//                     ) : (\n//                       <></>\n//                     )}\n//                     <div className=\"price_filter\">\n//                       <div id=\"slider-range\"></div>\n//                       <div className=\"price_slider_amount\">\n//                         <div className=\"label-input d-flex align-items-center\">\n//                           <input\n//                             type=\"number\"\n//                             className=\"amount\"\n//                             name=\"price\"\n//                             placeholder=\"Min Price\"\n//                             min={0}\n//                             onChange={(e) => {\n//                               setMinPrice(parseInt(e.target.value));\n//                             }}\n//                           />\n//                           <span className=\"px-2\">-</span>\n//                           <input\n//                             type=\"number\"\n//                             className=\"amount\"\n//                             name=\"price\"\n//                             placeholder=\"Max Price\"\n//                             min=\"0\"\n//                             onChange={(e) => {\n//                               setMaxPrice(parseInt(e.target.value));\n//                             }}\n//                           />\n//                         </div>\n//                       </div>\n//                     </div>\n//                   </div>\n//                   <div className=\"sidebar-widget mb-45\">\n//                     <h3 className=\"sidebar-title mt-4 mb-3\">Categories</h3>\n//                     <div className=\"sidebar-categories\">\n//                       <ul className=\"m-0 p-0 category-item\">\n//                         <li\n//                           className={categoryId === 0 ? \"active-category\" : \"\"}\n//                         >\n//                           <span>\n//                             <svg\n//                               xmlns=\"http://www.w3.org/2000/svg\"\n//                               width=\"16\"\n//                               height=\"16\"\n//                               fill=\"currentColor\"\n//                               className=\"bi bi-dash-lg mb-1\"\n//                               viewBox=\"0 0 16 16\"\n//                             >\n//                               <path\n//                                 fillRule=\"evenodd\"\n//                                 d=\"M2 8a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11A.5.5 0 0 1 2 8Z\"\n//                               />\n//                             </svg>\n//                           </span>\n//                           <p onClick={() => setCategoryId(0)}>All Categories</p>\n//                         </li>\n//                         {categories.map((category, index) => (\n//                           <li\n//                             className={\n//                               categoryId === category.categoryId\n//                                 ? \"active-category\"\n//                                 : \"\"\n//                             }\n//                             key={index}\n//                             onClick={() => setCategoryId(category.categoryId)}\n//                           >\n//                             <span className=\"\">\n//                               <svg\n//                                 xmlns=\"http://www.w3.org/2000/svg\"\n//                                 width=\"16\"\n//                                 height=\"16\"\n//                                 fill=\"currentColor\"\n//                                 className=\"bi bi-dash-lg mb-1\"\n//                                 viewBox=\"0 0 16 16\"\n//                               >\n//                                 <path\n//                                   fillRule=\"evenodd\"\n//                                   d=\"M2 8a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11A.5.5 0 0 1 2 8Z\"\n//                                 />\n//                               </svg>\n//                             </span>\n//                             <p>{category.categoryName}</p>\n//                           </li>\n//                         ))}\n//                       </ul>\n//                     </div>\n//                   </div>\n\n//                 </div>\n//               </div>\n//               <div className=\"col-lg-9 order-1 order-lg-2\">\n//                 <div className=\"shop-product-wrapper\">\n//                   <div className=\"shop-bar-area\">\n//                     <div className=\"shop-bar pb-60\">\n//                       <div className=\"shop-found-selector\">\n//                         <div className=\"shop-found\">\n//                           <p>\n//                             <span></span>Number of Product Found: <span>{totalElements}</span>\n//                           </p>\n//                         </div>\n//                         <div className=\"shop-selector\">\n//                           <label>Sort By : </label>\n//                           <select className=\"sort-input\" name=\"select\" onChange={(e) => handleSortUrl(e.target.value)}>\n//                             <option  value=\"default\">Default</option>\n//                             <option value=\"asc\">  A to Z  </option>\n//                             <option  value=\"desc\"> Z to A</option>\n//                             <option  value=\"priceasc\"> Price Asc</option>\n//                             <option  value=\"pricedesc\"> Price Desc</option>\n\n//                           </select>\n//                         </div>\n//                       </div>\n//                       <div className=\"shop-filter-tab\">\n//                         <div className=\"shop-tab nav\" role=\"tablist\">\n//                           <a\n//                             className=\"active\"\n//                             data-bs-toggle=\"tab\"\n//                             role=\"tab\"\n//                             aria-selected=\"false\"\n//                           >\n//                             <svg\n//                               xmlns=\"http://www.w3.org/2000/svg\"\n//                               width=\"26\"\n//                               height=\"26\"\n//                               fill=\"currentColor\"\n//                               className=\"bi bi-grid-3x3-gap view-svg\"\n//                               viewBox=\"0 0 16 16\"\n//                               onClick={() =>{setGridView(true) } }\n//                             >\n//                               <path d=\"M4 2v2H2V2h2zm1 12v-2a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1zm0-5V7a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1zm0-5V2a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1zm5 10v-2a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1zm0-5V7a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1zm0-5V2a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1zM9 2v2H7V2h2zm5 0v2h-2V2h2zM4 7v2H2V7h2zm5 0v2H7V7h2zm5 0h-2v2h2V7zM4 12v2H2v-2h2zm5 0v2H7v-2h2zm5 0v2h-2v-2h2zM12 1a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1h-2zm-1 6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1V7zm1 4a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1v-2a1 1 0 0 0-1-1h-2z\" />\n//                             </svg>\n//                           </a>\n//                           <a\n//                             data-bs-toggle=\"tab\"\n//                             role=\"tab\"\n//                             aria-selected=\"true\"\n//                           >\n//                             <svg\n//                             style={{cursor:\"pointer\"}}\n//                               xmlns=\"http://www.w3.org/2000/svg\"\n//                               width=\"26\"\n//                               height=\"26\"\n//                               fill=\"currentColor\"\n//                               className=\"bi bi-list view-svg\"\n//                               viewBox=\"0 0 16 16\"\n//                               onClick={()=>{setGridView(false)}}\n//                             >\n//                               <path\n//                                 fillRule=\"evenodd\"\n//                                 d=\"M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\"\n//                               />\n//                             </svg>{\" \"}\n//                           </a>\n//                         </div>\n//                       </div>\n//                     </div>\n//                     <div className=\"shop-product-content tab-content\">\n//                       <div\n//                         id=\"grid-sidebar7\"\n//                         className=\"tab-pane fade active show\"\n//                       >\n//                         <div className=\"row\">\n//                           {products.length == 0 ? (\n//                             <p className=\"nothing-found\">\n//                               Nothing can be found!\n//                             </p>\n//                           ) : (\n//                             products.map((product) => (\n//                               <SearchItem\n//                               productId = {product.productId}\n//                               gridView = {gridView}\n//                                 product={product}\n//                                 key={product.productId}\n//                               />\n//                             ))\n//                           )}\n//                         </div>\n//                       </div>\n//                     </div>\n//                   </div>\n//                 </div>\n//                 {totalElements >=9 ? \n//                 <Pagination currentPage={currentPage} totalPages={totalPages} paginate={paginate}/>\n//               :<></>}\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     </>\n//   );\n// };\n\n// export default SearchProductPage;","map":{"version":3,"names":[],"sources":["C:/Users/Mehemmed/Desktop/Code{1}/Projects/handcraft/src/main/handcraft-react/src/SearchProduct/SearchProductPage.tsx"],"sourcesContent":["// import { useEffect, useState } from \"react\";\r\n// import ProductModel from \"../Models/ProductModel\";\r\n// import Spinner from \"../Utils/Spinner\";\r\n// import SearchItem from \"./Components/SearchItem\";\r\n// import CategoryModel from \"../Models/CategoryModel\";\r\n// import React from \"react\";\r\n// import { fetchProductByAllInputs } from \"../Utils/SearchFunction\";\r\n// import Pagination from \"../Utils/Pagination\";\r\n\r\n// const SearchProductPage = () => {\r\n//   const [isLoadingProduct, setIsLoadingProduct] = useState(true);\r\n//   const [httpError, setHttpError] = useState(null);\r\n//   const [products, setProducts] = useState<ProductModel[]>([]);\r\n  \r\n  \r\n//   const [totalPages, setTotalPages] = useState(0);\r\n//   const [currentPage, setCurrentPage] = useState(1);\r\n//   const [productPerPage,setProductPerPage] = useState(9);\r\n\r\n\r\n\r\n//   const [totalElements, setTotalElements] = useState(0);\r\n//   const [categories, setCategories] = useState<CategoryModel[]>([]);\r\n//   const [searchTitle, setSearchTitle] = useState(\"\");\r\n//   const [categoryId, setCategoryId] = useState(0);\r\n//   const [invalidChar, setInvalidChar] = useState(false);\r\n//   const [minPrice, setMinPrice] = useState(0);\r\n//   const [maxPrice, setMaxPrice] = useState(10000);\r\n//   const [priceError, setPriceError] = useState(false);\r\n//   const [gridView,setGridView] = useState(true)\r\n//   const [sortUrl,setSortUrl] = useState(\"&sort=\")\r\n\r\n//   // Fetching Searched Products || All Products\r\n//   useEffect(() => {\r\n//     try {\r\n//       fetchProductByAllInputs(\r\n//         searchTitle,\r\n//         categoryId,\r\n//         minPrice,\r\n//         maxPrice,\r\n//         setProducts,\r\n//         setPriceError,\r\n//         currentPage,productPerPage,\r\n//         setTotalPages,\r\n//         setTotalElements,\r\n//         sortUrl\r\n//       );\r\n\r\n//     } catch (err: any) {\r\n//       setHttpError(err.message);\r\n//     }\r\n//   }, [searchTitle, categoryId, minPrice, maxPrice,currentPage,gridView,sortUrl]);\r\n\r\n//   // Fetching Categories\r\n//   useEffect(() => {\r\n//     const fetchCategories = async () => {\r\n//       const url = \"http://localhost:8080/api/categories\";\r\n//       const responseData = await fetch(url);\r\n//       if (!responseData.ok) {\r\n//         throw new Error(\"Something went wrong during fetching product!\");\r\n//       }\r\n//       const responseJson = await responseData.json();\r\n//       setCategories(responseJson._embedded.categories);\r\n//       setIsLoadingProduct(false);\r\n//     };\r\n//     fetchCategories().catch((err) => setHttpError(err.message));\r\n//   }, []);\r\n\r\n\r\n\r\n//   if (isLoadingProduct) {\r\n//     return <Spinner />;\r\n//   }\r\n\r\n//   if (httpError) {\r\n//     return <>{httpError}</>;\r\n//   }\r\n\r\n//   const handleSearchInputValidInput = (input: string) => {\r\n//     const modifiedInput = input.replace(/[^a-zA-Z0-9 ]/g, \"#\");\r\n//     if (modifiedInput.includes(\"#\")) {\r\n//       setInvalidChar(true);\r\n//     } else {\r\n//       setSearchTitle(input);\r\n//       setInvalidChar(false);\r\n//     }\r\n//   };\r\n\r\n//   const handleSortUrl= (value:string)=>{\r\n//     switch(value){\r\n//       case \"asc\": setSortUrl(\"&sort=productName,asc\"); break;\r\n//       case \"desc\": setSortUrl(\"&sort=productName,desc\"); break;\r\n//       case \"priceasc\": setSortUrl(\"&sort=price,asc\"); break;\r\n//       case \"pricedesc\": setSortUrl(\"&sort=price,desc\"); break;\r\n//       case \"default\": setSortUrl(\"&sort=\"); break;\r\n//     }\r\n//   }\r\n\r\n//   const paginate = (pageNumber: number) => {\r\n//     setCurrentPage(pageNumber);\r\n//     window.scrollTo({top:5,behavior:\"smooth\"})\r\n//   }\r\n//   return (\r\n//     <>\r\n//       <div>\r\n//         <div className=\"shop-page-wrapper ptb-100\">\r\n//           <div className=\"container\">\r\n//             <div className=\"row\">\r\n//               <div className=\"col-lg-3\">\r\n//                 <div className=\"shop-sidebar\">\r\n//                   <div className=\"sidebar-widget mb-50\">\r\n//                     <h3 className=\"sidebar-title mb-3 mt-2\">Search Products</h3>\r\n//                     {invalidChar ? (\r\n//                       <p className=\"error-search\">\r\n//                         Please enter valid product title\r\n//                       </p>\r\n//                     ) : (\r\n//                       <></>\r\n//                     )}\r\n//                     <div\r\n//                       className={\r\n//                         invalidChar\r\n//                           ? \"sidebar-search invalid-search\"\r\n//                           : \"sidebar-search\"\r\n//                       }\r\n//                     >\r\n//                       <input\r\n//                         className=\"search-bar\"\r\n//                         placeholder=\"Search Products...\"\r\n//                         type=\"text\"\r\n//                         onChange={(e) =>\r\n//                           handleSearchInputValidInput(e.target.value)\r\n//                         }\r\n//                       >\r\n//                       </input>\r\n//                       <span>\r\n//                         <svg\r\n//                           xmlns=\"http://www.w3.org/2000/svg\"\r\n//                           width=\"16\"\r\n//                           height=\"16\"\r\n//                           fill=\"currentColor\"\r\n//                           className=\"bi bi-search\"\r\n//                           viewBox=\"0 0 16 16\"\r\n//                         >\r\n//                           <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\" />\r\n//                         </svg>\r\n//                       </span>\r\n//                     </div>\r\n//                   </div>\r\n//                   <div className=\"sidebar-widget mt-4\">\r\n//                     <h3 className=\"sidebar-title mb-3 \">Filter by Price</h3>\r\n//                     {priceError ? (\r\n//                       <p className=\"error-search\">\r\n//                         Max and Min prices should be corresponding order!\r\n//                       </p>\r\n//                     ) : (\r\n//                       <></>\r\n//                     )}\r\n//                     <div className=\"price_filter\">\r\n//                       <div id=\"slider-range\"></div>\r\n//                       <div className=\"price_slider_amount\">\r\n//                         <div className=\"label-input d-flex align-items-center\">\r\n//                           <input\r\n//                             type=\"number\"\r\n//                             className=\"amount\"\r\n//                             name=\"price\"\r\n//                             placeholder=\"Min Price\"\r\n//                             min={0}\r\n//                             onChange={(e) => {\r\n//                               setMinPrice(parseInt(e.target.value));\r\n//                             }}\r\n//                           />\r\n//                           <span className=\"px-2\">-</span>\r\n//                           <input\r\n//                             type=\"number\"\r\n//                             className=\"amount\"\r\n//                             name=\"price\"\r\n//                             placeholder=\"Max Price\"\r\n//                             min=\"0\"\r\n//                             onChange={(e) => {\r\n//                               setMaxPrice(parseInt(e.target.value));\r\n//                             }}\r\n//                           />\r\n//                         </div>\r\n//                       </div>\r\n//                     </div>\r\n//                   </div>\r\n//                   <div className=\"sidebar-widget mb-45\">\r\n//                     <h3 className=\"sidebar-title mt-4 mb-3\">Categories</h3>\r\n//                     <div className=\"sidebar-categories\">\r\n//                       <ul className=\"m-0 p-0 category-item\">\r\n//                         <li\r\n//                           className={categoryId === 0 ? \"active-category\" : \"\"}\r\n//                         >\r\n//                           <span>\r\n//                             <svg\r\n//                               xmlns=\"http://www.w3.org/2000/svg\"\r\n//                               width=\"16\"\r\n//                               height=\"16\"\r\n//                               fill=\"currentColor\"\r\n//                               className=\"bi bi-dash-lg mb-1\"\r\n//                               viewBox=\"0 0 16 16\"\r\n//                             >\r\n//                               <path\r\n//                                 fillRule=\"evenodd\"\r\n//                                 d=\"M2 8a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11A.5.5 0 0 1 2 8Z\"\r\n//                               />\r\n//                             </svg>\r\n//                           </span>\r\n//                           <p onClick={() => setCategoryId(0)}>All Categories</p>\r\n//                         </li>\r\n//                         {categories.map((category, index) => (\r\n//                           <li\r\n//                             className={\r\n//                               categoryId === category.categoryId\r\n//                                 ? \"active-category\"\r\n//                                 : \"\"\r\n//                             }\r\n//                             key={index}\r\n//                             onClick={() => setCategoryId(category.categoryId)}\r\n//                           >\r\n//                             <span className=\"\">\r\n//                               <svg\r\n//                                 xmlns=\"http://www.w3.org/2000/svg\"\r\n//                                 width=\"16\"\r\n//                                 height=\"16\"\r\n//                                 fill=\"currentColor\"\r\n//                                 className=\"bi bi-dash-lg mb-1\"\r\n//                                 viewBox=\"0 0 16 16\"\r\n//                               >\r\n//                                 <path\r\n//                                   fillRule=\"evenodd\"\r\n//                                   d=\"M2 8a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11A.5.5 0 0 1 2 8Z\"\r\n//                                 />\r\n//                               </svg>\r\n//                             </span>\r\n//                             <p>{category.categoryName}</p>\r\n//                           </li>\r\n//                         ))}\r\n//                       </ul>\r\n//                     </div>\r\n//                   </div>\r\n                  \r\n//                 </div>\r\n//               </div>\r\n//               <div className=\"col-lg-9 order-1 order-lg-2\">\r\n//                 <div className=\"shop-product-wrapper\">\r\n//                   <div className=\"shop-bar-area\">\r\n//                     <div className=\"shop-bar pb-60\">\r\n//                       <div className=\"shop-found-selector\">\r\n//                         <div className=\"shop-found\">\r\n//                           <p>\r\n//                             <span></span>Number of Product Found: <span>{totalElements}</span>\r\n//                           </p>\r\n//                         </div>\r\n//                         <div className=\"shop-selector\">\r\n//                           <label>Sort By : </label>\r\n//                           <select className=\"sort-input\" name=\"select\" onChange={(e) => handleSortUrl(e.target.value)}>\r\n//                             <option  value=\"default\">Default</option>\r\n//                             <option value=\"asc\">  A to Z  </option>\r\n//                             <option  value=\"desc\"> Z to A</option>\r\n//                             <option  value=\"priceasc\"> Price Asc</option>\r\n//                             <option  value=\"pricedesc\"> Price Desc</option>\r\n\r\n//                           </select>\r\n//                         </div>\r\n//                       </div>\r\n//                       <div className=\"shop-filter-tab\">\r\n//                         <div className=\"shop-tab nav\" role=\"tablist\">\r\n//                           <a\r\n//                             className=\"active\"\r\n//                             data-bs-toggle=\"tab\"\r\n//                             role=\"tab\"\r\n//                             aria-selected=\"false\"\r\n//                           >\r\n//                             <svg\r\n//                               xmlns=\"http://www.w3.org/2000/svg\"\r\n//                               width=\"26\"\r\n//                               height=\"26\"\r\n//                               fill=\"currentColor\"\r\n//                               className=\"bi bi-grid-3x3-gap view-svg\"\r\n//                               viewBox=\"0 0 16 16\"\r\n//                               onClick={() =>{setGridView(true) } }\r\n//                             >\r\n//                               <path d=\"M4 2v2H2V2h2zm1 12v-2a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1zm0-5V7a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1zm0-5V2a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1zm5 10v-2a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1zm0-5V7a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1zm0-5V2a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1zM9 2v2H7V2h2zm5 0v2h-2V2h2zM4 7v2H2V7h2zm5 0v2H7V7h2zm5 0h-2v2h2V7zM4 12v2H2v-2h2zm5 0v2H7v-2h2zm5 0v2h-2v-2h2zM12 1a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1h-2zm-1 6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1V7zm1 4a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1v-2a1 1 0 0 0-1-1h-2z\" />\r\n//                             </svg>\r\n//                           </a>\r\n//                           <a\r\n//                             data-bs-toggle=\"tab\"\r\n//                             role=\"tab\"\r\n//                             aria-selected=\"true\"\r\n//                           >\r\n//                             <svg\r\n//                             style={{cursor:\"pointer\"}}\r\n//                               xmlns=\"http://www.w3.org/2000/svg\"\r\n//                               width=\"26\"\r\n//                               height=\"26\"\r\n//                               fill=\"currentColor\"\r\n//                               className=\"bi bi-list view-svg\"\r\n//                               viewBox=\"0 0 16 16\"\r\n//                               onClick={()=>{setGridView(false)}}\r\n//                             >\r\n//                               <path\r\n//                                 fillRule=\"evenodd\"\r\n//                                 d=\"M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\"\r\n//                               />\r\n//                             </svg>{\" \"}\r\n//                           </a>\r\n//                         </div>\r\n//                       </div>\r\n//                     </div>\r\n//                     <div className=\"shop-product-content tab-content\">\r\n//                       <div\r\n//                         id=\"grid-sidebar7\"\r\n//                         className=\"tab-pane fade active show\"\r\n//                       >\r\n//                         <div className=\"row\">\r\n//                           {products.length == 0 ? (\r\n//                             <p className=\"nothing-found\">\r\n//                               Nothing can be found!\r\n//                             </p>\r\n//                           ) : (\r\n//                             products.map((product) => (\r\n//                               <SearchItem\r\n//                               productId = {product.productId}\r\n//                               gridView = {gridView}\r\n//                                 product={product}\r\n//                                 key={product.productId}\r\n//                               />\r\n//                             ))\r\n//                           )}\r\n//                         </div>\r\n//                       </div>\r\n//                     </div>\r\n//                   </div>\r\n//                 </div>\r\n//                 {totalElements >=9 ? \r\n//                 <Pagination currentPage={currentPage} totalPages={totalPages} paginate={paginate}/>\r\n//               :<></>}\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default SearchProductPage;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}