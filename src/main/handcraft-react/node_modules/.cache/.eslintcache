[{"C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\index.tsx":"1","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Redux\\store.ts":"2","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\App.tsx":"3","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Redux\\todoSlice.ts":"4","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Cart\\cartSlice.ts":"5","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Auth\\AuthPage.tsx":"6","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\NavbarFooter\\Footer.tsx":"7","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Auth\\Data\\authSlice.ts":"8","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\NavbarFooter\\Navbar.tsx":"9","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Home\\HomePage.tsx":"10","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\ProductDetail\\ProductDetailPage.tsx":"11","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Contact\\ContactPage.tsx":"12","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\AboutUs\\AboutUs.tsx":"13","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\SearchProduct\\SearchProductPage.tsx":"14","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Admin\\AdminNavbar.tsx":"15","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Admin\\AdminPage.tsx":"16","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Cart\\Components\\CartPage.tsx":"17","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Cart\\Components\\Checkout.tsx":"18","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Cart\\Components\\PaymentCompleted.tsx":"19","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Admin\\Components\\Messages\\MessagePage.tsx":"20","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Admin\\Components\\ProductsManagement\\CreateProduct.tsx":"21","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Admin\\Components\\ProductsManagement\\EditProduct.tsx":"22","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Admin\\Components\\AdminAuth\\UsersList.tsx":"23","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Admin\\Components\\ProductsManagement\\ProductManagementPage.tsx":"24","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Admin\\Components\\AdminAuth\\ModsList.tsx":"25","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Admin\\Components\\AdminAuth\\UserManagement\\UserManagement.tsx":"26","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Admin\\Components\\AdminAuth\\AdminList.tsx":"27","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Admin\\Components\\HomePageManagement\\HomePageManagement.tsx":"28","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Admin\\Components\\AdminTodo\\TodoPage.tsx":"29","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Admin\\Components\\Payments\\SinglePayment.tsx":"30","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Admin\\Components\\Payments\\PaymentPage.tsx":"31","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Home\\Components\\CarouselHome.tsx":"32","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Home\\Components\\Banner2.tsx":"33","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Home\\Components\\Banner.tsx":"34","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\ProductDetail\\Components\\Details.tsx":"35","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Cart\\CartContainer.tsx":"36","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Auth\\Components\\Registration.tsx":"37","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Auth\\Components\\Login.tsx":"38","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Cart\\Components\\CartPageItem.tsx":"39","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Admin\\Components\\AdminContent.tsx":"40","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Utils\\Spinner.tsx":"41","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Utils\\Pagination.tsx":"42","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Utils\\SearchFunction.tsx":"43","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Contact\\Components\\ContactMessage.tsx":"44","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\SearchProduct\\Components\\SearchItem.tsx":"45","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Utils\\AuthList.tsx":"46","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Models\\Requests\\CheckoutRequest.ts":"47","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Utils\\ModalPayment.tsx":"48","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Models\\Requests\\CreateProductRequest.ts":"49","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Models\\CheckoutBill.ts":"50","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Utils\\ModalExampleModal.tsx":"51","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Utils\\AddTodoModal.tsx":"52","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\ProductDetail\\Components\\RelatedProduct.tsx":"53","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Cart\\Components\\CartItem.tsx":"54","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Utils\\StarRating.tsx":"55","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\ProductDetail\\Components\\DescriptionReview.tsx":"56","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Admin\\Components\\AdminInfoContent.tsx":"57","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Admin\\Components\\Messages\\MessageList.tsx":"58","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Models\\Requests\\PaymentInfoRequest.ts":"59","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Admin\\Components\\Payments\\PaymentListCard.tsx":"60"},{"size":1190,"mtime":1691341782694,"results":"61","hashOfConfig":"62"},{"size":905,"mtime":1691178019837,"results":"63","hashOfConfig":"62"},{"size":5363,"mtime":1691527542387,"results":"64","hashOfConfig":"62"},{"size":1417,"mtime":1691182554339,"results":"65","hashOfConfig":"62"},{"size":1896,"mtime":1691515464885,"results":"66","hashOfConfig":"62"},{"size":563,"mtime":1691187383254,"results":"67","hashOfConfig":"62"},{"size":3530,"mtime":1689885549136,"results":"68","hashOfConfig":"62"},{"size":1479,"mtime":1691516750176,"results":"69","hashOfConfig":"62"},{"size":7311,"mtime":1691516827443,"results":"70","hashOfConfig":"62"},{"size":320,"mtime":1690660709547,"results":"71","hashOfConfig":"62"},{"size":383,"mtime":1689196944872,"results":"72","hashOfConfig":"62"},{"size":4908,"mtime":1690067284718,"results":"73","hashOfConfig":"62"},{"size":7846,"mtime":1689534521829,"results":"74","hashOfConfig":"62"},{"size":15848,"mtime":1691684791193,"results":"75","hashOfConfig":"62"},{"size":13387,"mtime":1691518010264,"results":"76","hashOfConfig":"62"},{"size":268,"mtime":1690552294159,"results":"77","hashOfConfig":"62"},{"size":2483,"mtime":1690203428523,"results":"78","hashOfConfig":"62"},{"size":9979,"mtime":1691513930215,"results":"79","hashOfConfig":"62"},{"size":1019,"mtime":1691512467947,"results":"80","hashOfConfig":"62"},{"size":2134,"mtime":1690574023140,"results":"81","hashOfConfig":"62"},{"size":10907,"mtime":1690930292743,"results":"82","hashOfConfig":"62"},{"size":14295,"mtime":1691272124615,"results":"83","hashOfConfig":"62"},{"size":219,"mtime":1690986969254,"results":"84","hashOfConfig":"62"},{"size":13430,"mtime":1691684807606,"results":"85","hashOfConfig":"62"},{"size":216,"mtime":1690987080140,"results":"86","hashOfConfig":"62"},{"size":5049,"mtime":1691158894464,"results":"87","hashOfConfig":"62"},{"size":220,"mtime":1690987221539,"results":"88","hashOfConfig":"62"},{"size":4352,"mtime":1691295043498,"results":"89","hashOfConfig":"62"},{"size":3621,"mtime":1691182944804,"results":"90","hashOfConfig":"62"},{"size":4083,"mtime":1691632946305,"results":"91","hashOfConfig":"62"},{"size":2991,"mtime":1691685265419,"results":"92","hashOfConfig":"62"},{"size":1199,"mtime":1691295382244,"results":"93","hashOfConfig":"62"},{"size":1535,"mtime":1691242547986,"results":"94","hashOfConfig":"62"},{"size":3466,"mtime":1691297554680,"results":"95","hashOfConfig":"62"},{"size":16601,"mtime":1691627623472,"results":"96","hashOfConfig":"62"},{"size":1705,"mtime":1689744958927,"results":"97","hashOfConfig":"62"},{"size":5383,"mtime":1691189489132,"results":"98","hashOfConfig":"62"},{"size":5212,"mtime":1691188283908,"results":"99","hashOfConfig":"62"},{"size":2668,"mtime":1689746384431,"results":"100","hashOfConfig":"62"},{"size":8022,"mtime":1691634209982,"results":"101","hashOfConfig":"62"},{"size":281,"mtime":1689459787417,"results":"102","hashOfConfig":"62"},{"size":1673,"mtime":1690923477013,"results":"103","hashOfConfig":"62"},{"size":3766,"mtime":1691684560225,"results":"104","hashOfConfig":"62"},{"size":4939,"mtime":1690330397838,"results":"105","hashOfConfig":"62"},{"size":4112,"mtime":1690988371851,"results":"106","hashOfConfig":"62"},{"size":2200,"mtime":1690986941340,"results":"107","hashOfConfig":"62"},{"size":784,"mtime":1691453462076,"results":"108","hashOfConfig":"62"},{"size":4340,"mtime":1691511975760,"results":"109","hashOfConfig":"62"},{"size":750,"mtime":1690904760914,"results":"110","hashOfConfig":"62"},{"size":260,"mtime":1691446170586,"results":"111","hashOfConfig":"62"},{"size":1411,"mtime":1690664227048,"results":"112","hashOfConfig":"62"},{"size":2601,"mtime":1691241528938,"results":"113","hashOfConfig":"62"},{"size":1127,"mtime":1690988957447,"results":"114","hashOfConfig":"62"},{"size":2787,"mtime":1690203267896,"results":"115","hashOfConfig":"62"},{"size":2921,"mtime":1689517219134,"results":"116","hashOfConfig":"62"},{"size":2600,"mtime":1691195171635,"results":"117","hashOfConfig":"62"},{"size":2394,"mtime":1691634180197,"results":"118","hashOfConfig":"62"},{"size":1657,"mtime":1690552306640,"results":"119","hashOfConfig":"62"},{"size":329,"mtime":1691450896950,"results":"120","hashOfConfig":"62"},{"size":1380,"mtime":1691633627005,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},"u4a7gs",{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"125"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"136","usedDeprecatedRules":"125"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"125"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"125"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"125"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"125"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"125"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"125"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"125"},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"125"},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"125"},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"125"},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"125"},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"235","messages":"236","suppressedMessages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"238","messages":"239","suppressedMessages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"241","messages":"242","suppressedMessages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"125"},{"filePath":"245","messages":"246","suppressedMessages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"248","messages":"249","suppressedMessages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"251","messages":"252","suppressedMessages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"125"},{"filePath":"255","messages":"256","suppressedMessages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"259"},{"filePath":"260","messages":"261","suppressedMessages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"263","messages":"264","suppressedMessages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"266","messages":"267","suppressedMessages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","suppressedMessages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"125"},{"filePath":"273","messages":"274","suppressedMessages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"125"},{"filePath":"277","messages":"278","suppressedMessages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"125"},{"filePath":"281","messages":"282","suppressedMessages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"284","messages":"285","suppressedMessages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"125"},{"filePath":"288","messages":"289","suppressedMessages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"291","messages":"292","suppressedMessages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"294","messages":"295","suppressedMessages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"125"},{"filePath":"298","messages":"299","suppressedMessages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"301","messages":"302","suppressedMessages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"125"},{"filePath":"305","messages":"306","suppressedMessages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"308","messages":"309","suppressedMessages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"311","messages":"312","suppressedMessages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"314","messages":"315","suppressedMessages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"317","messages":"318","suppressedMessages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"125"},{"filePath":"321","messages":"322","suppressedMessages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"324","messages":"325","suppressedMessages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\index.tsx",[],[],[],"C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Redux\\store.ts",[],[],"C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\App.tsx",["327","328","329"],[],"import {\n  Redirect,\n  Route,\n  Router,\n  Switch,\n  useHistory,\n  useLocation,\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport HomePage from \"./Home/HomePage\";\nimport Footer from \"./NavbarFooter/Footer\";\nimport Navbar from \"./NavbarFooter/Navbar\";\nimport ProductDetailPage from \"./ProductDetail/ProductDetailPage\";\nimport SearchProductPage from \"./SearchProduct/SearchProductPage\";\nimport AboutUs from \"./AboutUs/AboutUs\";\nimport ContactPage from \"./Contact/ContactPage\";\nimport CartPage from \"./Cart/Components/CartPage\";\nimport Checkout from \"./Cart/Components/Checkout\";\nimport AuthPage from \"./Auth/AuthPage\";\nimport AdminPage from \"./Admin/AdminPage\";\nimport MessagePage from \"./Admin/Components/Messages/MessagePage\";\nimport AdminNavbar from \"./Admin/AdminNavbar\";\nimport ProductManagementPage from \"./Admin/Components/ProductsManagement/ProductManagementPage\";\nimport CreateProduct from \"./Admin/Components/ProductsManagement/CreateProduct\";\nimport EditProduct from \"./Admin/Components/ProductsManagement/EditProduct\";\nimport UsersList from \"./Admin/Components/AdminAuth/UsersList\";\nimport ModsList from \"./Admin/Components/AdminAuth/ModsList\";\nimport AdminList from \"./Admin/Components/AdminAuth/AdminList\";\nimport UserManagement from \"./Admin/Components/AdminAuth/UserManagement/UserManagement\";\nimport { useSelector } from \"react-redux\";\nimport TodoPage from \"./Admin/Components/AdminTodo/TodoPage\";\nimport HomePageManagement from \"./Admin/Components/HomePageManagement/HomePageManagement\";\nimport PaymentCompleted from \"./Cart/Components/PaymentCompleted\";\nimport Login from \"./Auth/Components/Login\";\nimport PaymentPage from \"./Admin/Components/Payments/PaymentPage\";\nimport SinglePayment from \"./Admin/Components/Payments/SinglePayment\";\n\nfunction App() {\n  const location = useLocation();\n  const isAdminPage = location.pathname.includes(\"admin\");\n  const { isAdmin, isAuthenticated, isMod } = useSelector(\n    (store: any) => store.auth\n  );\n\n  return (\n    <div className=\"d-flex flex-column min-vh-100 mt-5 pt-2\">\n      {!isAdminPage && <Navbar />}\n      <div className=\"flex-grow-1\">\n        <Switch>\n          <Route path=\"/\" exact>\n            <Redirect to=\"/\" />\n            <HomePage />\n          </Route>\n          <Route path=\"/search\">\n            <SearchProductPage />\n          </Route>\n          <Route path=\"/aboutus\">\n            <AboutUs />\n          </Route>\n          <Route path=\"/contact\">\n            <ContactPage />\n          </Route>\n          <Route path=\"/detail:productId\">\n            <ProductDetailPage />\n          </Route>\n          <Route path=\"/authentication/register\">\n            <AuthPage register={true} />\n          </Route>\n          <Route path=\"/authentication/login\">\n            <AuthPage register={false} />\n          </Route>\n\n          {isAdmin && (\n            <Route path=\"/admin/usermanagement\">\n              <AdminNavbar />\n              <UserManagement />\n            </Route>\n          )}\n          {(isAdmin || isMod) && (\n            <Switch>\n              <Route path=\"/admin\" exact>\n                <AdminPage />\n              </Route>\n              <Route path=\"/messageadmin:messageId\">\n                <AdminNavbar />\n                <MessagePage />\n              </Route>\n              <Route path=\"/admin/productmanage\">\n                <AdminNavbar />\n                <ProductManagementPage />\n              </Route>\n              <Route path=\"/admin/homepagemanage\">\n                <AdminNavbar />\n                <HomePageManagement />\n              </Route>\n              <Route path=\"/admin/createproduct\">\n                <AdminNavbar />\n                <CreateProduct />\n              </Route>\n              <Route path=\"/admin/editproduct:productId\">\n                <AdminNavbar />\n                <EditProduct />\n              </Route>\n              <Route path=\"/admin/userlist\">\n                <AdminNavbar />\n                <UsersList />\n              </Route>\n              <Route path=\"/admin/modlist\">\n                <AdminNavbar />\n                <ModsList />\n              </Route>\n              <Route path=\"/admin/adminlist\">\n                <AdminNavbar />\n                <AdminList />\n              </Route>\n\n              <Route path=\"/admin/todo\">\n                <AdminNavbar />\n                <TodoPage />\n              </Route>\n              <Route path=\"/admin/payments\">\n                <AdminNavbar />\n                <PaymentPage />\n              </Route>\n              <Route path=\"/admin/payments:checkoutId\">\n                <AdminNavbar />\n                <SinglePayment />\n              </Route>\n              <Route path=\"/cartpage\" component={CartPage} />\n              <Route path=\"/checkout\" component={Checkout} />\n              <Route path=\"/paymentcompleted\" component={PaymentCompleted} />\n            </Switch>\n          )}\n          {isAuthenticated ? (\n            <Switch>\n              <Route path=\"/cartpage\" component={CartPage} />\n              <Route path=\"/checkout\" component={Checkout} />\n              <Route path=\"/paymentcompleted\" component={PaymentCompleted} />\n              <Redirect to=\"/cartpage\" />\n            </Switch>\n          ) : (\n            <Redirect to=\"/authentication/login\" />\n          )}\n        </Switch>\n      </div>\n      {!isAdminPage && <Footer />}\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Redux\\todoSlice.ts",["330","331"],[],"import {  createSlice, current } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState= {\r\n  todoItems: [],\r\n  countTodo: 0,\r\n};\r\n\r\nconst todoSlice = createSlice({\r\n  name: \"todo\",\r\n  initialState,\r\n  reducers: {\r\n    addToList: (state: any, action) => {\r\n        const { todoTitle, todoDesc } = action.payload;\r\n        const currentDate = new Date();\r\n        const year = currentDate.getFullYear()\r\n        const month = currentDate.getUTCMonth()\r\n        const day = currentDate.getDay()\r\n        const hour = currentDate.getHours();\r\n        const minute = currentDate.getMinutes();\r\n        const currentLocalTime = `${hour < 10 ? '0' : ''}${hour}:${minute < 10 ? '0' : ''}${minute} ${day}-${month}-${year}`;\r\n        const data = new Array();\r\n        data.push({\r\n        todoTitle:todoTitle,\r\n        todoDesc:todoDesc,\r\n        todoCreatedAt:currentLocalTime\r\n       })\r\n       state.todoItems = [...state.todoItems,data[0]]\r\n       state.countTodo = state.countTodo + 1\r\n      },\r\n    clearList: (state: any) => {\r\n      state.todoItems = [];\r\n      state.countTodo = 0;\r\n    },\r\n    removeFromList: (state: any, action) => {\r\n      state.todoItems = state.todoItems.filter(\r\n        (e: any) => e.todoTitle !== action.payload\r\n      );\r\n      state.countTodo = state.countTodo - 1;\r\n    },\r\n\r\n  },\r\n});\r\nexport const { addToList,clearList,removeFromList} = todoSlice.actions;\r\nexport default todoSlice.reducer;\r\n","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Cart\\cartSlice.ts",[],[],"C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Auth\\AuthPage.tsx",["332"],[],"import React, { useState } from \"react\";\r\nimport Registration from \"./Components/Registration\";\r\nimport Login from \"./Components/Login\";\r\nconst AuthPage: React.FC<{ register: boolean }> = (props) => {\r\n  return (\r\n    <div className=\"register-area ptb-100\">\r\n          <div className=\"all-auth\">\r\n            <div className=\"login\">\r\n              <div className=\"login-form-container\">\r\n                {props.register ? <Registration /> : <Login />}\r\n              </div>\r\n            </div>\r\n          </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthPage;\r\n","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\NavbarFooter\\Footer.tsx",["333","334","335","336","337"],[],"import React from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\n\r\nconst Footer = () => {\r\n    const handleLinkClick = () => {\r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: 'smooth',\r\n          });\r\n      };\r\n  return (\r\n    <>\r\n       <footer className=\"footer-area  pt-5\">\r\n            <div className=\"footer-top-area pt-120 pb-90\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-4 col-md-6\">\r\n                            <div className=\"footer-widget mb-30\">\r\n                                <a href=\"#\"><img  className=\"logo\" src={require(\"../Assets/Images/logo.png\")}/></a>\r\n                                <div className=\"footer-about\">\r\n                                    <p>Handcraft is a Multipurpose Powerful Design for your eCommerce Business</p>\r\n                                   \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-4 col-md-7\">\r\n                            <div className=\"footer-widget mb-30\">\r\n                                <h3 className=\"footer-widget-title-4\">Pages</h3>\r\n                                <div className=\"footer-widget-content-4\">\r\n                                    <ul>\r\n                                        <li><Link onClick={handleLinkClick} to='/' href=\"shop.html\">Home Page</Link></li>\r\n                                        <li><Link onClick={handleLinkClick} to='/search'>Search Products</Link></li>\r\n                                        <li><Link onClick={handleLinkClick} to=\"/aboutus\">About Us</Link></li>\r\n                                        <li><Link onClick={handleLinkClick} to=\"/contact\">Contact</Link></li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-4 col-md-5\">\r\n                            <div className=\"footer-widget mb-30\">\r\n                                <h3 className=\"footer-widget-title-4\">Support</h3>\r\n                                <div className=\"footer-widget-content-4\">\r\n                                    <ul>\r\n                                        <li><a href=\"register.html\">My Account</a></li>\r\n                                        <li><a href=\"login.html\">Login</a></li>\r\n                                        <li><a href=\"register.html\">Register</a></li>\r\n                                        <li><a href=\"#\">Privacy</a></li>\r\n                                        <li><a href=\"#\">Support</a></li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"footer-bottom ptb-20 border-top-2\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 text-center\">\r\n                            <div className=\"copyright-handicraft\">\r\n                                <p className='text-white'>Copyright ©MahammadGulalov 2022 . All Right Reserved.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Footer","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Auth\\Data\\authSlice.ts",[],[],"C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\NavbarFooter\\Navbar.tsx",[],[],"C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Home\\HomePage.tsx",[],[],"C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\ProductDetail\\ProductDetailPage.tsx",["338","339"],[],"import DescriptionReview from \"./Components/DescriptionReview\"\r\nimport Details from \"./Components/Details\"\r\nimport RelatedProduct from \"./Components/RelatedProduct\"\r\n\r\nconst ProductDetailPage = () => {\r\n\r\n  const productId = window.location.pathname.split(\":\")[1];\r\n\r\n  return (\r\n    <>\r\n        <Details productId = {productId}/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductDetailPage","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Contact\\ContactPage.tsx",["340"],[],"import React from \"react\";\r\nimport ContactMessage from \"./Components/ContactMessage\";\r\n\r\nconst ContactPage = () => {\r\n  return (\r\n    <div className=\"contact-area mt-5\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-8\">\r\n            <div className=\"contact-map-wrapper\">\r\n              <div className=\"contact-map mb-40\">\r\n              <iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2696.0873444897297!2d19.055556079079036!3d47.48821179432386!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x4741dc5aa4559df1%3A0x2b4f30e1e650f417!2zQnVkYXBlc3QsIFbDoW1ow6F6IGtydC4gMTEsIDEwOTQ!5e0!3m2!1sen!2shu!4v1689536000487!5m2!1sen!2shu\" width=\"600\" height=\"450\"   loading=\"lazy\" ></iframe>\r\n              </div>\r\n              <hr />\r\n              <ContactMessage/>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-4\">\r\n            <div className=\"contact-info-wrapper\">\r\n              <div className=\"contact-title\">\r\n                <h4>Location & Details</h4>\r\n              </div>\r\n              <div className=\"contact-info\">\r\n                <div className=\"single-contact-info\">\r\n                  <div className=\"contact-info-icon\">\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      width=\"16\"\r\n                      height=\"16\"\r\n                      fill=\"currentColor\"\r\n                      className=\"bi bi-geo-alt\"\r\n                      viewBox=\"0 0 16 16\"\r\n                    >\r\n                      <path d=\"M12.166 8.94c-.524 1.062-1.234 2.12-1.96 3.07A31.493 31.493 0 0 1 8 14.58a31.481 31.481 0 0 1-2.206-2.57c-.726-.95-1.436-2.008-1.96-3.07C3.304 7.867 3 6.862 3 6a5 5 0 0 1 10 0c0 .862-.305 1.867-.834 2.94zM8 16s6-5.686 6-10A6 6 0 0 0 2 6c0 4.314 6 10 6 10z\" />\r\n                      <path d=\"M8 8a2 2 0 1 1 0-4 2 2 0 0 1 0 4zm0 1a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\" />\r\n                    </svg>\r\n                  </div>\r\n                  <div className=\"contact-info-text\">\r\n                    <p>\r\n                      <span>Address:</span> Vamhaz krt 11. <br />{\" \"}\r\n                      Hungary,Budapest\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"single-contact-info \">\r\n                  <div className=\"contact-info-icon\">\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      width=\"16\"\r\n                      height=\"16\"\r\n                      fill=\"currentColor\"\r\n                      className=\"bi bi-envelope\"\r\n                      viewBox=\"0 0 16 16\"\r\n                    >\r\n                      <path d=\"M0 4a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V4Zm2-1a1 1 0 0 0-1 1v.217l7 4.2 7-4.2V4a1 1 0 0 0-1-1H2Zm13 2.383-4.708 2.825L15 11.105V5.383Zm-.034 6.876-5.64-3.471L8 9.583l-1.326-.795-5.64 3.47A1 1 0 0 0 2 13h12a1 1 0 0 0 .966-.741ZM1 11.105l4.708-2.897L1 5.383v5.722Z\" />\r\n                    </svg>\r\n                  </div>\r\n                  <div className=\"contact-info-text\">\r\n                    <p>\r\n                      <span>Email: </span> mahammadgulalov@gmail.com\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"single-contact-info\">\r\n                  <div className=\"contact-info-icon\">\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      width=\"16\"\r\n                      height=\"16\"\r\n                      fill=\"currentColor\"\r\n                      className=\"bi bi-telephone\"\r\n                      viewBox=\"0 0 16 16\"\r\n                    >\r\n                      <path d=\"M3.654 1.328a.678.678 0 0 0-1.015-.063L1.605 2.3c-.483.484-.661 1.169-.45 1.77a17.568 17.568 0 0 0 4.168 6.608 17.569 17.569 0 0 0 6.608 4.168c.601.211 1.286.033 1.77-.45l1.034-1.034a.678.678 0 0 0-.063-1.015l-2.307-1.794a.678.678 0 0 0-.58-.122l-2.19.547a1.745 1.745 0 0 1-1.657-.459L5.482 8.062a1.745 1.745 0 0 1-.46-1.657l.548-2.19a.678.678 0 0 0-.122-.58L3.654 1.328zM1.884.511a1.745 1.745 0 0 1 2.612.163L6.29 2.98c.329.423.445.974.315 1.494l-.547 2.19a.678.678 0 0 0 .178.643l2.457 2.457a.678.678 0 0 0 .644.178l2.189-.547a1.745 1.745 0 0 1 1.494.315l2.306 1.794c.829.645.905 1.87.163 2.611l-1.034 1.034c-.74.74-1.846 1.065-2.877.702a18.634 18.634 0 0 1-7.01-4.42 18.634 18.634 0 0 1-4.42-7.009c-.362-1.03-.037-2.137.703-2.877L1.885.511z\" />\r\n                    </svg>\r\n                  </div>\r\n                  <div className=\"contact-info-text\">\r\n                    <p>\r\n                      <span>Phone: </span> +36(20) 283-18-32\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactPage;\r\n","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\AboutUs\\AboutUs.tsx",[],[],"C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\SearchProduct\\SearchProductPage.tsx",["341","342","343","344","345","346"],[],"C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Admin\\AdminNavbar.tsx",[],[],"C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Admin\\AdminPage.tsx",[],[],"C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Cart\\Components\\CartPage.tsx",["347","348","349","350","351","352","353","354","355","356"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { removeItem } from \"../cartSlice\";\r\nimport CartPageItem from \"./CartPageItem\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CartPage = () => {\r\n  const [images, setImages] = useState([]);\r\n  const [httpError, setHttpError] = useState(\"\");\r\n  const [productIdImage , setProductIdImage] = useState([])\r\n  const { cartItems, total,hello } = useSelector((store: any) => store.cart);\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"cart-main-area my-5\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n              <h1 className=\"cart-heading\">Cart</h1>\r\n                <div className=\"table-content table-responsive\">\r\n                  <table>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>remove</th>\r\n                        <th>images</th>\r\n                        <th>Product</th>\r\n                        <th>Price</th>\r\n                        <th>Quantity</th>\r\n                        <th>Total</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {cartItems.map((item: any) => (\r\n                        <CartPageItem item ={item} />\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n                {cartItems.length === 0 ? (\r\n                  <p className=\"error-message text-center\">\r\n                    Your Cart is currently empty\r\n                  </p>\r\n                ) : (\r\n                  <>\r\n                    <hr />\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-5 ms-auto\">\r\n                        <div className=\"cart-page-total\">\r\n                          <h2>Cart totals</h2>\r\n                          <ul>\r\n                            <li>\r\n                              Total<span>${total}</span>\r\n                            </li>\r\n                          </ul>\r\n                          <Link to='/checkout'>Proceed to checkout</Link>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </>\r\n                )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CartPage;\r\n","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Cart\\Components\\Checkout.tsx",["357"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ModalPayment from \"../../Utils/ModalPayment\";\r\nimport CheckoutRequest from \"../../Models/Requests/CheckoutRequest\";\r\nimport CheckoutBill from \"../../Models/CheckoutBill\";\r\nconst Checkout = () => {\r\n  const [firstName, setFirstname] = useState(\"\");\r\n  const [lastname, setLastname] = useState(\"\");\r\n  const [street, setStreet] = useState(\"\");\r\n  const [aparment, setApartment] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [zip, setZip] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [checkPhone, setCheckPhone] = useState<boolean>();\r\n  const [checkElement, setCheckElement] = useState<boolean>();\r\n  const { cartItems, total } = useSelector((store: any) => store.cart);\r\n  const { userEmail } = useSelector((store: any) => store.auth);\r\n\r\n  const bill = cartItems.reduce((acc: any, cartItem: any) => {\r\n    acc[cartItem.item.productName] = cartItem.count;\r\n    return acc;\r\n  }, {});\r\n  console.log(bill);\r\n\r\n  console.log(bill);\r\n  const checkoutBill = new CheckoutBill(bill, total);\r\n  const checkout = new CheckoutRequest(\r\n    firstName,\r\n    lastname,\r\n    street,\r\n    aparment,\r\n    city,\r\n    zip,\r\n    userEmail,\r\n    phone,\r\n    checkoutBill\r\n  );\r\n\r\n  useEffect(() => {\r\n    const checkPhoneNumber = () => {\r\n      const phoneNumberRegex = /^[\\d()+-]*$/;\r\n      if (phone && phoneNumberRegex.test(phone)) {\r\n        setCheckPhone(true);\r\n      } else {\r\n        setCheckPhone(false);\r\n      }\r\n    };\r\n    checkPhoneNumber();\r\n  }, [phone]);\r\n  const proceedPaymentCheck = () => {\r\n    if (\r\n      firstName &&\r\n      lastname &&\r\n      street &&\r\n      aparment &&\r\n      city &&\r\n      zip &&\r\n      phone &&\r\n      checkPhone\r\n    ) {\r\n      setCheckElement(true);\r\n    } else {\r\n      alert(\"Please Fill All Fields!\");\r\n      setCheckElement(false);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"checkout-area my-5\">\r\n        <div className=\"container\">\r\n          <div className=\"row\"></div>\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-6 col-md-12 col-12\">\r\n              <div className=\"checkbox-form\">\r\n                <h3>Billing Details</h3>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"checkout-form-list\">\r\n                      <label>\r\n                        First Name <span className=\"required\">*</span>\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        onChange={(e: any) => setFirstname(e.target.value)}\r\n                        placeholder=\"\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"checkout-form-list\">\r\n                      <label>\r\n                        Last Name <span className=\"required\">*</span>\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        onChange={(e: any) => setLastname(e.target.value)}\r\n                        placeholder=\"\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"checkout-form-list\">\r\n                      <label>\r\n                        Address <span className=\"required\">*</span>\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        onChange={(e: any) => setStreet(e.target.value)}\r\n                        placeholder=\"Street address\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"checkout-form-list\">\r\n                      <input\r\n                        type=\"text\"\r\n                        onChange={(e: any) => setApartment(e.target.value)}\r\n                        placeholder=\"Apartment, suite, unit etc. (optional)\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"checkout-form-list\">\r\n                      <label>\r\n                        Town / City <span className=\"required\">*</span>\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        onChange={(e: any) => setCity(e.target.value)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"checkout-form-list\">\r\n                      <label>\r\n                        Postcode / Zip <span className=\"required\">*</span>\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        onChange={(e: any) => setZip(e.target.value)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"checkout-form-list\">\r\n                      <label>\r\n                        Phone <span className=\"required\">*</span>\r\n                      </label>\r\n                      <input\r\n                        className={!checkPhone ? \"form-control is-invalid\" : \"\"}\r\n                        type=\"text\"\r\n                        onChange={(e: any) => setPhone(e.target.value)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"checkout-form-list\">\r\n                      <label>\r\n                        Email Address <span className=\"required\">*</span>\r\n                      </label>\r\n                      <input value={userEmail} disabled type=\"email\" />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-12 col-12\">\r\n              <div className=\"your-order\">\r\n                <h3>Your order</h3>\r\n                <div className=\"your-order-table table-responsive\">\r\n                  <table>\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"product-name\">Product</th>\r\n                        <th className=\"product-total\">Total</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {cartItems.map((item: any) => (\r\n                        <tr className=\"cart_item\">\r\n                          <td className=\"product-name\">\r\n                            {item.item.productName}\r\n                            <strong className=\"product-quantity\">\r\n                              {\" \"}\r\n                              × {item.count}\r\n                            </strong>\r\n                          </td>\r\n                          <td className=\"product-total\">\r\n                            <span className=\"amount\">\r\n                              $\r\n                              {item.item.discount\r\n                                ? `${item.item.discountedPrice}`\r\n                                : item.item.price}\r\n                            </span>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                    <tfoot>\r\n                      <tr className=\"order-total\">\r\n                        <th>Order Total</th>\r\n                        <td>\r\n                          <strong>\r\n                            <span className=\"amount\">${total}</span>\r\n                          </strong>\r\n                        </td>\r\n                      </tr>\r\n                    </tfoot>\r\n                  </table>\r\n                </div>\r\n                <div className=\"payment-method\">\r\n                  <div className=\"payment-accordion\">\r\n                    <div className=\"panel-group\" id=\"faq\">\r\n                      <div className=\"panel panel-default\">\r\n                        <div\r\n                          id=\"payment-1\"\r\n                          className=\"panel-collapse collapse show\"\r\n                          data-bs-parent=\"#faq\"\r\n                        >\r\n                          <div className=\"panel-body\">\r\n                            <p>\r\n                              Make your payment directly into our bank account.\r\n                              Please use your Order ID as the payment reference.\r\n                              Your ord er won’t be shipped until the funds have\r\n                              cleared in our account.\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"order-button-payment\">\r\n                      {checkElement ? (\r\n                        <ModalPayment checkout={checkout} />\r\n                      ) : (\r\n                        <>\r\n                          {\" \"}\r\n                          <p className=\"payment-bill-info\">\r\n                            Please, fill all fields in order to continue payment\r\n                          </p>{\" \"}\r\n                          <button\r\n                            onClick={proceedPaymentCheck}\r\n                            className=\"btn btn-secondary btn-lg\"\r\n                          >\r\n                            Proceed Payment\r\n                          </button>{\" \"}\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Cart\\Components\\PaymentCompleted.tsx",[],[],"C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Admin\\Components\\Messages\\MessagePage.tsx",["358","359"],[],"import React, { useEffect, useState } from \"react\";\r\nimport MessageModel from \"../../../Models/MessageModel\";\r\n\r\nconst MessagePage = () => {\r\n  const [message, setMessage] = useState<MessageModel>();\r\n  const [messageError, setMessageError] = useState(\"\");\r\n  const messageId = window.location.pathname.split(\":\")[1];\r\n\r\n  useEffect(() => {\r\n    const fetchSingleMessage = async () => {\r\n      const url = `http://localhost:8080/api/messages/${messageId}`;\r\n      const request = await fetch(url);\r\n      if (!request.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n      const responseJson = await request.json();\r\n      setMessage(responseJson);\r\n    };\r\n    fetchSingleMessage().catch((e: any) => setMessageError(e.message));\r\n  },[]);\r\n  return (\r\n    <>\r\n      <div className=\"content-page\">\r\n        <div className=\"content\">\r\n          <div className=\"container\">\r\n            <div className=\"single-message mt-3\">\r\n              <h1 className=\"text-center message-admin-head\">Message from User</h1>\r\n              <div className=\"message-admin-info d-flex justify-content-around mt-4\">\r\n                <div className=\"message-label\">\r\n                  <label className=\"mx-1\">Message Sender Email:</label>\r\n                  <span>{message?.messageEmail}</span>\r\n                </div>\r\n                <div  className=\"message-label\">\r\n                  <label className=\"mx-1\">Message Sender Phone:</label>\r\n                  <span>{message?.messagePhone}</span>\r\n                </div>\r\n                <div className=\"message-label\">\r\n                  <label className=\"mx-1\">Message Sender Name: </label>\r\n                  <span>{message?.messageSenderName}</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"message-admin mt-3\">\r\n                <h3 className=\"mr-1\">Message Title:</h3>\r\n                <p>{message?.messageTitle}</p>\r\n                <h3>Message Body: </h3>\r\n                <p>{message?.messageBody}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MessagePage;\r\n","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Admin\\Components\\ProductsManagement\\CreateProduct.tsx",[],[],"C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Admin\\Components\\ProductsManagement\\EditProduct.tsx",["360","361","362","363"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport CategoryModel from \"../../../Models/CategoryModel\";\r\nimport ColorModel from \"../../../Models/ColorModel\";\r\nimport { Button, Input, Label } from \"semantic-ui-react\";\r\nimport CreateProductRequest from \"../../../Models/Requests/CreateProductRequest\";\r\nimport ProductModel from \"../../../Models/ProductModel\";\r\n\r\nconst EditProduct = () => {\r\n  const [categories, setCategories] = useState<CategoryModel[]>([]);\r\n  const [colors, setColors] = useState<ColorModel[]>([]);\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n  const [selectedColors, setSelectedColors] = useState<string[]>([]);\r\n\r\n  const [selecedCategory, setSelectedCategory] = useState(0);\r\n  const [productName, setProductName] = useState(\"\");\r\n  const [productDescription, setProductDescription] = useState(\"\");\r\n  const [productPrice, setProductPrice] = useState(0);\r\n  const [productDiscount, setPriceDiscount] = useState(0);\r\n  const [images, setImages] = useState<string[]>([]);\r\n  const [selectedColorIds, setSelectedColorsIds] = useState<number[]>([]);\r\n\r\n  const [httpError, setHttpError] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n\r\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\r\n\r\n  const { isAuthenticated, isAdmin, tokenType, accessToken } = useSelector(\r\n    (store: any) => store.auth\r\n  );\r\n  useEffect(() => {\r\n    const fetchCategories = async () => {\r\n      const url = \"http://localhost:8080/api/categories\";\r\n      const responseData = await fetch(url);\r\n      if (!responseData.ok) {\r\n        throw new Error(\"Something went wrong during fetching product!\");\r\n      }\r\n      const responseJson = await responseData.json();\r\n      setCategories(responseJson._embedded.categories);\r\n    };\r\n    fetchCategories().catch((err) => setHttpError(err.message));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchProductColors = async () => {\r\n      const url = `http://localhost:8080/api/colors`;\r\n      const responseData = await fetch(url);\r\n      if (!responseData.ok) {\r\n        throw new Error(\"Something went wrong while fetching colors!\");\r\n      }\r\n      const responseJson = await responseData.json();\r\n      const response = responseJson._embedded.colors;\r\n      const loadedColor: ColorModel[] = [];\r\n      for (const key in response) {\r\n        loadedColor.push({\r\n          colorId: response[key].colorID,\r\n          colorName: response[key].colorName,\r\n        });\r\n      }\r\n      setColors(loadedColor);\r\n    };\r\n    fetchProductColors().catch((err: any) => setHttpError(err.message));\r\n  }, []);\r\n\r\n  const productId = window.location.pathname.split(\":\")[1];\r\n\r\n  useEffect(() => {\r\n    const fetchSingleProduct = async () => {\r\n      const url = `http://localhost:8080/api/products/${productId}`;\r\n      const request = await fetch(url);\r\n      if (!request.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n      const requestJson: ProductModel = await request.json();\r\n      setProductName(requestJson.productName);\r\n      setProductDescription(requestJson.productDescription);\r\n      setProductPrice(requestJson.price);\r\n      setPriceDiscount(requestJson.discount);\r\n    };\r\n    fetchSingleProduct().catch((e: any) => setHttpError(e.message));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchImages = async () => {\r\n      const url = `http://localhost:8080/api/products/${productId}/images`;\r\n      const request = await fetch(url);\r\n      if (!request.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n      const requestJson = await request.json();\r\n      const requestData = requestJson._embedded.images;\r\n      let loaddedImages = [];\r\n      for (const key in requestData) {\r\n        loaddedImages.push(requestData[key].imageURL);\r\n      }\r\n      setImages(loaddedImages);\r\n    };\r\n    fetchImages().catch((e: any) => setHttpError(e.message));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchSelectedColors = async () => {\r\n      const url = `http://localhost:8080/api/products/${productId}/colors`;\r\n      const request = await fetch(url);\r\n      if (!request.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n      const requestJson = await request.json();\r\n      const requestData = await requestJson._embedded.colors;\r\n      let loaddedColors = [];\r\n      for (const key in requestData) {\r\n        loaddedColors.push(requestData[key].colorName);\r\n      }\r\n\r\n      let loaddedColorIds: number[] = [];\r\n      for (const key in requestData) {\r\n        loaddedColorIds.push(requestData[key].colorID);\r\n      }\r\n      setSelectedColors(loaddedColors);\r\n      setSelectedColorsIds(loaddedColorIds);\r\n    };\r\n    fetchSelectedColors().catch((e: any) => setHttpError(e.message));\r\n  }, []);\r\n  useEffect(() => {\r\n    const fetchCategory = async () => {\r\n      const url = `http://localhost:8080/api/products/${productId}/category`;\r\n      const request = await fetch(url);\r\n      const requestJson = await request.json();\r\n      if (!request.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n      setSelectedCategory(requestJson.categoryId);\r\n    };\r\n    fetchCategory().catch((e: any) => setHttpError(e.message));\r\n  }, []);\r\n  const updateProduct = async (e: any) => {\r\n    e.preventDefault();\r\n    if (\r\n      selecedCategory &&\r\n      productName &&\r\n      productDescription &&\r\n      productPrice &&\r\n      images.length > 0 &&\r\n      selectedColorIds.length > 0\r\n    ) {\r\n      const url = `http://localhost:8080/api/v1/products/admin/editproduct?productId=${productId}`;\r\n      const productModel: CreateProductRequest = new CreateProductRequest(\r\n        productName,\r\n        productDescription,\r\n        productPrice,\r\n        productDiscount,\r\n        selecedCategory,\r\n        selectedColorIds,\r\n        images\r\n      );\r\n      const requestBody = {\r\n        method: \"PUT\",\r\n        headers: {\r\n          Authorization: `${tokenType} ${accessToken}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(productModel),\r\n      };\r\n      if (isAuthenticated && isAdmin) {\r\n        const request = await fetch(url, requestBody);\r\n        if (!request.ok) {\r\n          throw new Error(\"Something went wrong!\");\r\n        } else {\r\n          const requestJson = await request.json();\r\n          if (requestJson.status === 200) {\r\n            setSuccessMessage(requestJson.message);\r\n            setIsButtonDisabled(true);\r\n            setTimeout(function () {\r\n              window.location.href = \"/admin/createproduct\";\r\n            }, 2000);\r\n          } else {\r\n            setErrorMessage(requestJson.message);\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      setErrorMessage(\"Please Fill All fields for updating a product!\");\r\n    }\r\n  };\r\n\r\n  const addImageToList = () => {\r\n    setImages((prevImages) => [...prevImages, imageUrl]);\r\n    setImageUrl(\"\");\r\n  };\r\n\r\n  const addColortoList = async (value: any) => {\r\n    if (!selectedColors.includes(value)) {\r\n      setSelectedColors((prevColors) => [...prevColors, value]);\r\n      colors.forEach((e: ColorModel) => {\r\n        if (e.colorName === value) {\r\n          setSelectedColorsIds((prevIds) => [...prevIds, e.colorId]);\r\n        }\r\n      });\r\n    } else {\r\n      alert(\"Color has been selected previously!\");\r\n    }\r\n  };\r\n\r\n  const deleteSelectedColor = (value: string) => {\r\n    setSelectedColors((prevSelectedColors) => {\r\n      return prevSelectedColors.filter((e: string) => e !== value);\r\n    });\r\n\r\n    setSelectedColorsIds((prevSelected) => {\r\n      let selectedColorForDelete = colors.filter(\r\n        (e: ColorModel) => e.colorName === value\r\n      )[0].colorId;\r\n      return [\r\n        ...prevSelected.filter((e: number) => e !== selectedColorForDelete),\r\n      ];\r\n    });\r\n  };\r\n\r\n  const deleteSelectedImage = (indexImage: number) => {\r\n    setImages((prevSelectedImages) => {\r\n      return prevSelectedImages.filter((e: any, index) => index !== indexImage);\r\n    });\r\n  };\r\n  if (httpError) {\r\n    return (\r\n      <div className=\"content-page\">\r\n        <p>{errorMessage}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"content-page\">\r\n        <div className=\"create-product-header text-center\">\r\n          <h2>Edit Product</h2>\r\n          {errorMessage && !successMessage && (\r\n            <p className=\"nothing-found\">{errorMessage}</p>\r\n          )}\r\n        </div>\r\n        <div className=\"create-product-form\">\r\n          <form action=\"\" onSubmit={updateProduct}>\r\n            <Label className=\"mt-3 mb-1\" content=\"Product Name\" />\r\n            <Input\r\n              onChange={(e: any) => setProductName(e.target.value)}\r\n              value={productName}\r\n              fluid\r\n              type=\"text\"\r\n              placeholder=\"Enter Product Name\"\r\n            />\r\n            <Label className=\"mt-3 mb-1\" content=\"Product Description\" />\r\n            <Input\r\n              onChange={(e: any) => setProductDescription(e.target.value)}\r\n              value={productDescription}\r\n              type=\"text\"\r\n              placeholder=\"Enter Product Description\"\r\n              fluid\r\n            />\r\n            <div className=\"d-flex align-items-center justify-content-between\">\r\n              <div>\r\n                <Label className=\"mt-3 mb-1\" content=\"Product Price\" />\r\n                <br />\r\n                <Input\r\n                  value={productPrice}\r\n                  onChange={(e: any) =>\r\n                    setProductPrice(parseInt(e.target.value))\r\n                  }\r\n                  min={0}\r\n                  labelPosition=\"right\"\r\n                  type=\"number\"\r\n                  placeholder=\"Enter Price\"\r\n                >\r\n                  <Label basic>$</Label>\r\n                  <input />\r\n                  <Label>.00</Label>\r\n                </Input>\r\n              </div>\r\n              <div>\r\n                <Label className=\"mt-3 mb-1\" content=\"Discount\" /> <br />\r\n                <Input\r\n                  onChange={(e: any) =>\r\n                    setPriceDiscount(parseInt(e.target.value))\r\n                  }\r\n                  value={productDiscount}\r\n                  label={{ basic: true, content: \"%\" }}\r\n                  labelPosition=\"right\"\r\n                  className=\"create-product-discount\"\r\n                  type=\"number\"\r\n                  step=\"5\"\r\n                  min=\"0\"\r\n                  max=\"95\"\r\n                  placeholder=\"Enter Discount\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <Label className=\"mt-3 mb-1\" content=\"Product Category\" />{\" \"}\r\n                <br />\r\n                <select\r\n                  placeholder=\"Please Select Category\"\r\n                  name=\"\"\r\n                  value={selecedCategory}\r\n                  id=\"\"\r\n                  onChange={(e: any) =>\r\n                    setSelectedCategory(parseInt(e.target.value))\r\n                  }\r\n                >\r\n                  <option value=\"\" disabled selected>\r\n                    Please Select Category\r\n                  </option>\r\n                  {categories.map((category: CategoryModel, index) => (\r\n                    <option key={index} value={category.categoryId}>\r\n                      {category.categoryName}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div>\r\n                <Label className=\"mt-3 mb-1\" content=\"Product Colors\" /> <br />\r\n                <select\r\n                  onChange={(e: any) => addColortoList(e.target.value)}\r\n                  placeholder=\"Please Select Colors\"\r\n                  name=\"\"\r\n                  value=\"\"\r\n                  id=\"\"\r\n                >\r\n                  <option\r\n                    value=\"\"\r\n                    disabled\r\n                    defaultValue={\"Please Select Colors\"}\r\n                  >\r\n                    Please Select Colors\r\n                  </option>\r\n                  {colors.map((color: ColorModel, index) => (\r\n                    <option key={index} value={color.colorName}>\r\n                      {color.colorName}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n                <br />\r\n              </div>\r\n            </div>\r\n            <ul className=\"selected-elements\">\r\n              {selectedColors.map((color: string, index: number) => (\r\n                <li key={index}>\r\n                  &mdash; {color}{\" \"}\r\n                  <span onClick={() => deleteSelectedColor(color)}>\r\n                    &#x2718;\r\n                  </span>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n\r\n            <Label className=\"mt-3 \" content=\"Product Images\" />\r\n            <br />\r\n            <div>\r\n              <Input\r\n                className=\"my-1\"\r\n                value={imageUrl}\r\n                onChange={(e) => setImageUrl(e.target.value)}\r\n                fluid\r\n                placeholder=\"Please Add One or More Image Url One By One\"\r\n              />\r\n\r\n              <Button type=\"button\" onClick={addImageToList}>\r\n                Add Image\r\n              </Button>\r\n            </div>\r\n            <div className=\"row\">\r\n              {images.map((image: string, index: number) => (\r\n                <div key={index} className=\"col-2 selected-images\">\r\n                  <p onClick={() => deleteSelectedImage(index)}>&#x2718;</p>\r\n                  <img src={image} alt=\"\" />\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <hr />\r\n            {successMessage && (\r\n              <div>\r\n                <p className=\"success-message my-2\">{successMessage}</p>{\" \"}\r\n                <div className=\"loading-bar my-2\"></div>\r\n              </div>\r\n            )}\r\n            <div className=\"add-product-btn\">\r\n              <Button\r\n                disabled={isButtonDisabled}\r\n                size=\"big\"\r\n                primary\r\n                type=\"submit\"\r\n              >\r\n                Add Product\r\n              </Button>\r\n            </div>\r\n          </form>\r\n          {/* </div> */}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditProduct;\r\n","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Admin\\Components\\AdminAuth\\UsersList.tsx",[],[],"C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Admin\\Components\\ProductsManagement\\ProductManagementPage.tsx",["364","365","366","367","368"],[],"C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Admin\\Components\\AdminAuth\\ModsList.tsx",[],[],"C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Admin\\Components\\AdminAuth\\UserManagement\\UserManagement.tsx",["369","370","371","372","373","374"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Button, Table } from \"semantic-ui-react\";\r\nimport UserModel from \"../../../../Models/UserModel\";\r\nimport ModalExampleModal from \"../../../../Utils/ModalExampleModal\";\r\nimport RoleModel from \"../../../../Models/RoleModel\";\r\n\r\nconst UserManagement = () => {\r\n  const { isAdmin, tokenType, accessToken } = useSelector(\r\n    (store: any) => store.auth\r\n  );\r\n\r\n  const [users, setUsers] = useState<UserModel[]>([]);\r\n\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [deleteConfirm, setDeleteConfirm] = useState<number>(0);\r\n  const [modConfirm, setModConfirm] = useState<boolean>(false);\r\n  const [currentUserId, setCurretUserId] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      const url = `http://localhost:8080/api/roleses/3/users`;\r\n      const requestBody = {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: `${tokenType} ${accessToken}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n      const request = await fetch(url, requestBody);\r\n      if (!request.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n      const requestJson = await request.json();\r\n      setUsers(requestJson._embedded.users);\r\n    };\r\n    fetchUsers().catch((e: any) => e.message);\r\n  }, [deleteConfirm]);\r\n\r\n  const handleConfirmDelete = (value: number) => {\r\n    const fetchDeleteUser = async () => {\r\n      try {\r\n        const url = `http://localhost:8080/api/v1/auth/admin/deleteuser?userId=${value}`;\r\n        const requestBody = {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            Authorization: `${tokenType} ${accessToken}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        };\r\n        if (isAdmin) {\r\n          const request = await fetch(url, requestBody);\r\n          if (!request.ok) {\r\n            throw new Error(\"Something went wrong during deleting product!\");\r\n          }\r\n          const response = await request.json();\r\n          alert(response.message);\r\n          setDeleteConfirm(1);\r\n        }\r\n      } catch (e: any) {\r\n        setErrorMessage(e.message);\r\n      }\r\n    };\r\n    fetchDeleteUser().catch((e: any) => setErrorMessage(e.message));\r\n    setDeleteConfirm(0);\r\n  };\r\n  \r\n  const handleModUpdate = async (value:number) => {\r\n    const url = `http://localhost:8080/api/v1/auth/admin/updaterole?userId=${value}`;\r\n    const requestBody = {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Authorization: `${tokenType} ${accessToken}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    if (isAdmin && !modConfirm) {\r\n      const request = await fetch(url, requestBody);\r\n      if (!request.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n      const requestJson = await request.json();\r\n        alert(requestJson.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"content-page\">\r\n        <h2 className=\"create-product-header text-center\">\r\n          User Management List\r\n        </h2>\r\n        <hr />\r\n        <Table celled fixed singleLine>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell>ID</Table.HeaderCell>\r\n              <Table.HeaderCell>First Name</Table.HeaderCell>\r\n              <Table.HeaderCell>Last Name</Table.HeaderCell>\r\n              <Table.HeaderCell>Email</Table.HeaderCell>\r\n              <Table.HeaderCell>Hashed Password</Table.HeaderCell>\r\n              <Table.HeaderCell>Management</Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n\r\n          <Table.Body>\r\n            {users.map((user: UserModel, index) => (\r\n              <Table.Row key={index}>\r\n                <Table.Cell>{user.userId}</Table.Cell>\r\n                <Table.Cell>{user.firstName}</Table.Cell>\r\n                <Table.Cell>{user.lastName}</Table.Cell>\r\n                <Table.Cell>{user.email}</Table.Cell>\r\n                <Table.Cell>{user.password}</Table.Cell>\r\n                <Table.Cell className=\"text-center\">\r\n                  <ModalExampleModal\r\n                    confirmDelete={handleConfirmDelete}\r\n                    buttonName=\"Delete\"\r\n                    modalHeader=\"Delete Product\"\r\n                    modalContent=\"You clicked to delete the selected product. Are you sure deleting\r\n                    product ? If you clicked Yes your product will be deleted!\"\r\n                    productId={user.userId || 0}\r\n                  />\r\n                  <br />\r\n                  <Button\r\n                    onClick={() => {\r\n                      handleModUpdate(user.userId);\r\n                    }}\r\n                    color=\"green\"\r\n                    className=\"my-2\"\r\n                  >\r\n                    Make Moderator\r\n                  </Button>\r\n                </Table.Cell>\r\n              </Table.Row>\r\n            ))}\r\n          </Table.Body>\r\n        </Table>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default UserManagement;\r\n","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Admin\\Components\\AdminAuth\\AdminList.tsx",[],[],"C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Admin\\Components\\HomePageManagement\\HomePageManagement.tsx",["375"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, Form, Input, Label } from \"semantic-ui-react\";\r\nimport HomePageModel from \"../../../Models/HomePageModel\";\r\nimport { useSelector } from \"react-redux\";\r\nconst HomePageManagement = () => {\r\n  const [homepageElement, setHomepageElement] = useState<HomePageModel[]>([]);\r\n  const [bannerId, setBannerId] = useState<string>();\r\n  const [images, setImages] = useState<string[]>([]);\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n  const [httpError, setHttpError] = useState(\"\");\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const { tokenType, accessToken } = useSelector((store: any) => store.auth);\r\n  useEffect(() => {\r\n    const fetchHomeElement = async () => {\r\n      const url = \"http://localhost:8080/api/homepages\";\r\n      const request = await fetch(url);\r\n      if (!request.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n      const requestJson = await request.json();\r\n      setHomepageElement(requestJson._embedded.homepages);\r\n      setBannerId(requestJson._embedded.homepages[0].bannerProductId);\r\n      setImages(requestJson._embedded.homepages[0].carouselImages);\r\n    };\r\n    fetchHomeElement().catch((e: any) => setHttpError(e.message));\r\n  }, []);\r\n\r\n  const updateHomepage = async () => {\r\n    const url = \"http://localhost:8080/api/v1/homepage/update\";\r\n    const body = {\r\n      carouselImages: images,\r\n      bannerId: bannerId,\r\n    };\r\n    const requestBody = {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Authorization: `${tokenType} ${accessToken}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(body),\r\n    };\r\n    const request = await fetch(url, requestBody);\r\n    const requestJson = await request.json();\r\n    console.log(requestJson);\r\n    if (requestJson.status !== 200) {\r\n      setErrorMessage(requestJson.message);\r\n      setSuccessMessage(\"\");\r\n    } else {\r\n      setSuccessMessage(requestJson.message);\r\n      setErrorMessage(\"\");\r\n    }\r\n  };\r\n\r\n  const deleteSelectedImage = (indexImage: number) => {\r\n    setImages((prevSelectedImages) => {\r\n      return prevSelectedImages.filter((e: any, index) => index !== indexImage);\r\n    });\r\n  };\r\n\r\n  const addImageToList = () => {\r\n    if (images) {\r\n      setImages((prevImages) => [...prevImages, imageUrl]);\r\n      setImageUrl(\"\");\r\n    } else {\r\n      setImages([imageUrl]);\r\n    }\r\n  };\r\n\r\n  if (httpError) {\r\n    return <p className=\"content-page\">{httpError}</p>;\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <div className=\"content-page\">\r\n        <h2 className=\"text-center\">Home Page Management</h2>\r\n        {errorMessage && !successMessage && (\r\n          <p className=\"nothing-found\">{errorMessage}</p>\r\n        )}\r\n        {!errorMessage && successMessage && (\r\n          <p className=\"success-message\">{successMessage}</p>\r\n        )}\r\n        <Form>\r\n          <Label>Home Carousel Images</Label>\r\n          <Input\r\n            className=\"my-1\"\r\n            value={imageUrl}\r\n            onChange={(e) => setImageUrl(e.target.value)}\r\n            fluid\r\n            placeholder=\"Please Add One or More Image Url One By One\"\r\n          />\r\n          <Button type=\"button\" onClick={addImageToList}>\r\n            Add Image\r\n          </Button>\r\n          <div className=\"row\">\r\n            {images?.map((elem: string, index: number) => (\r\n              <div key={index} className=\"col-2 selected-images\">\r\n                <p onClick={() => deleteSelectedImage(index)}>&#x2718;</p>\r\n                <img src={elem} alt=\"a\" />\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <br />\r\n          <Label>Banner Product ID</Label>\r\n          <Input\r\n            type=\"number\"\r\n            min=\"0\"\r\n            value={bannerId}\r\n            className=\"mt-1\"\r\n            fluid\r\n            onChange={(e) => setBannerId(e.target.value)}\r\n          />\r\n          <div className=\"add-product-btn\">\r\n            <Button\r\n              onClick={updateHomepage}\r\n              size=\"big\"\r\n              className=\"mt-3\"\r\n              primary\r\n              type=\"submit\"\r\n            >\r\n              Update Homepage\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePageManagement;\r\n","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Admin\\Components\\AdminTodo\\TodoPage.tsx",[],[],"C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Admin\\Components\\Payments\\SinglePayment.tsx",["376","377","378","379","380"],[],"C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Admin\\Components\\Payments\\PaymentPage.tsx",["381"],[],"C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Home\\Components\\CarouselHome.tsx",["382"],[],"import \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport React, { useEffect, useState } from \"react\";\r\nconst CarouselHome = () => {\r\n  const [images,setImages] = useState<string[]>([])\r\n  const [httpError,setHttpError] = useState(\"\")\r\n\r\n\r\n  useEffect(()=>{\r\n    const fetchHomeElements = async() =>{\r\n      const url = \"http://localhost:8080/api/homepages/1\"\r\n      const request = await fetch(url);\r\n      if(!request.ok){\r\n        throw new Error(\"Something went wrong!\")\r\n      }\r\n      const requestJson = await request.json();\r\n      setImages(requestJson.carouselImages)\r\n    }\r\n    fetchHomeElements().catch((e:any)=>setHttpError(e.message))\r\n  },[])\r\n\r\nif(httpError){\r\n  return <p>{httpError}</p>\r\n}\r\n\r\n\r\n  return (\r\n    <div className=\"carousel-main\">\r\n    <Carousel showThumbs={false} width={\"100%\"}  showStatus={false} autoFocus={true} autoPlay={true} infiniteLoop={true} >\r\n      {images.map((image:string,index:number)=>(\r\n      <div key={index}>  \r\n        <img src={image} />\r\n      </div>\r\n      ))}\r\n   \r\n    </Carousel>\r\n    <div className=\"my-5\"></div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CarouselHome;\r\n","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Home\\Components\\Banner2.tsx",[],[],"C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Home\\Components\\Banner.tsx",[],[],"C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\ProductDetail\\Components\\Details.tsx",["383","384","385","386","387","388","389","390"],[],"C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Cart\\CartContainer.tsx",["391"],[],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CartItem from \"./Components/CartItem\";\r\nimport { calculateTotals, clearCart } from \"./cartSlice\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CartContainer = () => {\r\n  const { cartItems, total } = useSelector((store: any) => store.cart);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(calculateTotals());\r\n  }, [cartItems]);\r\n  console.log(cartItems);\r\n  return (\r\n    <section className=\"cart-container\">\r\n      <header>\r\n        <h4 className=\"text-center\">Your Cart</h4>\r\n        <hr />\r\n      </header>\r\n      {total === 0 ? (\r\n        <h5 className=\"text-center\"> Your cart is empty</h5>\r\n      ) : (\r\n        <div className=\"cart-items\">\r\n          {cartItems?.map(({ item, count, color }: any,index:number) => (\r\n            <CartItem\r\n              key={index}\r\n              item={item}\r\n              count={count}\r\n              color={color}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      <footer>\r\n        <hr />\r\n        <div className=\"d-flex justify-content-around align-items-center\">\r\n          <h5 className=\"\">\r\n            Total $<span>{total}</span>\r\n          </h5>\r\n          <button\r\n            onClick={() => dispatch(clearCart())}\r\n            className=\"clear-cart-btn\"\r\n          >\r\n            Clear Cart\r\n          </button>\r\n        </div>\r\n        {total ? \r\n        <div className=\" mx-4 my-4 text-center to-cart\" >\r\n          <Link  to=\"/cartpage\">\r\n            CartPage\r\n          </Link>\r\n        </div>\r\n        : <></> \r\n        }\r\n      </footer>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CartContainer;\r\n","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Auth\\Components\\Registration.tsx",[],[],"C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Auth\\Components\\Login.tsx",[],[],"C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Cart\\Components\\CartPageItem.tsx",["392","393"],[],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { removeItem } from '../cartSlice'\r\n\r\nconst CartPageItem:React.FC<{item:any}> = (props) => {\r\n    \r\n    const [images,setImages] = useState([])\r\n    const [httpError,setHttpError] = useState()\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        const fetchImages = async () => {\r\n          const url = `http://localhost:8080/api/v1/products/getImages?productId=${props.item.item.productId}`;\r\n          const responseData = await fetch(url);\r\n          const responseJson = await responseData.json();\r\n          if (!responseData.ok) {\r\n            throw new Error(\"Something went during fetching images wrong!\");\r\n          }\r\n          setImages(responseJson);\r\n        };\r\n        fetchImages().catch((err) => {\r\n          setHttpError(err.message);\r\n        });\r\n      }, []);\r\n\r\n\r\n      if(httpError){\r\n        return <p>{httpError}</p>\r\n      }\r\n\r\n  return (\r\n <tr>\r\n    <td className=\"product-remove\">\r\n      <button\r\n     onClick={()=>dispatch(removeItem({productId:props.item.item.productId,color:props.item.color,count:props.item.count}))}\r\n        className=\"remove-cart-item\"\r\n      >\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"16\"\r\n          height=\"16\"\r\n          fill=\"currentColor\"\r\n          className=\"bi bi-trash3-fill\"\r\n          viewBox=\"0 0 16 16\"\r\n        >\r\n          <path d=\"M11 1.5v1h3.5a.5.5 0 0 1 0 1h-.538l-.853 10.66A2 2 0 0 1 11.115 16h-6.23a2 2 0 0 1-1.994-1.84L2.038 3.5H1.5a.5.5 0 0 1 0-1H5v-1A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5Zm-5 0v1h4v-1a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5ZM4.5 5.029l.5 8.5a.5.5 0 1 0 .998-.06l-.5-8.5a.5.5 0 1 0-.998.06Zm6.53-.528a.5.5 0 0 0-.528.47l-.5 8.5a.5.5 0 0 0 .998.058l.5-8.5a.5.5 0 0 0-.47-.528ZM8 4.5a.5.5 0 0 0-.5.5v8.5a.5.5 0 0 0 1 0V5a.5.5 0 0 0-.5-.5Z\" />\r\n        </svg>\r\n      </button>\r\n    </td>\r\n    <td className=\"product-thumbnail\">\r\n      <a href=\"#\">\r\n        <img className='cart-img' src={images[0]} alt=\"\" />\r\n      </a>\r\n    </td>\r\n    <td className=\"product-name\">\r\n      <p>{props.item.item.productName} </p>\r\n    </td>\r\n    <td className=\"product-price-cart\">\r\n      <span className=\"amount\">$     {props.item.item.discount\r\n                                ? `${props.item.item.discountedPrice}`\r\n                                : props.item.item.price}</span>\r\n    </td>\r\n    <td className=\"product-quantity\">\r\n      <span>{props.item.count}</span> \r\n    </td>\r\n    <td className=\"product-subtotal\">\r\n      ${props.item.count * props.item.item.price}\r\n    </td>\r\n  </tr>\r\n  )\r\n}\r\n\r\nexport default CartPageItem","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Admin\\Components\\AdminContent.tsx",["394","395"],[],"import React, { useEffect, useState } from \"react\";\r\nimport MessageList from \"./Messages/MessageList\";\r\nimport AdminInfoContent from \"./AdminInfoContent\";\r\nimport ProductModel from \"../../Models/ProductModel\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Table, Label } from \"semantic-ui-react\";\r\nimport PaymentModel from \"../../Models/PaymentModel\";\r\nimport PaymentListCard from \"./Payments/PaymentListCard\";\r\n\r\nconst AdminContent = () => {\r\n  const [productError, setProductError] = useState(\"\");\r\n  const [totalProduct, setTotalProduct] = useState(0);\r\n  const [products, setProducts] = useState<ProductModel[]>([]);\r\n  const [payments, setPayments] = useState<PaymentModel[]>();\r\n  const [totalRevenue, setTotalRevenue] = useState<number>(0);\r\n  const [soldProducts, setSoldProducts] = useState(0);\r\n  useEffect(() => {\r\n    const fetchPayments = async () => {\r\n      try {\r\n        const url = \"http://localhost:8080/api/checkouts?sort=checkoutId,desc\";\r\n        const response = await fetch(url);\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Something went wrong!\");\r\n        }\r\n\r\n        const responseJson = await response.json();\r\n        if (payments) {\r\n          setSoldProducts(payments?.length);\r\n        } else {\r\n          setPayments(responseJson._embedded.checkouts);\r\n        }\r\n        let total = 0;\r\n        payments?.forEach((payment: PaymentModel) => {\r\n          total += payment.checkoutBill.totalPrice;\r\n          setTotalRevenue(total);\r\n        });\r\n      } catch (error: any) {\r\n        setProductError(error.message);\r\n      }\r\n    };\r\n    fetchPayments();\r\n  }, [totalRevenue, soldProducts, payments]);\r\n  console.log(totalRevenue);\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      const url = \"http://localhost:8080/api/products?sort=createdAt,asc\";\r\n      const response = await fetch(url);\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n      const responseJson = await response.json();\r\n      setProducts(responseJson._embedded.products);\r\n      setTotalProduct(responseJson.page.totalElements);\r\n    };\r\n    fetchProducts().catch((e: any) => setProductError(e.message));\r\n  }, []);\r\n  return (\r\n    <div className=\"content-page\">\r\n      <div className=\"content\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <AdminInfoContent\r\n              totalProduct={totalProduct}\r\n              totalRevenue={totalRevenue}\r\n              soldProducts={soldProducts}\r\n            />\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-xl-4\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <Label\r\n                    color=\"olive\"\r\n                    size=\"large\"\r\n                    className=\"header-title mt-0 mb-3\"\r\n                  >\r\n                    Admin Inbox\r\n                  </Label>\r\n                  <div className=\"inbox-widget\">\r\n                    <MessageList />\r\n                  </div>\r\n                </div>\r\n                <div className=\"card-body mt-2\">\r\n                  <Label\r\n                    color=\"orange\"\r\n                    size=\"large\"\r\n                    className=\"header-title mt-0 mb-3\"\r\n                  >\r\n                    Checkout Bills\r\n                  </Label>\r\n                  <div className=\"inbox-widget\">\r\n                    <PaymentListCard payments={payments} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-xl-8\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <div className=\"admin-products\">\r\n                    <Label\r\n                      color=\"teal\"\r\n                      size=\"large\"\r\n                      className=\"header-title mt-0 mb-3\"\r\n                    >\r\n                      Latest Added Products\r\n                    </Label>\r\n\r\n                    <div className=\"table-responsive\">\r\n                      <Table celled fixed>\r\n                        <Table.Header>\r\n                          <Table.Row>\r\n                            <Table.HeaderCell>ID</Table.HeaderCell>\r\n                            <Table.HeaderCell>Name</Table.HeaderCell>\r\n                            <Table.HeaderCell>Price</Table.HeaderCell>\r\n                            <Table.HeaderCell>\r\n                              Discounted Price\r\n                            </Table.HeaderCell>\r\n                            <Table.HeaderCell>Created At</Table.HeaderCell>\r\n                            <Table.HeaderCell>Management</Table.HeaderCell>\r\n                          </Table.Row>\r\n                        </Table.Header>\r\n\r\n                        <Table.Body>\r\n                          {products\r\n                            ?.slice(0, 7)\r\n                            .map((product: ProductModel, index: number) => (\r\n                              <Table.Row key={index}>\r\n                                <Table.Cell>{product?.productId}</Table.Cell>\r\n                                <Table.Cell>{`${product?.productName.slice(\r\n                                  0,\r\n                                  15\r\n                                )}...`}</Table.Cell>\r\n                                <Table.Cell>\r\n                                  <span\r\n                                    style={{ fontSize: \"14px\" }}\r\n                                    className=\"badge bg-success\"\r\n                                  >\r\n                                    {product?.price}$\r\n                                  </span>\r\n                                </Table.Cell>\r\n\r\n                                <Table.Cell>\r\n                                  <span\r\n                                    className=\"badge bg-warning\"\r\n                                    style={{ fontSize: \"14px\" }}\r\n                                  >\r\n                                    {product.discountedPrice\r\n                                      ? product.discountedPrice\r\n                                      : 0}\r\n                                    $\r\n                                  </span>\r\n                                </Table.Cell>\r\n                                <Table.Cell>\r\n                                  {product.createdAt?.slice(0, 16)}\r\n                                </Table.Cell>\r\n                                <Table.Cell style={{ textAlign: \"center\" }}>\r\n                                  <Link\r\n                                    to={`/admin/editproduct:${product.productId}`}\r\n                                  >\r\n                                    <button className=\"btn btn-outline-warning waves-effect waves-light mx-2\">\r\n                                      Edit\r\n                                    </button>\r\n                                  </Link>\r\n                                  <Link to={`/detail:${product.productId}`}>\r\n                                    <button className=\"btn btn-outline-success waves-effect waves-light\">\r\n                                      Preview\r\n                                    </button>\r\n                                  </Link>\r\n                                </Table.Cell>\r\n                              </Table.Row>\r\n                            ))}\r\n                        </Table.Body>\r\n                      </Table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <footer className=\"footer\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <script>document.write(new Date().getFullYear())</script> &copy;\r\n              Adminto theme by <a href=\"#\">Coderthemes</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminContent;\r\n",[],"C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Utils\\Spinner.tsx",[],[],"C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Utils\\Pagination.tsx",[],[],"C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Utils\\SearchFunction.tsx",[],[],"C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Contact\\Components\\ContactMessage.tsx",["396"],[],"import React, { useState } from \"react\";\r\n\r\nconst ContactMessage = () => {\r\n  const [messageEmail, setMessageSenderEmail] = useState(\"\");\r\n  const [messageTitle, setMessageTitle] = useState(\"\");\r\n  const [messageName, setMessageSenderName] = useState(\"\");\r\n  const [messageBody, setMessageBody] = useState(\"\");\r\n  const [messagePhone, setMessageSenderPhone] = useState(\"\");\r\n\r\n  const [fetchError, setFetchError] = useState(false);\r\n  const [messageSuccess, setMessageSuccess] = useState(false);\r\n  const [messageError, setMessageError] = useState(false);\r\n\r\n  const sendMessageToAdmin = async (event: any) => {\r\n    event.preventDefault();\r\n    try {\r\n      if (\r\n        messageBody ||\r\n        messageEmail ||\r\n        messageName ||\r\n        messagePhone ||\r\n        messageTitle\r\n      ) {\r\n        const response = await fetch(\r\n          \"http://localhost:8080/api/v1/messages/sendmessage\",\r\n          {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n              messageEmail: messageEmail,\r\n              messageTitle: messageTitle,\r\n              messageName: messageName,\r\n              messageBody: messageBody,\r\n              messagePhone: messagePhone,\r\n            }),\r\n          }\r\n        );\r\n\r\n        if (response.ok) {\r\n          setMessageSuccess(true);\r\n          setMessageError(false);\r\n        } else {\r\n          setFetchError(true);\r\n          throw new Error(\"Failed to send message\");\r\n        }\r\n      } else {\r\n        setMessageError(true);\r\n      }\r\n    } catch (error) {\r\n      setFetchError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"contact-message mt-5\">\r\n      <div className=\"contact-title\">\r\n        <h4>Contact Information</h4>\r\n      </div>\r\n      <form className=\"contact-form\" onSubmit={sendMessageToAdmin}>\r\n        <div className=\"row\">\r\n          {messageSuccess ? (\r\n            <p className=\"success-message\">\r\n              Message sent successfully. Thanks for your message.\r\n            </p>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {messageError ? (\r\n            <p className=\"error-message text-center\">\r\n              Please fill the all fields and send your message !\r\n            </p>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {!messageSuccess && (\r\n            <>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"contact-input-style mb-30\">\r\n                  <label>Name*</label>\r\n                  <input\r\n                    name=\"name\"\r\n                    type=\"text\"\r\n                    onChange={(e) => {\r\n                      setMessageSenderName(e.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"contact-input-style mb-30\">\r\n                  <label>Email*</label>\r\n                  <input\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    onChange={(e) => {\r\n                      setMessageSenderEmail(e.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"contact-input-style mb-30\">\r\n                  <label>Telephone</label>\r\n                  <input\r\n                    name=\"telephone\"\r\n                    type=\"text\"\r\n                    onChange={(e) => {\r\n                      setMessageSenderPhone(e.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"contact-input-style mb-30\">\r\n                  <label>subject</label>\r\n                  <input\r\n                    name=\"subject\"\r\n                    type=\"text\"\r\n                    onChange={(e) => {\r\n                      setMessageTitle(e.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <div className=\"contact-textarea-style mb-30\">\r\n                  <label>Comment*</label>\r\n                  <textarea\r\n                    className=\"form-control2\"\r\n                    name=\"message\"\r\n                    onChange={(e) => {\r\n                      setMessageBody(e.target.value);\r\n                    }}\r\n                  ></textarea>\r\n                </div>\r\n                <div className=\"add-to-card-list\">\r\n                  <button className=\"submit px-3 py-2 \" type=\"submit\">\r\n                    Send Message\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </form>\r\n      <p className=\"form-messege\"></p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactMessage;\r\n","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\SearchProduct\\Components\\SearchItem.tsx",["397","398","399","400","401"],[],"import React, { useEffect, useState } from \"react\";\r\nimport ProductModel from \"../../Models/ProductModel\";\r\nimport Spinner from \"../../Utils/Spinner\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nconst SearchItem: React.FC<{\r\n  productId: number;\r\n  product: ProductModel;\r\n  key: number;\r\n  gridView: boolean;\r\n  mobile: boolean;\r\n}> = (props) => {\r\n  const [images, setImages] = useState([]);\r\n  const [httpError, setHttpError] = useState(\"\");\r\n  const [isLoadingImage, setIsLoadingImage] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchImages = async () => {\r\n      const url = `http://localhost:8080/api/v1/products/getImages?productId=${props.product.productId}`;\r\n      const responseData = await fetch(url);\r\n      const responseJson = await responseData.json();\r\n      if (!responseData.ok) {\r\n        throw new Error(\"Something went during fetching images wrong!\");\r\n      }\r\n      setImages(responseJson);\r\n      setIsLoadingImage(false);\r\n    };\r\n    fetchImages().catch((err) => {\r\n      setHttpError(err.message);\r\n    });\r\n  }, []);\r\n\r\n  if (isLoadingImage) {\r\n    return <Spinner />;\r\n  }\r\n  if (httpError) {\r\n    return <p>{httpError}</p>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <a\r\n        href={`/detail:${props.product.productId}`}\r\n        className={\r\n          props.gridView\r\n            ? \"col-lg-4 col-md-6 text-decoration-none whole-product text-center\"\r\n            : \"text-decoration-none col-lg-12 whole-product text-center\"\r\n        }\r\n      >\r\n        {props.gridView ? <p className=\"view-detail\">View Details</p> : <></>}\r\n        <div\r\n          className={\r\n            props.gridView\r\n              ? \"product-wrapper product-box-style my-3\"\r\n              : \"product-wrapper my-3 single-product-list product-list-right-pr w-100\"\r\n          }\r\n        >\r\n          <div className={props.gridView ? \"col-lg-12\" : \"col-12 col-sm-5\"}>\r\n            <div className=\"product-img\">\r\n              {props.product.discount !== 0 ? (\r\n                <p className=\"discount\">-{props.product.discount}% </p>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <img\r\n                className=\"search-product-image mb-2\"\r\n                src={images[0]}\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className={props.gridView ? \"col-lg-12\" : \"col-11 col-sm-6\"}>\r\n            <div\r\n              className={\r\n                props.gridView ? \"product-content\" : \"product-content-list\"\r\n              }\r\n            >\r\n              <div\r\n                className={\r\n                  !props.gridView\r\n                    ? \"d-flex justify-content-between align-items-center\"\r\n                    : \"\"\r\n                }\r\n              >\r\n                <h6>\r\n                  <a href=\"#\">\r\n                    {props.product.productName.length > 30\r\n                      ? `${props.product.productName.slice(0, 30)}...`\r\n                      : props.product.productName}{\" \"}\r\n                  </a>\r\n                </h6>\r\n                <p className=\"product-price\">\r\n                  {props.product.discount !== 0 ? (\r\n                    <label className=\"old-price\">{props.product.price}$</label>\r\n                  ) : (\r\n                    <></>\r\n                  )}{\" \"}\r\n                  {props.product.discount === 0\r\n                    ? `${props.product.price}$`\r\n                    : `${props.product.discountedPrice}$`}\r\n                </p>\r\n              </div>\r\n              {!props.gridView ? (\r\n                <div className=\"product-list-cart\">\r\n                  <p className=\"text-center product-description\">\r\n                    <hr />\r\n                    {props.product.productDescription}\r\n                  </p>\r\n                  <div className=\"add-to-card-list text-center mt-5\">\r\n                    <a href=\"#\">Add to cart</a>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </a>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchItem;\r\n","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Utils\\AuthList.tsx",["402"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { Table } from \"semantic-ui-react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport UserModel from \"../Models/UserModel\";\r\n\r\nconst AuthList:React.FC<{roleID:number,header:string}> = (props) => {\r\n  const { tokenType, accessToken } = useSelector((store: any) => store.auth);\r\n\r\n  const [users, setUsers] = useState<UserModel[]>([]);\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      const url = `http://localhost:8080/api/roleses/${props.roleID}/users`;\r\n      const requestBody = {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: `${tokenType} ${accessToken}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n      const request = await fetch(url, requestBody);\r\n      if (!request.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n      const requestJson = await request.json();\r\n      setUsers(requestJson._embedded.users);\r\n    };\r\n    fetchUsers().catch((e: any) => e.message);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"content-page\">\r\n        <h2 className=\"create-product-header text-center\">{props.header} List</h2>\r\n        <hr />\r\n        <Table celled fixed singleLine>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell>ID</Table.HeaderCell>\r\n              <Table.HeaderCell>First Name</Table.HeaderCell>\r\n              <Table.HeaderCell>Last Name</Table.HeaderCell>\r\n              <Table.HeaderCell>Email</Table.HeaderCell>\r\n              <Table.HeaderCell>Hashed Password</Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n\r\n          <Table.Body>\r\n            {users.map((user: UserModel, index) => (\r\n              <Table.Row key={index}>\r\n                <Table.Cell>{user.userId}</Table.Cell>\r\n                <Table.Cell>{user.firstName}</Table.Cell>\r\n                <Table.Cell>{user.lastName}</Table.Cell>\r\n                <Table.Cell>{user.email}</Table.Cell>\r\n                <Table.Cell>{user.password}</Table.Cell>\r\n              </Table.Row>\r\n            ))}\r\n          </Table.Body>\r\n        </Table>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthList;","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Models\\Requests\\CheckoutRequest.ts",[],[],"C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Utils\\ModalPayment.tsx",["403","404"],[],"import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button, Icon, Modal } from \"semantic-ui-react\";\r\nimport { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\r\nimport CheckoutRequest from \"../Models/Requests/CheckoutRequest\";\r\nimport PaymentInfoRequest from \"../Models/Requests/PaymentInfoRequest\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport Spinner from \"./Spinner\";\r\nimport { clearCart } from \"../Cart/cartSlice\";\r\n\r\nconst ModalPayment: React.FC<{ checkout: CheckoutRequest }> = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [paymentLoading, setPaymentLoading] = useState(false);\r\n  const [httpError, setHttpError] = useState(false);\r\n  const [submitDisabled, setSubmitDisabled] = useState(false);\r\n\r\n  const { accessToken, tokenType } = useSelector((store: any) => store.auth);\r\n\r\n  const dispatch = useDispatch();\r\n  const elements = useElements();\r\n  const stripe = useStripe();\r\n  const history = useHistory();\r\n\r\n  const redirectToAnotherLink = () => {\r\n    history.push(\"/paymentcompleted\");\r\n  };\r\n  const checkout = async () => {\r\n    if (!stripe || !elements || !elements.getElement(CardElement)) {\r\n      return;\r\n    }\r\n\r\n    setSubmitDisabled(true);\r\n    setPaymentLoading(true);\r\n    let paymentInfo = new PaymentInfoRequest(\"USD\", props.checkout);\r\n\r\n    const url = `http://localhost:8080/api/v1/checkout/payment-intent`;\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization: `${tokenType} ${accessToken}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(paymentInfo),\r\n    };\r\n    const stripeResponse = await fetch(url, requestOptions);\r\n    if (!stripeResponse.ok) {\r\n      setHttpError(true);\r\n      setSubmitDisabled(false);\r\n      throw new Error(\"Something went wrong!\");\r\n    }\r\n    const stripeResponseJson = await stripeResponse.json();\r\n    const stripeSecret = JSON.parse(stripeResponseJson.paymentIntent);\r\n    const checkoutId = stripeResponseJson.checkoutId;\r\n    stripe\r\n      .confirmCardPayment(\r\n        stripeSecret.client_secret,\r\n        {\r\n          payment_method: {\r\n            card: elements.getElement(CardElement)!,\r\n            billing_details: {\r\n              email: props.checkout.email,\r\n            },\r\n          },\r\n        },\r\n\r\n        { handleActions: false }\r\n      )\r\n      .then(async function (result: any) {\r\n        if (result.error) {\r\n          setSubmitDisabled(false);\r\n          alert(\"There was an error\");\r\n        } else {\r\n          const url = `http://localhost:8080/api/v1/checkout/payment-complete?checkoutId=${checkoutId}%20`;\r\n          const requestOptions = {\r\n            method: \"PUT\",\r\n            headers: {\r\n              Authorization: `${tokenType} ${accessToken}`,\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          };\r\n          const stripeResponse = await fetch(url, requestOptions);\r\n          if (!stripeResponse.ok) {\r\n            setHttpError(true);\r\n            setSubmitDisabled(false);\r\n            throw new Error(\"Something went wrong!\");\r\n          }\r\n          setPaymentLoading(false);\r\n          redirectToAnotherLink();\r\n          dispatch(clearCart())\r\n          setSubmitDisabled(false);\r\n        }\r\n      });\r\n    setHttpError(false);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      style={{ height: \"200px\", top: \"40%\" }}\r\n      size=\"tiny\"\r\n      closeIcon\r\n      open={open}\r\n      trigger={\r\n        <button className=\"btn btn-lg btn-secondary\">Proceed Payment</button>\r\n      }\r\n      onClose={() => setOpen(false)}\r\n      onOpen={() => setOpen(true)}\r\n    >\r\n      <Modal.Content style={{ textAlign: \"center\", fontSize: \"18px\" }}>\r\n        <p>Please fill all fields!</p>\r\n      </Modal.Content>\r\n      <div className=\"container\">\r\n        <CardElement></CardElement>\r\n        <div className=\"px-3\">{paymentLoading && <Spinner />}</div>\r\n      </div>\r\n\r\n      <Modal.Actions>\r\n        <Button color=\"red\" onClick={() => setOpen(false)}>\r\n          <Icon name=\"remove\" /> Cancel\r\n        </Button>\r\n        <Button onClick={checkout} disabled={submitDisabled} color=\"green\">\r\n          <Icon name=\"checkmark\" /> Add\r\n        </Button>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalPayment;\r\n","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Models\\Requests\\CreateProductRequest.ts",[],[],"C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Models\\CheckoutBill.ts",[],[],"C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Utils\\ModalExampleModal.tsx",["405","406"],[],"import { Modal, Button, Header, Icon } from \"semantic-ui-react\";\r\nimport React, { useState } from \"react\";\r\nconst ModalExampleModal: React.FC<{\r\n  confirmDelete: any;\r\n  buttonName: string;\r\n  modalHeader: string;\r\n  modalContent: string;\r\n  productId: number;\r\n}> = (props) => {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        basic\r\n        onClose={() => setOpen(false)}\r\n        onOpen={() => setOpen(true)}\r\n        open={open}\r\n        size=\"small\"\r\n        trigger={\r\n          <button className=\"btn btn-outline-danger waves-effect waves-light mx-2\">\r\n            {props.buttonName}\r\n          </button>\r\n        }\r\n      >\r\n        <h2 className=\"text-center text-white\">{props.modalHeader}</h2>\r\n        <Modal.Content>\r\n          <p className=\"text-center\">{props.modalContent}</p>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button basic color=\"red\" inverted onClick={() => setOpen(false)}>\r\n            <Icon name=\"remove\" /> No\r\n          </Button>\r\n          <Button\r\n            color=\"green\"\r\n            inverted\r\n            onClick={() => {\r\n              setOpen(false);\r\n              props.confirmDelete(props.productId);\r\n            }}\r\n          >\r\n            <Icon name=\"checkmark\" onClick /> Yes\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalExampleModal;\r\n","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Utils\\AddTodoModal.tsx",[],[],"C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\ProductDetail\\Components\\RelatedProduct.tsx",["407","408","409"],[],"import React, { useEffect, useState } from \"react\";\r\nimport ProductModel from \"../../Models/ProductModel\";\r\nimport SearchItem from \"../../SearchProduct/Components/SearchItem\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\n\r\nconst RelatedProduct: React.FC<{ relatedProducts: ProductModel[] }> = (\r\n  props\r\n) => {\r\n  return (\r\n    <div className=\"product-area pb-95 mt-5\">\r\n      <div className=\"container\">\r\n        <div className=\"section-title-3 text-center mb-50\">\r\n          <h2 className=\"pb-4\">Related products</h2>\r\n        </div>\r\n        <div className=\"product-style \">\r\n          <div className=\"row\">\r\n            {props.relatedProducts.map((relatedProduct, index) => (\r\n              <div className=\"col-lg-3\">\r\n                <SearchItem\r\n                  mobile={false}\r\n                  productId={relatedProduct.productId}\r\n                  product={relatedProduct}\r\n                  key={index}\r\n                  gridView={true}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RelatedProduct;\r\n","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Cart\\Components\\CartItem.tsx",[],[],"C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Utils\\StarRating.tsx",[],[],"C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\ProductDetail\\Components\\DescriptionReview.tsx",[],[],"C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Admin\\Components\\AdminInfoContent.tsx",[],[],"C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Admin\\Components\\Messages\\MessageList.tsx",["410"],[],"import React, { useEffect, useState } from \"react\";\r\nimport MessageModel from \"../../../Models/MessageModel\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst MessageList = () => {\r\n  const [messages, setMessages] = useState<MessageModel[]>([]);\r\n  const [messageError, setMessageError] = useState(\"\");\r\n  useEffect(() => {\r\n    const fetchMessages = async () => {\r\n      const url = \"http://localhost:8080/api/messages?sort=createdAt,desc\";\r\n      const request = await fetch(url);\r\n      if (!request.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n      const requestJson = await request.json();\r\n      setMessages(requestJson._embedded.messages);\r\n    };\r\n    fetchMessages().catch((e: any) => setMessageError(e.message));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {messages.map((message: MessageModel, index: number) => (\r\n        <div key={index} className=\"inbox-item\">\r\n          <Link to={`/messageadmin:${message.messageId}`}>\r\n            <div className=\"inbox-item-img\">\r\n              <img\r\n                src={require(\"../../../Assets/Images/user_icon.png\")}\r\n                className=\"rounded-circle\"\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n            <h5 className=\"inbox-item-author mt-0 mb-1\">{message.messageSenderName}</h5>\r\n            <h6>{message.messageTitle}</h6>\r\n            <p className=\"inbox-item-text\">{message.messageBody.length > 50 ? `${message.messageBody.slice(0,50)}...` : message.messageBody}</p>\r\n            <p className=\"inbox-item-date\">{message.createdAt.slice(0,16)}</p>\r\n          </Link>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MessageList;\r\n","C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Models\\Requests\\PaymentInfoRequest.ts",[],[],"C:\\Users\\Mehemmed\\Desktop\\Code{1}\\Projects\\handcraft\\src\\main\\handcraft-react\\src\\Admin\\Components\\Payments\\PaymentListCard.tsx",[],[],{"ruleId":"411","severity":1,"message":"412","line":4,"column":3,"nodeType":"413","messageId":"414","endLine":4,"endColumn":9},{"ruleId":"411","severity":1,"message":"415","line":6,"column":3,"nodeType":"413","messageId":"414","endLine":6,"endColumn":13},{"ruleId":"411","severity":1,"message":"416","line":34,"column":8,"nodeType":"413","messageId":"414","endLine":34,"endColumn":13},{"ruleId":"411","severity":1,"message":"417","line":1,"column":24,"nodeType":"413","messageId":"414","endLine":1,"endColumn":31},{"ruleId":"418","severity":1,"message":"419","line":21,"column":22,"nodeType":"420","messageId":"421","endLine":21,"endColumn":33,"fix":"422"},{"ruleId":"411","severity":1,"message":"423","line":1,"column":17,"nodeType":"413","messageId":"414","endLine":1,"endColumn":25},{"ruleId":"411","severity":1,"message":"424","line":2,"column":16,"nodeType":"413","messageId":"414","endLine":2,"endColumn":23},{"ruleId":"425","severity":1,"message":"426","line":19,"column":33,"nodeType":"427","endLine":19,"endColumn":45},{"ruleId":"428","severity":1,"message":"429","line":19,"column":45,"nodeType":"427","endLine":19,"endColumn":112},{"ruleId":"425","severity":1,"message":"426","line":47,"column":45,"nodeType":"427","endLine":47,"endColumn":57},{"ruleId":"425","severity":1,"message":"426","line":48,"column":45,"nodeType":"427","endLine":48,"endColumn":57},{"ruleId":"411","severity":1,"message":"430","line":1,"column":8,"nodeType":"413","messageId":"414","endLine":1,"endColumn":25},{"ruleId":"411","severity":1,"message":"431","line":3,"column":8,"nodeType":"413","messageId":"414","endLine":3,"endColumn":22},{"ruleId":"432","severity":1,"message":"433","line":12,"column":15,"nodeType":"427","endLine":12,"endColumn":370},{"ruleId":"411","severity":1,"message":"434","line":17,"column":26,"nodeType":"413","messageId":"414","endLine":17,"endColumn":43},{"ruleId":"411","severity":1,"message":"435","line":28,"column":18,"nodeType":"413","messageId":"414","endLine":28,"endColumn":27},{"ruleId":"436","severity":1,"message":"437","line":51,"column":6,"nodeType":"438","endLine":59,"endColumn":4,"suggestions":"439"},{"ruleId":"425","severity":1,"message":"440","line":288,"column":27,"nodeType":"427","endLine":293,"endColumn":28},{"ruleId":"425","severity":1,"message":"440","line":308,"column":27,"nodeType":"427","endLine":312,"endColumn":28},{"ruleId":"441","severity":1,"message":"442","line":340,"column":44,"nodeType":"443","messageId":"444","endLine":340,"endColumn":46},{"ruleId":"411","severity":1,"message":"445","line":1,"column":17,"nodeType":"413","messageId":"414","endLine":1,"endColumn":26},{"ruleId":"411","severity":1,"message":"446","line":3,"column":10,"nodeType":"413","messageId":"414","endLine":3,"endColumn":20},{"ruleId":"411","severity":1,"message":"447","line":8,"column":10,"nodeType":"413","messageId":"414","endLine":8,"endColumn":16},{"ruleId":"411","severity":1,"message":"448","line":8,"column":18,"nodeType":"413","messageId":"414","endLine":8,"endColumn":27},{"ruleId":"411","severity":1,"message":"449","line":9,"column":10,"nodeType":"413","messageId":"414","endLine":9,"endColumn":19},{"ruleId":"411","severity":1,"message":"450","line":9,"column":21,"nodeType":"413","messageId":"414","endLine":9,"endColumn":33},{"ruleId":"411","severity":1,"message":"451","line":10,"column":10,"nodeType":"413","messageId":"414","endLine":10,"endColumn":24},{"ruleId":"411","severity":1,"message":"452","line":10,"column":27,"nodeType":"413","messageId":"414","endLine":10,"endColumn":44},{"ruleId":"411","severity":1,"message":"453","line":11,"column":28,"nodeType":"413","messageId":"414","endLine":11,"endColumn":33},{"ruleId":"411","severity":1,"message":"454","line":12,"column":9,"nodeType":"413","messageId":"414","endLine":12,"endColumn":17},{"ruleId":"411","severity":1,"message":"455","line":3,"column":10,"nodeType":"413","messageId":"414","endLine":3,"endColumn":14},{"ruleId":"411","severity":1,"message":"456","line":6,"column":10,"nodeType":"413","messageId":"414","endLine":6,"endColumn":22},{"ruleId":"436","severity":1,"message":"457","line":20,"column":5,"nodeType":"438","endLine":20,"endColumn":7,"suggestions":"458"},{"ruleId":"436","severity":1,"message":"459","line":82,"column":6,"nodeType":"438","endLine":82,"endColumn":8,"suggestions":"460"},{"ruleId":"436","severity":1,"message":"459","line":100,"column":6,"nodeType":"438","endLine":100,"endColumn":8,"suggestions":"461"},{"ruleId":"436","severity":1,"message":"459","line":124,"column":6,"nodeType":"438","endLine":124,"endColumn":8,"suggestions":"462"},{"ruleId":"436","severity":1,"message":"459","line":136,"column":6,"nodeType":"438","endLine":136,"endColumn":8,"suggestions":"463"},{"ruleId":"411","severity":1,"message":"434","line":21,"column":26,"nodeType":"413","messageId":"414","endLine":21,"endColumn":43},{"ruleId":"411","severity":1,"message":"464","line":24,"column":10,"nodeType":"413","messageId":"414","endLine":24,"endColumn":20},{"ruleId":"411","severity":1,"message":"465","line":26,"column":22,"nodeType":"413","messageId":"414","endLine":26,"endColumn":35},{"ruleId":"411","severity":1,"message":"466","line":32,"column":10,"nodeType":"413","messageId":"414","endLine":32,"endColumn":16},{"ruleId":"436","severity":1,"message":"437","line":57,"column":6,"nodeType":"438","endLine":66,"endColumn":4,"suggestions":"467"},{"ruleId":"411","severity":1,"message":"468","line":6,"column":8,"nodeType":"413","messageId":"414","endLine":6,"endColumn":17},{"ruleId":"411","severity":1,"message":"469","line":15,"column":10,"nodeType":"413","messageId":"414","endLine":15,"endColumn":22},{"ruleId":"411","severity":1,"message":"470","line":17,"column":22,"nodeType":"413","messageId":"414","endLine":17,"endColumn":35},{"ruleId":"411","severity":1,"message":"471","line":18,"column":10,"nodeType":"413","messageId":"414","endLine":18,"endColumn":23},{"ruleId":"411","severity":1,"message":"472","line":18,"column":25,"nodeType":"413","messageId":"414","endLine":18,"endColumn":40},{"ruleId":"436","severity":1,"message":"473","line":38,"column":6,"nodeType":"438","endLine":38,"endColumn":21,"suggestions":"474"},{"ruleId":"411","severity":1,"message":"475","line":6,"column":10,"nodeType":"413","messageId":"414","endLine":6,"endColumn":25},{"ruleId":"411","severity":1,"message":"476","line":4,"column":16,"nodeType":"413","messageId":"414","endLine":4,"endColumn":21},{"ruleId":"411","severity":1,"message":"477","line":4,"column":30,"nodeType":"413","messageId":"414","endLine":4,"endColumn":37},{"ruleId":"411","severity":1,"message":"478","line":4,"column":39,"nodeType":"413","messageId":"414","endLine":4,"endColumn":45},{"ruleId":"411","severity":1,"message":"449","line":8,"column":10,"nodeType":"413","messageId":"414","endLine":8,"endColumn":19},{"ruleId":"436","severity":1,"message":"479","line":23,"column":6,"nodeType":"438","endLine":23,"endColumn":8,"suggestions":"480"},{"ruleId":"411","severity":1,"message":"449","line":8,"column":10,"nodeType":"413","messageId":"414","endLine":8,"endColumn":19},{"ruleId":"428","severity":1,"message":"429","line":32,"column":9,"nodeType":"427","endLine":32,"endColumn":28},{"ruleId":"411","severity":1,"message":"481","line":32,"column":10,"nodeType":"413","messageId":"414","endLine":32,"endColumn":21},{"ruleId":"411","severity":1,"message":"482","line":33,"column":10,"nodeType":"413","messageId":"414","endLine":33,"endColumn":25},{"ruleId":"436","severity":1,"message":"483","line":62,"column":6,"nodeType":"438","endLine":62,"endColumn":8,"suggestions":"484"},{"ruleId":"436","severity":1,"message":"483","line":78,"column":6,"nodeType":"438","endLine":78,"endColumn":8,"suggestions":"485"},{"ruleId":"436","severity":1,"message":"483","line":94,"column":6,"nodeType":"438","endLine":94,"endColumn":8,"suggestions":"486"},{"ruleId":"436","severity":1,"message":"483","line":107,"column":6,"nodeType":"438","endLine":107,"endColumn":18,"suggestions":"487"},{"ruleId":"436","severity":1,"message":"483","line":120,"column":6,"nodeType":"438","endLine":120,"endColumn":8,"suggestions":"488"},{"ruleId":"436","severity":1,"message":"489","line":147,"column":6,"nodeType":"438","endLine":147,"endColumn":34,"suggestions":"490"},{"ruleId":"436","severity":1,"message":"491","line":12,"column":6,"nodeType":"438","endLine":12,"endColumn":17,"suggestions":"492"},{"ruleId":"436","severity":1,"message":"493","line":25,"column":10,"nodeType":"438","endLine":25,"endColumn":12,"suggestions":"494"},{"ruleId":"425","severity":1,"message":"426","line":52,"column":7,"nodeType":"427","endLine":52,"endColumn":19},{"ruleId":"411","severity":1,"message":"495","line":11,"column":10,"nodeType":"413","messageId":"414","endLine":11,"endColumn":22},{"ruleId":"425","severity":1,"message":"426","line":190,"column":32,"nodeType":"427","endLine":190,"endColumn":44},{"ruleId":"411","severity":1,"message":"496","line":10,"column":10,"nodeType":"413","messageId":"414","endLine":10,"endColumn":20},{"ruleId":"411","severity":1,"message":"455","line":4,"column":10,"nodeType":"413","messageId":"414","endLine":4,"endColumn":14},{"ruleId":"411","severity":1,"message":"424","line":4,"column":16,"nodeType":"413","messageId":"414","endLine":4,"endColumn":23},{"ruleId":"436","severity":1,"message":"497","line":31,"column":6,"nodeType":"438","endLine":31,"endColumn":8,"suggestions":"498"},{"ruleId":"425","severity":1,"message":"426","line":86,"column":19,"nodeType":"427","endLine":86,"endColumn":31},{"ruleId":"425","severity":1,"message":"426","line":110,"column":21,"nodeType":"427","endLine":110,"endColumn":33},{"ruleId":"436","severity":1,"message":"499","line":29,"column":6,"nodeType":"438","endLine":29,"endColumn":8,"suggestions":"500"},{"ruleId":"411","severity":1,"message":"501","line":7,"column":10,"nodeType":"413","messageId":"414","endLine":7,"endColumn":18},{"ruleId":"411","severity":1,"message":"449","line":14,"column":10,"nodeType":"413","messageId":"414","endLine":14,"endColumn":19},{"ruleId":"411","severity":1,"message":"502","line":1,"column":25,"nodeType":"413","messageId":"414","endLine":1,"endColumn":31},{"ruleId":"411","severity":1,"message":"423","line":2,"column":17,"nodeType":"413","messageId":"414","endLine":2,"endColumn":25},{"ruleId":"411","severity":1,"message":"445","line":1,"column":17,"nodeType":"413","messageId":"414","endLine":1,"endColumn":26},{"ruleId":"411","severity":1,"message":"423","line":1,"column":28,"nodeType":"413","messageId":"414","endLine":1,"endColumn":36},{"ruleId":"411","severity":1,"message":"503","line":4,"column":10,"nodeType":"413","messageId":"414","endLine":4,"endColumn":18},{"ruleId":"411","severity":1,"message":"456","line":7,"column":10,"nodeType":"413","messageId":"414","endLine":7,"endColumn":22},"@typescript-eslint/no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'Login' is defined but never used.","'current' is defined but never used.","@typescript-eslint/no-array-constructor","The array literal notation [] is preferable.","NewExpression","useLiteral",{"range":"504","text":"505"},"'useState' is defined but never used.","'NavLink' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'DescriptionReview' is defined but never used.","'RelatedProduct' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'setProductPerPage' is assigned a value but never used.","'setMobile' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'productPerPage'. Either include it or remove the dependency array.","ArrayExpression",["506"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'removeItem' is defined but never used.","'images' is assigned a value but never used.","'setImages' is assigned a value but never used.","'httpError' is assigned a value but never used.","'setHttpError' is assigned a value but never used.","'productIdImage' is assigned a value but never used.","'setProductIdImage' is assigned a value but never used.","'hello' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'Link' is defined but never used.","'messageError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'messageId'. Either include it or remove the dependency array.",["507"],"React Hook useEffect has a missing dependency: 'productId'. Either include it or remove the dependency array.",["508"],["509"],["510"],["511"],"'categories' is assigned a value but never used.","'setCategoryId' is assigned a value but never used.","'mobile' is assigned a value but never used.",["512"],"'RoleModel' is defined but never used.","'errorMessage' is assigned a value but never used.","'setModConfirm' is assigned a value but never used.","'currentUserId' is assigned a value but never used.","'setCurretUserId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'accessToken' and 'tokenType'. Either include them or remove the dependency array.",["513"],"'homepageElement' is assigned a value but never used.","'Input' is defined but never used.","'Message' is defined but never used.","'Select' is defined but never used.","React Hook useEffect has a missing dependency: 'checkoutId'. Either include it or remove the dependency array.",["514"],"'reviewError' is assigned a value but never used.","'reviewPostError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.productId'. Either include it or remove the dependency array.",["515"],["516"],["517"],["518"],["519"],"React Hook useEffect has missing dependencies: 'props.productId', 'reviews', and 'userEmail'. Either include them or remove the dependency array.",["520"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["521"],"React Hook useEffect has a missing dependency: 'props.item.item.productId'. Either include it or remove the dependency array.",["522"],"'productError' is assigned a value but never used.","'fetchError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.product.productId'. Either include it or remove the dependency array.",["523"],"React Hook useEffect has missing dependencies: 'accessToken', 'props.roleID', and 'tokenType'. Either include them or remove the dependency array.",["524"],"'Redirect' is defined but never used.","'Header' is defined but never used.","'Carousel' is defined but never used.",[730,741],"[]",{"desc":"525","fix":"526"},{"desc":"527","fix":"528"},{"desc":"529","fix":"530"},{"desc":"529","fix":"531"},{"desc":"529","fix":"532"},{"desc":"529","fix":"533"},{"desc":"534","fix":"535"},{"desc":"536","fix":"537"},{"desc":"538","fix":"539"},{"desc":"540","fix":"541"},{"desc":"540","fix":"542"},{"desc":"540","fix":"543"},{"desc":"544","fix":"545"},{"desc":"540","fix":"546"},{"desc":"547","fix":"548"},{"desc":"549","fix":"550"},{"desc":"551","fix":"552"},{"desc":"553","fix":"554"},{"desc":"555","fix":"556"},"Update the dependencies array to be: [searchTitle, categoryId, minPrice, maxPrice, currentPage, gridView, sortUrl, productPerPage]",{"range":"557","text":"558"},"Update the dependencies array to be: [messageId]",{"range":"559","text":"560"},"Update the dependencies array to be: [productId]",{"range":"561","text":"562"},{"range":"563","text":"562"},{"range":"564","text":"562"},{"range":"565","text":"562"},"Update the dependencies array to be: [searchTitle, categoryId, minPrice, maxPrice, currentPage, gridView, sortUrl, deleteConfirm, productPerPage]",{"range":"566","text":"567"},"Update the dependencies array to be: [accessToken, deleteConfirm, tokenType]",{"range":"568","text":"569"},"Update the dependencies array to be: [checkoutId]",{"range":"570","text":"571"},"Update the dependencies array to be: [props.productId]",{"range":"572","text":"573"},{"range":"574","text":"573"},{"range":"575","text":"573"},"Update the dependencies array to be: [categoryId, props.productId]",{"range":"576","text":"577"},{"range":"578","text":"573"},"Update the dependencies array to be: [productRank, props.productId, reviewSuccess, reviews, userEmail]",{"range":"579","text":"580"},"Update the dependencies array to be: [cartItems, dispatch]",{"range":"581","text":"582"},"Update the dependencies array to be: [props.item.item.productId]",{"range":"583","text":"584"},"Update the dependencies array to be: [props.product.productId]",{"range":"585","text":"586"},"Update the dependencies array to be: [accessToken, props.roleID, tokenType]",{"range":"587","text":"588"},[1828,1946],"[searchTitle, categoryId, minPrice, maxPrice, currentPage, gridView, sortUrl, productPerPage]",[753,755],"[messageId]",[3380,3382],"[productId]",[4003,4005],[4854,4856],[5307,5309],[2110,2248],"[searchTitle, categoryId, minPrice, maxPrice, currentPage, gridView, sortUrl, deleteConfirm, productPerPage]",[1386,1401],"[accessToken, deleteConfirm, tokenType]",[930,932],"[checkoutId]",[2807,2809],"[props.productId]",[3359,3361],[3889,3891],[4468,4480],"[categoryId, props.productId]",[5018,5020],[5867,5895],"[productRank, props.productId, reviewSuccess, reviews, userEmail]",[449,460],"[cartItems, dispatch]",[902,904],"[props.item.item.productId]",[1060,1062],"[props.product.productId]",[1031,1033],"[accessToken, props.roleID, tokenType]"]